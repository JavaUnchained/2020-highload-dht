<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (1,639 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="10.0" y="915.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="10.0" y="899.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="10.0" y="883.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="10.0" y="867.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="10.0" y="851.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="10.0" y="835.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="10.0" y="819.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="10.0" y="803.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="10.0" y="787.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="10.0" y="771.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="10.0" y="755.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,638 samples, 99.94%)</title><rect x="10.7" y="915.0" width="1179.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.7" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1 samples, 0.06%)</title><rect x="15.0" y="899.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (405 samples, 24.71%)</title><rect x="15.8" y="899.0" width="291.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.8" y="910.0">one/nio/net/NativeSelector.select</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (381 samples, 23.25%)</title><rect x="33.0" y="883.0" width="274.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.0" y="894.0">one/nio/net/NativeSelector.epollWait</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.55%)</title><rect x="39.5" y="867.0" width="6.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="42.5" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.12%)</title><rect x="46.0" y="867.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="49.0" y="878.0"></text>
</g>
<g>
<title>clock_gettime (14 samples, 0.85%)</title><rect x="47.4" y="867.0" width="10.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="50.4" y="878.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.43%)</title><rect x="52.5" y="851.0" width="5.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="55.5" y="862.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.43%)</title><rect x="52.5" y="835.0" width="5.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="55.5" y="846.0"></text>
</g>
<g>
<title>epoll_wait (346 samples, 21.11%)</title><rect x="57.5" y="867.0" width="249.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="60.5" y="878.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (330 samples, 20.13%)</title><rect x="69.0" y="851.0" width="237.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="72.0" y="862.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.12%)</title><rect x="69.0" y="835.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.0" y="846.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="70.5" y="835.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="73.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (327 samples, 19.95%)</title><rect x="71.2" y="835.0" width="235.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.2" y="846.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (317 samples, 19.34%)</title><rect x="78.4" y="819.0" width="228.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="81.4" y="830.0">__x64_sys_epoll_wait</text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="78.4" y="803.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="81.4" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (315 samples, 19.22%)</title><rect x="79.1" y="803.0" width="226.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.1" y="814.0">do_epoll_wait</text>
</g>
<g>
<title>__fdget (3 samples, 0.18%)</title><rect x="79.1" y="787.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="82.1" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="79.1" y="771.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.1" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="79.8" y="771.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.8" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="79.8" y="755.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="82.8" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="81.3" y="787.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="84.3" y="798.0"></text>
</g>
<g>
<title>ep_poll (311 samples, 18.97%)</title><rect x="82.0" y="787.0" width="223.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="85.0" y="798.0">ep_poll</text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.06%)</title><rect x="84.2" y="771.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="87.2" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (31 samples, 1.89%)</title><rect x="84.9" y="771.0" width="22.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="87.9" y="782.0">e..</text>
</g>
<g>
<title>ep_send_events_proc (26 samples, 1.59%)</title><rect x="86.3" y="755.0" width="18.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="89.3" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (17 samples, 1.04%)</title><rect x="89.9" y="739.0" width="12.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="92.9" y="750.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.73%)</title><rect x="92.1" y="723.0" width="8.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="95.1" y="734.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.18%)</title><rect x="96.4" y="707.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.4" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.18%)</title><rect x="98.6" y="707.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="101.6" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.12%)</title><rect x="100.7" y="723.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.7" y="734.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.24%)</title><rect x="102.2" y="739.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.2" y="750.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.18%)</title><rect x="105.0" y="755.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="108.0" y="766.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="106.5" y="739.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.5" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.06%)</title><rect x="107.2" y="771.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.2" y="782.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.31%)</title><rect x="107.9" y="771.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="110.9" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="111.5" y="771.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="114.5" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (268 samples, 16.35%)</title><rect x="112.2" y="771.0" width="193.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="115.2" y="782.0">schedule_hrtimeout_range</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (268 samples, 16.35%)</title><rect x="112.2" y="755.0" width="193.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="115.2" y="766.0">schedule_hrtimeout_range_..</text>
</g>
<g>
<title>schedule (265 samples, 16.17%)</title><rect x="114.4" y="739.0" width="190.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="117.4" y="750.0">schedule</text>
</g>
<g>
<title>__schedule (265 samples, 16.17%)</title><rect x="114.4" y="723.0" width="190.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="117.4" y="734.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (261 samples, 15.92%)</title><rect x="117.3" y="707.0" width="187.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="120.3" y="718.0">finish_task_switch</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.06%)</title><rect x="305.2" y="771.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="308.2" y="782.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.06%)</title><rect x="305.9" y="803.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="308.9" y="814.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.06%)</title><rect x="306.6" y="867.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="309.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,223 samples, 74.62%)</title><rect x="307.3" y="899.0" width="880.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.3" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,221 samples, 74.50%)</title><rect x="308.8" y="883.0" width="879.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.8" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,055 samples, 64.37%)</title><rect x="313.1" y="867.0" width="759.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.1" y="878.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,004 samples, 61.26%)</title><rect x="323.9" y="851.0" width="722.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.9" y="862.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,001 samples, 61.07%)</title><rect x="326.1" y="835.0" width="720.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.1" y="846.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (979 samples, 59.73%)</title><rect x="326.1" y="819.0" width="704.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.1" y="830.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (544 samples, 33.19%)</title><rect x="326.1" y="803.0" width="391.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.1" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.12%)</title><rect x="328.9" y="787.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="328.9" y="771.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="328.9" y="755.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (533 samples, 32.52%)</title><rect x="330.4" y="787.0" width="383.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.4" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 1.22%)</title><rect x="330.4" y="771.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.55%)</title><rect x="338.3" y="755.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.55%)</title><rect x="338.3" y="739.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.55%)</title><rect x="338.3" y="723.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.55%)</title><rect x="338.3" y="707.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.55%)</title><rect x="338.3" y="691.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.3" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="344.1" y="675.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="347.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (513 samples, 31.30%)</title><rect x="344.8" y="771.0" width="369.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.8" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (509 samples, 31.06%)</title><rect x="347.7" y="755.0" width="366.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.7" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (3 samples, 0.18%)</title><rect x="347.7" y="739.0" width="2.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="350.7" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.18%)</title><rect x="347.7" y="723.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="350.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (503 samples, 30.69%)</title><rect x="349.8" y="739.0" width="362.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.8" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (502 samples, 30.63%)</title><rect x="350.5" y="723.0" width="361.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.5" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.49%)</title><rect x="354.1" y="707.0" width="5.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="357.1" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.73%)</title><rect x="359.9" y="707.0" width="8.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="362.9" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.12%)</title><rect x="364.2" y="691.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="367.2" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.24%)</title><rect x="365.7" y="691.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="368.7" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="366.4" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="369.4" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.12%)</title><rect x="367.1" y="675.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="370.1" y="686.0"></text>
</g>
<g>
<title>send (476 samples, 29.04%)</title><rect x="368.5" y="707.0" width="342.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="371.5" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (466 samples, 28.43%)</title><rect x="375.7" y="691.0" width="335.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="378.7" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.12%)</title><rect x="375.7" y="675.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="378.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (464 samples, 28.31%)</title><rect x="377.2" y="675.0" width="334.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="380.2" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (430 samples, 26.24%)</title><rect x="387.3" y="659.0" width="309.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="390.3" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (428 samples, 26.11%)</title><rect x="387.3" y="643.0" width="308.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="390.3" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (419 samples, 25.56%)</title><rect x="389.4" y="627.0" width="301.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="392.4" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="389.4" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="392.4" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (413 samples, 25.20%)</title><rect x="390.1" y="611.0" width="297.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.1" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (411 samples, 25.08%)</title><rect x="391.6" y="595.0" width="295.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.6" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.06%)</title><rect x="392.3" y="579.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="395.3" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.06%)</title><rect x="393.0" y="579.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="396.0" y="590.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.18%)</title><rect x="393.7" y="579.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="396.7" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.06%)</title><rect x="395.9" y="579.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="398.9" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.18%)</title><rect x="396.6" y="579.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="399.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (400 samples, 24.41%)</title><rect x="398.8" y="579.0" width="288.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="401.8" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="401.7" y="563.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="404.7" y="574.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.18%)</title><rect x="403.1" y="563.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="406.1" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.12%)</title><rect x="403.8" y="547.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="406.8" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.06%)</title><rect x="405.3" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="408.3" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.18%)</title><rect x="406.0" y="563.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.0" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.12%)</title><rect x="406.0" y="547.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="409.0" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.06%)</title><rect x="407.4" y="547.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="410.4" y="558.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.12%)</title><rect x="408.1" y="563.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="411.1" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.12%)</title><rect x="409.6" y="563.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="412.6" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.12%)</title><rect x="409.6" y="547.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="412.6" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (47 samples, 2.87%)</title><rect x="411.0" y="563.0" width="33.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="414.0" y="574.0">sk..</text>
</g>
<g>
<title>__alloc_skb (41 samples, 2.50%)</title><rect x="413.9" y="547.0" width="29.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="416.9" y="558.0">__..</text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.12%)</title><rect x="418.2" y="531.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="421.2" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (12 samples, 0.73%)</title><rect x="419.7" y="531.0" width="8.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="422.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.31%)</title><rect x="420.4" y="515.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="423.4" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="423.3" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="426.3" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="424.0" y="515.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="427.0" y="526.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.06%)</title><rect x="424.7" y="515.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.7" y="526.0"></text>
</g>
<g>
<title>memset (4 samples, 0.24%)</title><rect x="425.4" y="515.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="428.4" y="526.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.06%)</title><rect x="428.3" y="531.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="431.3" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.18%)</title><rect x="429.0" y="531.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="432.0" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.12%)</title><rect x="431.2" y="531.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="434.2" y="542.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.12%)</title><rect x="431.2" y="515.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="434.2" y="526.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (4 samples, 0.24%)</title><rect x="432.6" y="531.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="435.6" y="542.0"></text>
</g>
<g>
<title>memset (6 samples, 0.37%)</title><rect x="435.5" y="531.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="438.5" y="542.0"></text>
</g>
<g>
<title>should_failslab (5 samples, 0.31%)</title><rect x="439.8" y="531.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.8" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.12%)</title><rect x="443.4" y="547.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="446.4" y="558.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.24%)</title><rect x="444.9" y="563.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="447.9" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.06%)</title><rect x="447.0" y="547.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="450.0" y="558.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.06%)</title><rect x="447.7" y="563.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="450.7" y="574.0"></text>
</g>
<g>
<title>tcp_push (320 samples, 19.52%)</title><rect x="448.5" y="563.0" width="230.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.5" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (318 samples, 19.40%)</title><rect x="448.5" y="547.0" width="228.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="451.5" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (2 samples, 0.12%)</title><rect x="449.9" y="531.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="452.9" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (314 samples, 19.16%)</title><rect x="451.3" y="531.0" width="226.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="454.3" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (287 samples, 17.51%)</title><rect x="454.9" y="515.0" width="206.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="457.9" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="461.4" y="499.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.4" y="510.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.06%)</title><rect x="462.1" y="499.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="465.1" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.18%)</title><rect x="462.8" y="499.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.8" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (269 samples, 16.41%)</title><rect x="465.0" y="499.0" width="193.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="468.0" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (266 samples, 16.23%)</title><rect x="465.7" y="483.0" width="191.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="468.7" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.18%)</title><rect x="466.4" y="467.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.4" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.18%)</title><rect x="466.4" y="451.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.4" y="462.0"></text>
</g>
<g>
<title>ip_local_out (259 samples, 15.80%)</title><rect x="468.6" y="467.0" width="186.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.6" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.24%)</title><rect x="469.3" y="451.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.3" y="462.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.18%)</title><rect x="470.0" y="435.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="473.0" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.12%)</title><rect x="472.2" y="451.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="475.2" y="462.0"></text>
</g>
<g>
<title>ip_output (252 samples, 15.38%)</title><rect x="473.6" y="451.0" width="181.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="476.6" y="462.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.18%)</title><rect x="474.4" y="435.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (248 samples, 15.13%)</title><rect x="476.5" y="435.0" width="178.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="479.5" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.24%)</title><rect x="476.5" y="419.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="479.5" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (243 samples, 14.83%)</title><rect x="479.4" y="419.0" width="175.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.4" y="430.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (239 samples, 14.58%)</title><rect x="482.3" y="403.0" width="172.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.3" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="494.5" y="387.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="497.5" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (192 samples, 11.71%)</title><rect x="495.2" y="387.0" width="138.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="498.2" y="398.0">__local_bh_enable..</text>
</g>
<g>
<title>do_softirq.part.0 (192 samples, 11.71%)</title><rect x="495.2" y="371.0" width="138.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="498.2" y="382.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (190 samples, 11.59%)</title><rect x="496.7" y="355.0" width="136.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="499.7" y="366.0">do_softirq_own_st..</text>
</g>
<g>
<title>__softirqentry_text_start (186 samples, 11.35%)</title><rect x="496.7" y="339.0" width="133.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="499.7" y="350.0">__softirqentry_te..</text>
</g>
<g>
<title>net_rx_action (181 samples, 11.04%)</title><rect x="498.8" y="323.0" width="130.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.8" y="334.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.06%)</title><rect x="501.7" y="307.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="504.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.18%)</title><rect x="502.4" y="307.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="505.4" y="318.0"></text>
</g>
<g>
<title>process_backlog (173 samples, 10.56%)</title><rect x="504.6" y="307.0" width="124.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="507.6" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (170 samples, 10.37%)</title><rect x="506.0" y="291.0" width="122.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="509.0" y="302.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (168 samples, 10.25%)</title><rect x="507.5" y="275.0" width="120.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="510.5" y="286.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.31%)</title><rect x="507.5" y="259.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="510.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv (163 samples, 9.95%)</title><rect x="511.1" y="259.0" width="117.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.1" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="511.8" y="243.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="514.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.18%)</title><rect x="512.5" y="243.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="515.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (158 samples, 9.64%)</title><rect x="514.7" y="243.0" width="113.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="517.7" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (157 samples, 9.58%)</title><rect x="514.7" y="227.0" width="113.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.7" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (157 samples, 9.58%)</title><rect x="514.7" y="211.0" width="113.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.7" y="222.0">ip_local_deliv..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (156 samples, 9.52%)</title><rect x="514.7" y="195.0" width="112.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="517.7" y="206.0">ip_protocol_de..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="514.7" y="179.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="517.7" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.31%)</title><rect x="515.4" y="179.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="518.4" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="519.0" y="179.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="522.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="519.7" y="179.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="522.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.06%)</title><rect x="520.4" y="179.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="523.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (147 samples, 8.97%)</title><rect x="521.2" y="179.0" width="105.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="524.2" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.12%)</title><rect x="523.3" y="163.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="526.3" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.31%)</title><rect x="524.8" y="163.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="527.8" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.12%)</title><rect x="526.9" y="147.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="529.9" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.06%)</title><rect x="528.4" y="163.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="531.4" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="529.1" y="163.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="532.1" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (11 samples, 0.67%)</title><rect x="529.8" y="163.0" width="7.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="532.8" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.49%)</title><rect x="530.5" y="147.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="533.5" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.06%)</title><rect x="536.3" y="147.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="539.3" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="537.0" y="147.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="540.0" y="158.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.06%)</title><rect x="537.7" y="163.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="540.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (120 samples, 7.32%)</title><rect x="538.4" y="163.0" width="86.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="541.4" y="174.0">tcp_v4_do_..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.06%)</title><rect x="539.2" y="147.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="542.2" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.06%)</title><rect x="539.9" y="147.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="542.9" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="540.6" y="147.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="543.6" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (116 samples, 7.08%)</title><rect x="541.3" y="147.0" width="83.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.3" y="158.0">tcp_rcv_e..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.24%)</title><rect x="544.9" y="131.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="547.9" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.24%)</title><rect x="544.9" y="115.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="547.9" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="544.9" y="99.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="547.9" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="546.4" y="99.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="549.4" y="110.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="547.8" y="131.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="550.8" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.06%)</title><rect x="548.5" y="131.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="551.5" y="142.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.06%)</title><rect x="549.2" y="131.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="552.2" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.24%)</title><rect x="550.0" y="131.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="553.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack (43 samples, 2.62%)</title><rect x="552.8" y="131.0" width="31.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.8" y="142.0">tc..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="557.9" y="115.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="560.9" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.12%)</title><rect x="558.6" y="115.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="561.6" y="126.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.06%)</title><rect x="560.0" y="115.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.0" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.06%)</title><rect x="560.8" y="115.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="563.8" y="126.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.06%)</title><rect x="561.5" y="115.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="564.5" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.06%)</title><rect x="562.2" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.2" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (25 samples, 1.53%)</title><rect x="562.9" y="115.0" width="18.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="565.9" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.85%)</title><rect x="567.2" y="99.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="570.2" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.24%)</title><rect x="567.2" y="83.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="570.2" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.24%)</title><rect x="567.2" y="67.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="570.2" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.18%)</title><rect x="570.1" y="83.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="573.1" y="94.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.24%)</title><rect x="572.3" y="83.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="575.3" y="94.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.24%)</title><rect x="572.3" y="67.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="575.3" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.12%)</title><rect x="573.7" y="51.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="576.7" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.12%)</title><rect x="573.7" y="35.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="576.7" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.06%)</title><rect x="575.2" y="83.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.2" y="94.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.12%)</title><rect x="575.9" y="83.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="578.9" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.18%)</title><rect x="577.3" y="99.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="580.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.12%)</title><rect x="579.5" y="99.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="582.5" y="110.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="580.9" y="115.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="583.9" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.18%)</title><rect x="581.6" y="115.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.6" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.12%)</title><rect x="583.8" y="131.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="586.8" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (46 samples, 2.81%)</title><rect x="585.2" y="131.0" width="33.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="588.2" y="142.0">tc..</text>
</g>
<g>
<title>sock_def_readable (46 samples, 2.81%)</title><rect x="585.2" y="115.0" width="33.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.2" y="126.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (45 samples, 2.75%)</title><rect x="586.0" y="99.0" width="32.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="589.0" y="110.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (45 samples, 2.75%)</title><rect x="586.0" y="83.0" width="32.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.0" y="94.0">__..</text>
</g>
<g>
<title>__lock_text_start (43 samples, 2.62%)</title><rect x="586.0" y="67.0" width="30.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="589.0" y="78.0">__..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.12%)</title><rect x="616.9" y="67.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="619.9" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.18%)</title><rect x="618.4" y="131.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.4" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.12%)</title><rect x="620.5" y="131.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.5" y="142.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.12%)</title><rect x="620.5" y="115.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="623.5" y="126.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.12%)</title><rect x="622.0" y="131.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="625.0" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.12%)</title><rect x="623.4" y="131.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.06%)</title><rect x="624.8" y="163.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="627.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.12%)</title><rect x="625.6" y="163.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="628.6" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.06%)</title><rect x="627.0" y="195.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="630.0" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.06%)</title><rect x="627.7" y="227.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="630.7" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.06%)</title><rect x="628.4" y="291.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="631.4" y="302.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.12%)</title><rect x="629.2" y="323.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="632.2" y="334.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.24%)</title><rect x="630.6" y="339.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="633.6" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (29 samples, 1.77%)</title><rect x="633.5" y="387.0" width="20.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="636.5" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (29 samples, 1.77%)</title><rect x="633.5" y="371.0" width="20.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.5" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (17 samples, 1.04%)</title><rect x="637.8" y="355.0" width="12.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="640.8" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="638.5" y="339.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.55%)</title><rect x="639.2" y="339.0" width="6.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="642.2" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.06%)</title><rect x="640.7" y="323.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.7" y="334.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.18%)</title><rect x="641.4" y="323.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="644.4" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.18%)</title><rect x="641.4" y="307.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.4" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.18%)</title><rect x="641.4" y="291.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="644.4" y="302.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.06%)</title><rect x="643.6" y="323.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="646.6" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.12%)</title><rect x="644.3" y="323.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="647.3" y="334.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="645.7" y="339.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.7" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (4 samples, 0.24%)</title><rect x="646.4" y="339.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="649.4" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.06%)</title><rect x="649.3" y="339.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="652.3" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.18%)</title><rect x="650.0" y="355.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="653.0" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.06%)</title><rect x="652.2" y="355.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="655.2" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.12%)</title><rect x="652.9" y="355.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.9" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="654.4" y="419.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="657.4" y="430.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.18%)</title><rect x="655.1" y="467.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.1" y="478.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.12%)</title><rect x="657.2" y="483.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="660.2" y="494.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.12%)</title><rect x="658.7" y="499.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="661.7" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.06%)</title><rect x="658.7" y="483.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="661.7" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.06%)</title><rect x="659.4" y="483.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="662.4" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.06%)</title><rect x="660.1" y="499.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="663.1" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.06%)</title><rect x="660.8" y="499.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="663.8" y="510.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="661.6" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="664.6" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.12%)</title><rect x="662.3" y="515.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="665.3" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.12%)</title><rect x="663.7" y="515.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="666.7" y="526.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.12%)</title><rect x="665.2" y="515.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="668.2" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.12%)</title><rect x="666.6" y="515.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="669.6" y="526.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="668.0" y="515.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="671.0" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.31%)</title><rect x="668.8" y="515.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="671.8" y="526.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.06%)</title><rect x="670.2" y="499.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="673.2" y="510.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.06%)</title><rect x="670.9" y="499.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="673.9" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="671.6" y="499.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="674.6" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="671.6" y="483.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="674.6" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="671.6" y="467.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="674.6" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.31%)</title><rect x="672.4" y="515.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="675.4" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.12%)</title><rect x="676.0" y="515.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.0" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.12%)</title><rect x="677.4" y="547.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="680.4" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.61%)</title><rect x="678.8" y="563.0" width="7.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="681.8" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.18%)</title><rect x="678.8" y="547.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="681.8" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.43%)</title><rect x="681.0" y="547.0" width="5.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="684.0" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.31%)</title><rect x="682.4" y="531.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="685.4" y="542.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.06%)</title><rect x="686.0" y="563.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="689.0" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.06%)</title><rect x="686.8" y="579.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="689.8" y="590.0"></text>
</g>
<g>
<title>inet_send_prepare (4 samples, 0.24%)</title><rect x="687.5" y="611.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.5" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="690.4" y="611.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="693.4" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="690.4" y="595.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="693.4" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="690.4" y="579.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.4" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.37%)</title><rect x="691.1" y="627.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="694.1" y="638.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.18%)</title><rect x="691.1" y="611.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="694.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.18%)</title><rect x="691.1" y="595.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="694.1" y="606.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.18%)</title><rect x="691.1" y="579.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="694.1" y="590.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.18%)</title><rect x="693.2" y="611.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="696.2" y="622.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="695.4" y="643.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="698.4" y="654.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="696.1" y="643.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="699.1" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (20 samples, 1.22%)</title><rect x="696.8" y="659.0" width="14.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="699.8" y="670.0"></text>
</g>
<g>
<title>schedule (20 samples, 1.22%)</title><rect x="696.8" y="643.0" width="14.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="699.8" y="654.0"></text>
</g>
<g>
<title>__schedule (20 samples, 1.22%)</title><rect x="696.8" y="627.0" width="14.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="699.8" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (20 samples, 1.22%)</title><rect x="696.8" y="611.0" width="14.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="699.8" y="622.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.06%)</title><rect x="711.2" y="707.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="714.2" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.18%)</title><rect x="712.0" y="739.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="715.0" y="750.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.18%)</title><rect x="712.0" y="723.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="715.0" y="734.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.18%)</title><rect x="712.0" y="707.0" width="2.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="715.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.24%)</title><rect x="714.1" y="787.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="716.3" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.06%)</title><rect x="717.0" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="717.0" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.37%)</title><rect x="717.7" y="803.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="717.7" y="787.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.12%)</title><rect x="717.7" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.12%)</title><rect x="717.7" y="755.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.24%)</title><rect x="719.2" y="787.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.24%)</title><rect x="719.2" y="771.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.24%)</title><rect x="719.2" y="755.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.2" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.24%)</title><rect x="719.2" y="739.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="722.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.12%)</title><rect x="722.0" y="803.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="725.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (427 samples, 26.05%)</title><rect x="723.5" y="803.0" width="307.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.5" y="814.0">ru/mail/polis/service/kovalkov/ServiceImp..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="725.6" y="787.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.06%)</title><rect x="725.6" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.06%)</title><rect x="725.6" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.6" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="725.6" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.24%)</title><rect x="726.4" y="787.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.24%)</title><rect x="726.4" y="771.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.24%)</title><rect x="726.4" y="755.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.24%)</title><rect x="726.4" y="739.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="728.5" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="728.5" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (419 samples, 25.56%)</title><rect x="729.2" y="787.0" width="301.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.2" y="798.0">ru/mail/polis/dao/kovalkov/DAOImpl.get</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.49%)</title><rect x="729.2" y="771.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.49%)</title><rect x="729.2" y="755.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.49%)</title><rect x="729.2" y="739.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.49%)</title><rect x="729.2" y="723.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.37%)</title><rect x="730.7" y="707.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.24%)</title><rect x="731.4" y="691.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.4" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="732.8" y="675.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="735.8" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="734.3" y="691.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="737.3" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (409 samples, 24.95%)</title><rect x="735.0" y="771.0" width="294.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="738.0" y="782.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (409 samples, 24.95%)</title><rect x="735.0" y="755.0" width="294.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.0" y="766.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.12%)</title><rect x="736.4" y="739.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="739.4" y="750.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (364 samples, 22.21%)</title><rect x="737.9" y="739.0" width="262.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="740.9" y="750.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni15761288266948979791.so (3 samples, 0.18%)</title><rect x="743.6" y="723.0" width="2.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="746.6" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.06%)</title><rect x="745.8" y="723.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="748.8" y="734.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.24%)</title><rect x="746.5" y="723.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="749.5" y="734.0"></text>
</g>
<g>
<title>cfree (4 samples, 0.24%)</title><rect x="749.4" y="723.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="752.4" y="734.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.06%)</title><rect x="752.3" y="723.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="755.3" y="734.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.12%)</title><rect x="753.0" y="723.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="756.0" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.18%)</title><rect x="754.4" y="723.0" width="2.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="757.4" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.18%)</title><rect x="756.6" y="723.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="759.6" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (3 samples, 0.18%)</title><rect x="758.7" y="723.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="761.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.24%)</title><rect x="760.9" y="723.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="763.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (2 samples, 0.12%)</title><rect x="763.8" y="723.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="766.8" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (324 samples, 19.77%)</title><rect x="765.2" y="723.0" width="233.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="768.2" y="734.0">rocksdb_get_helper(JNIEnv_*, ro..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.12%)</title><rect x="768.8" y="707.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="771.8" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.31%)</title><rect x="770.3" y="707.0" width="3.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="773.3" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.06%)</title><rect x="773.1" y="691.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="776.1" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="773.1" y="675.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="776.1" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="773.1" y="659.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="776.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="773.1" y="643.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="776.1" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.12%)</title><rect x="773.9" y="707.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="776.9" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="773.9" y="691.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="776.9" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="774.6" y="691.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="777.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.12%)</title><rect x="775.3" y="707.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="778.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (259 samples, 15.80%)</title><rect x="776.7" y="707.0" width="186.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="779.7" y="718.0">rocksdb::DB::Get(rocksdb..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.06%)</title><rect x="777.5" y="691.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="780.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (257 samples, 15.68%)</title><rect x="778.2" y="691.0" width="185.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="781.2" y="702.0">rocksdb::DB::Get(rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (254 samples, 15.50%)</title><rect x="780.3" y="675.0" width="182.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="783.3" y="686.0">rocksdb::DBImpl::Get(roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (254 samples, 15.50%)</title><rect x="780.3" y="659.0" width="182.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="783.3" y="670.0">rocksdb::DBImpl::Get(roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.12%)</title><rect x="780.3" y="643.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="783.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (6 samples, 0.37%)</title><rect x="781.8" y="643.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="784.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) [clone .plt] (2 samples, 0.12%)</title><rect x="786.1" y="643.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="789.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (8 samples, 0.49%)</title><rect x="787.5" y="643.0" width="5.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="790.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.12%)</title><rect x="793.3" y="643.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="796.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.12%)</title><rect x="794.7" y="643.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="797.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (215 samples, 13.12%)</title><rect x="796.2" y="643.0" width="154.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="799.2" y="654.0">rocksdb::DBImpl::Get..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="806.3" y="627.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="809.3" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.49%)</title><rect x="807.0" y="627.0" width="5.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="810.0" y="638.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.06%)</title><rect x="812.7" y="627.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="815.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (12 samples, 0.73%)</title><rect x="813.5" y="627.0" width="8.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="816.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.12%)</title><rect x="817.8" y="611.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="820.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() [clone .plt] (1 samples, 0.06%)</title><rect x="819.2" y="611.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="822.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.12%)</title><rect x="819.9" y="611.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="822.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.06%)</title><rect x="821.4" y="611.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="824.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.06%)</title><rect x="821.4" y="595.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="824.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.06%)</title><rect x="822.1" y="627.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="825.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) [clone .plt] (3 samples, 0.18%)</title><rect x="822.8" y="627.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="825.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.06%)</title><rect x="825.0" y="627.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="828.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (8 samples, 0.49%)</title><rect x="825.7" y="627.0" width="5.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="828.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (5 samples, 0.31%)</title><rect x="825.7" y="611.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="828.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (3 samples, 0.18%)</title><rect x="825.7" y="595.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="828.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.06%)</title><rect x="827.9" y="595.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="830.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.06%)</title><rect x="828.6" y="595.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="831.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.06%)</title><rect x="829.3" y="611.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="832.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="830.0" y="611.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="833.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.06%)</title><rect x="830.7" y="611.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="833.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.12%)</title><rect x="831.5" y="627.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="834.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.06%)</title><rect x="832.9" y="627.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (154 samples, 9.40%)</title><rect x="833.6" y="627.0" width="110.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="836.6" y="638.0">rocksdb::MemT..</text>
</g>
<g>
<title>/tmp/librocksdbjni15761288266948979791.so (2 samples, 0.12%)</title><rect x="836.5" y="611.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="839.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (148 samples, 9.03%)</title><rect x="837.9" y="611.0" width="106.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="840.9" y="622.0">rocksdb::MemT..</text>
</g>
<g>
<title>/tmp/librocksdbjni15761288266948979791.so (147 samples, 8.97%)</title><rect x="838.7" y="595.0" width="105.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="841.7" y="606.0">/tmp/librocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni15761288266948979791.so (3 samples, 0.18%)</title><rect x="841.5" y="579.0" width="2.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="844.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (132 samples, 8.05%)</title><rect x="843.7" y="579.0" width="95.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="846.7" y="590.0">rocksdb::In..</text>
</g>
<g>
<title>/tmp/librocksdbjni15761288266948979791.so (4 samples, 0.24%)</title><rect x="902.0" y="563.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="905.0" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="904.9" y="563.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="907.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.31%)</title><rect x="905.6" y="563.0" width="3.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="908.6" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.12%)</title><rect x="909.2" y="563.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="912.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (39 samples, 2.38%)</title><rect x="910.7" y="563.0" width="28.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="913.7" y="574.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni15761288266948979791.so (7 samples, 0.43%)</title><rect x="922.2" y="547.0" width="5.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="925.2" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.55%)</title><rect x="927.2" y="547.0" width="6.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="930.2" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.24%)</title><rect x="933.7" y="547.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="936.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.18%)</title><rect x="936.6" y="547.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="939.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.06%)</title><rect x="938.7" y="579.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="941.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.06%)</title><rect x="939.5" y="579.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="942.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) [clone .plt] (1 samples, 0.06%)</title><rect x="940.2" y="579.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="943.2" y="590.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.06%)</title><rect x="940.9" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="943.9" y="590.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (4 samples, 0.24%)</title><rect x="941.6" y="579.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="944.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (3 samples, 0.18%)</title><rect x="944.5" y="627.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="947.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.06%)</title><rect x="946.7" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="949.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.06%)</title><rect x="947.4" y="627.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="950.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.12%)</title><rect x="948.1" y="627.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="951.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) [clone .plt] (1 samples, 0.06%)</title><rect x="949.5" y="627.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="952.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.06%)</title><rect x="950.3" y="627.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="953.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.12%)</title><rect x="951.0" y="643.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="954.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (3 samples, 0.18%)</title><rect x="952.4" y="643.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="955.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (2 samples, 0.12%)</title><rect x="954.6" y="643.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="957.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() [clone .plt] (2 samples, 0.12%)</title><rect x="956.0" y="643.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="959.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.12%)</title><rect x="957.5" y="643.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="960.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() [clone .plt] (1 samples, 0.06%)</title><rect x="958.9" y="643.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="961.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (5 samples, 0.31%)</title><rect x="959.6" y="643.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="962.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (5 samples, 0.31%)</title><rect x="963.2" y="707.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="966.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (44 samples, 2.68%)</title><rect x="966.8" y="707.0" width="31.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="969.8" y="718.0">ro..</text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.06%)</title><rect x="966.8" y="691.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="969.8" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.12%)</title><rect x="967.5" y="691.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="970.5" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.24%)</title><rect x="969.0" y="691.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="972.0" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (31 samples, 1.89%)</title><rect x="971.9" y="691.0" width="22.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="974.9" y="702.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;5292148ul, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.06%)</title><rect x="974.7" y="675.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="977.7" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.18%)</title><rect x="975.5" y="675.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="978.5" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.18%)</title><rect x="977.6" y="675.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="980.6" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (20 samples, 1.22%)</title><rect x="979.8" y="675.0" width="14.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="982.8" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (16 samples, 0.98%)</title><rect x="982.7" y="659.0" width="11.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="985.7" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (12 samples, 0.73%)</title><rect x="982.7" y="643.0" width="8.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="985.7" y="654.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (4 samples, 0.24%)</title><rect x="984.1" y="627.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="987.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="987.0" y="627.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="990.0" y="638.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.12%)</title><rect x="987.7" y="627.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="990.7" y="638.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (3 samples, 0.18%)</title><rect x="989.1" y="627.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="992.1" y="638.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.18%)</title><rect x="991.3" y="643.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="994.3" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="993.5" y="643.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="996.5" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.37%)</title><rect x="994.2" y="691.0" width="4.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="997.2" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="994.2" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="997.2" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.12%)</title><rect x="994.9" y="675.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="997.9" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.18%)</title><rect x="996.3" y="675.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="999.3" y="686.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.06%)</title><rect x="998.5" y="723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1001.5" y="734.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="999.2" y="723.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1002.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.43%)</title><rect x="999.9" y="739.0" width="5.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1002.9" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.18%)</title><rect x="999.9" y="723.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1002.9" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.06%)</title><rect x="1002.1" y="723.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1005.1" y="734.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.12%)</title><rect x="1002.8" y="723.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1005.8" y="734.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.06%)</title><rect x="1004.3" y="723.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1007.3" y="734.0"></text>
</g>
<g>
<title>__libc_malloc (8 samples, 0.49%)</title><rect x="1005.0" y="739.0" width="5.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1008.0" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.06%)</title><rect x="1010.7" y="739.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1013.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (4 samples, 0.24%)</title><rect x="1011.5" y="739.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (1 samples, 0.06%)</title><rect x="1014.3" y="739.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1017.3" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (9 samples, 0.55%)</title><rect x="1015.1" y="739.0" width="6.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1018.1" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (5 samples, 0.31%)</title><rect x="1021.5" y="739.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1024.5" y="750.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="1025.1" y="739.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1028.1" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (5 samples, 0.31%)</title><rect x="1025.9" y="739.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1028.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (2 samples, 0.12%)</title><rect x="1029.5" y="771.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (1 samples, 0.06%)</title><rect x="1030.2" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="1030.2" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1030.2" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1030.2" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1030.2" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="1030.2" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="1030.2" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.2" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="1030.2" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (7 samples, 0.43%)</title><rect x="1030.9" y="819.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1033.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (12 samples, 0.73%)</title><rect x="1035.9" y="819.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1038.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.73%)</title><rect x="1035.9" y="803.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.43%)</title><rect x="1035.9" y="787.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1038.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.24%)</title><rect x="1038.1" y="771.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.31%)</title><rect x="1041.0" y="787.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.12%)</title><rect x="1043.1" y="771.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.12%)</title><rect x="1043.1" y="755.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.18%)</title><rect x="1044.6" y="819.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.18%)</title><rect x="1044.6" y="803.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.18%)</title><rect x="1044.6" y="787.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.6" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.18%)</title><rect x="1044.6" y="771.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.6" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="1045.3" y="755.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1048.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 1.16%)</title><rect x="1046.7" y="851.0" width="13.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.7" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1053.2" y="835.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1056.2" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1053.2" y="819.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1056.2" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="1053.2" y="803.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1056.2" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1053.2" y="787.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1056.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1053.9" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1053.9" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1053.9" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1056.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="1053.9" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.43%)</title><rect x="1054.6" y="835.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.43%)</title><rect x="1054.6" y="819.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1057.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1059.0" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1059.0" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1062.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="1059.0" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.0" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1059.0" y="755.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1062.0" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1059.0" y="739.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1062.0" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1059.0" y="723.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1062.0" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1059.0" y="707.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1062.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1059.0" y="691.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1062.0" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1059.0" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1062.0" y="686.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="1059.0" y="659.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1062.0" y="670.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned long, bool, bool*) (1 samples, 0.06%)</title><rect x="1059.0" y="643.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1062.0" y="654.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned long, bool) (1 samples, 0.06%)</title><rect x="1059.0" y="627.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1062.0" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.06%)</title><rect x="1059.7" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1062.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.55%)</title><rect x="1060.4" y="851.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1065.4" y="835.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="1065.4" y="819.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="1065.4" y="803.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1068.4" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1066.2" y="835.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1069.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1066.2" y="819.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1069.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1066.2" y="803.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1069.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.49%)</title><rect x="1066.9" y="851.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.49%)</title><rect x="1066.9" y="835.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1069.8" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1072.8" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1069.8" y="803.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1072.8" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1069.8" y="787.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1072.8" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1069.8" y="771.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1072.8" y="782.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1069.8" y="755.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1072.8" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1069.8" y="739.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1072.8" y="750.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.06%)</title><rect x="1069.8" y="723.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1072.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1070.5" y="819.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1071.2" y="803.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.12%)</title><rect x="1071.2" y="787.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (160 samples, 9.76%)</title><rect x="1072.6" y="867.0" width="115.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.6" y="878.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (159 samples, 9.70%)</title><rect x="1073.4" y="851.0" width="114.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.4" y="862.0">one/nio/net/Na..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="1082.0" y="835.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1085.0" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (47 samples, 2.87%)</title><rect x="1082.7" y="835.0" width="33.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1085.7" y="846.0">Ja..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.18%)</title><rect x="1086.3" y="819.0" width="2.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1089.3" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097844ul, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="1088.5" y="819.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1091.5" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.12%)</title><rect x="1089.2" y="819.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1092.2" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.24%)</title><rect x="1090.6" y="819.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1093.6" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (31 samples, 1.89%)</title><rect x="1093.5" y="819.0" width="22.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1096.5" y="830.0">j..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.12%)</title><rect x="1099.3" y="803.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1102.3" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (9 samples, 0.55%)</title><rect x="1100.7" y="803.0" width="6.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1103.7" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (12 samples, 0.73%)</title><rect x="1107.2" y="803.0" width="8.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1110.2" y="814.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.06%)</title><rect x="1115.8" y="819.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1118.8" y="830.0"></text>
</g>
<g>
<title>__recv (89 samples, 5.43%)</title><rect x="1116.6" y="835.0" width="64.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1119.6" y="846.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (78 samples, 4.76%)</title><rect x="1124.5" y="819.0" width="56.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1127.5" y="830.0">entry_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.06%)</title><rect x="1124.5" y="803.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1127.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (77 samples, 4.70%)</title><rect x="1125.2" y="803.0" width="55.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1128.2" y="814.0">do_sy..</text>
</g>
<g>
<title>__sys_recvfrom (5 samples, 0.31%)</title><rect x="1130.2" y="787.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1133.2" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (65 samples, 3.97%)</title><rect x="1133.8" y="787.0" width="46.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1136.8" y="798.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (62 samples, 3.78%)</title><rect x="1133.8" y="771.0" width="44.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1136.8" y="782.0">__sy..</text>
</g>
<g>
<title>sock_recvmsg (54 samples, 3.29%)</title><rect x="1135.3" y="755.0" width="38.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1138.3" y="766.0">soc..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.12%)</title><rect x="1135.3" y="739.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1138.3" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (40 samples, 2.44%)</title><rect x="1136.7" y="739.0" width="28.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1139.7" y="750.0">in..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="1136.7" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1139.7" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="1137.4" y="723.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1140.4" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.06%)</title><rect x="1138.2" y="723.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1141.2" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.06%)</title><rect x="1138.9" y="723.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1141.9" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (36 samples, 2.20%)</title><rect x="1139.6" y="723.0" width="25.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.6" y="734.0">t..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="1145.4" y="707.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1148.4" y="718.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="1145.4" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1148.4" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="1146.1" y="707.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.1" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.12%)</title><rect x="1146.8" y="707.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1149.8" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.12%)</title><rect x="1148.2" y="707.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1151.2" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (14 samples, 0.85%)</title><rect x="1149.7" y="707.0" width="10.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1152.7" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (14 samples, 0.85%)</title><rect x="1149.7" y="691.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1152.7" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="1150.4" y="675.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.4" y="686.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="1151.1" y="675.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.1" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (11 samples, 0.67%)</title><rect x="1151.8" y="675.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.8" y="686.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.43%)</title><rect x="1152.6" y="659.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.6" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.31%)</title><rect x="1154.0" y="643.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1157.0" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="1157.6" y="659.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.6" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.12%)</title><rect x="1158.3" y="659.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.3" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.12%)</title><rect x="1158.3" y="643.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1161.3" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="1159.8" y="707.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.8" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.24%)</title><rect x="1160.5" y="707.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.5" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.24%)</title><rect x="1160.5" y="691.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.5" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.06%)</title><rect x="1160.5" y="675.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.5" y="686.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.18%)</title><rect x="1161.2" y="675.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1164.2" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.18%)</title><rect x="1163.4" y="707.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1166.4" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.73%)</title><rect x="1165.5" y="739.0" width="8.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1168.5" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.12%)</title><rect x="1167.0" y="723.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1170.0" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (8 samples, 0.49%)</title><rect x="1168.4" y="723.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1171.4" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.49%)</title><rect x="1168.4" y="707.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1171.4" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.37%)</title><rect x="1174.2" y="755.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1177.2" y="766.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.31%)</title><rect x="1174.2" y="739.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1177.2" y="750.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.31%)</title><rect x="1174.2" y="723.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1177.2" y="734.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.31%)</title><rect x="1174.2" y="707.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="1177.8" y="739.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1180.8" y="750.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.18%)</title><rect x="1178.5" y="771.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1181.5" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.55%)</title><rect x="1180.6" y="835.0" width="6.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1183.6" y="846.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.06%)</title><rect x="1187.1" y="835.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1190.1" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.18%)</title><rect x="1187.8" y="899.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.8" y="910.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.18%)</title><rect x="1187.8" y="883.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1190.8" y="894.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.18%)</title><rect x="1187.8" y="867.0" width="2.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1190.8" y="878.0"></text>
</g>
</g>
</svg>
