<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (2,436 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,435 samples, 99.96%)</title><rect x="10.0" y="931.0" width="1179.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.21%)</title><rect x="12.9" y="915.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.21%)</title><rect x="12.9" y="899.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="13.9" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.9" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="13.9" y="867.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.9" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="13.9" y="851.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="16.9" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="13.9" y="835.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.04%)</title><rect x="14.4" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.4" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="14.8" y="883.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="17.8" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="14.8" y="867.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="17.8" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="14.8" y="851.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="17.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (160 samples, 6.57%)</title><rect x="15.3" y="915.0" width="77.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.3" y="926.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (7 samples, 0.29%)</title><rect x="15.3" y="899.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.16%)</title><rect x="15.3" y="883.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (2 samples, 0.08%)</title><rect x="17.3" y="883.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.3" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="18.2" y="883.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="21.2" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="18.2" y="867.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="21.2" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="18.2" y="851.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="21.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (153 samples, 6.28%)</title><rect x="18.7" y="899.0" width="74.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.7" y="910.0">one/nio/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="20.7" y="883.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="23.7" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="21.1" y="883.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="24.1" y="894.0"></text>
</g>
<g>
<title>clock_gettime (9 samples, 0.37%)</title><rect x="21.6" y="883.0" width="4.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="24.6" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="23.1" y="867.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="26.1" y="878.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.16%)</title><rect x="23.6" y="867.0" width="1.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="26.6" y="878.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.16%)</title><rect x="23.6" y="851.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="26.6" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="25.0" y="835.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="28.0" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="25.0" y="819.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="28.0" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="25.0" y="803.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="28.0" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="25.5" y="867.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="28.5" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="25.5" y="851.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.5" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="25.5" y="835.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.5" y="846.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.04%)</title><rect x="26.0" y="883.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="29.0" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="26.0" y="867.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="29.0" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="26.0" y="851.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="29.0" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="26.0" y="835.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="29.0" y="846.0"></text>
</g>
<g>
<title>epoll_wait (137 samples, 5.62%)</title><rect x="26.5" y="883.0" width="66.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="29.5" y="894.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (128 samples, 5.25%)</title><rect x="30.3" y="867.0" width="62.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="33.3" y="878.0">entry_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="30.3" y="851.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="33.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (127 samples, 5.21%)</title><rect x="30.8" y="851.0" width="61.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.8" y="862.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (124 samples, 5.09%)</title><rect x="32.3" y="835.0" width="60.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="35.3" y="846.0">__x64_..</text>
</g>
<g>
<title>do_epoll_wait (124 samples, 5.09%)</title><rect x="32.3" y="819.0" width="60.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="35.3" y="830.0">do_epo..</text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="32.3" y="803.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.3" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="32.3" y="787.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="35.3" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="32.3" y="771.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="35.3" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="33.3" y="803.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.3" y="814.0"></text>
</g>
<g>
<title>ep_poll (121 samples, 4.97%)</title><rect x="33.7" y="803.0" width="58.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="36.7" y="814.0">ep_poll</text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.04%)</title><rect x="38.1" y="787.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="41.1" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (27 samples, 1.11%)</title><rect x="38.6" y="787.0" width="13.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="41.6" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.82%)</title><rect x="42.0" y="771.0" width="9.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="45.0" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (14 samples, 0.57%)</title><rect x="43.9" y="755.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="46.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.41%)</title><rect x="45.8" y="739.0" width="4.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="48.8" y="750.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.08%)</title><rect x="47.8" y="723.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="50.8" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.16%)</title><rect x="48.8" y="723.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="51.8" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.08%)</title><rect x="50.7" y="755.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="53.7" y="766.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="51.7" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="54.7" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (83 samples, 3.41%)</title><rect x="52.1" y="787.0" width="40.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.1" y="798.0">sch..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (83 samples, 3.41%)</title><rect x="52.1" y="771.0" width="40.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="55.1" y="782.0">sch..</text>
</g>
<g>
<title>schedule (82 samples, 3.37%)</title><rect x="52.6" y="755.0" width="39.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="55.6" y="766.0">sch..</text>
</g>
<g>
<title>__schedule (80 samples, 3.28%)</title><rect x="53.6" y="739.0" width="38.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="56.6" y="750.0">__s..</text>
</g>
<g>
<title>finish_task_switch (77 samples, 3.16%)</title><rect x="55.0" y="723.0" width="37.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="58.0" y="734.0">fin..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="92.3" y="867.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="95.3" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="92.3" y="851.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="95.3" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="92.3" y="835.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="95.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,264 samples, 92.94%)</title><rect x="92.8" y="915.0" width="1096.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.8" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,259 samples, 92.73%)</title><rect x="94.3" y="899.0" width="1094.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.3" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,105 samples, 86.41%)</title><rect x="96.2" y="883.0" width="1019.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.2" y="894.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,039 samples, 83.70%)</title><rect x="101.1" y="867.0" width="987.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.1" y="878.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,039 samples, 83.70%)</title><rect x="101.1" y="851.0" width="987.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.1" y="862.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (2,015 samples, 82.72%)</title><rect x="102.0" y="835.0" width="976.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.0" y="846.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,130 samples, 46.39%)</title><rect x="102.0" y="819.0" width="547.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.0" y="830.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.12%)</title><rect x="109.3" y="803.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.12%)</title><rect x="109.3" y="787.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.12%)</title><rect x="109.3" y="771.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="109.8" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.8" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="110.3" y="739.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="113.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="110.3" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="110.3" y="707.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="113.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,109 samples, 45.53%)</title><rect x="110.8" y="803.0" width="537.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.8" y="814.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (32 samples, 1.31%)</title><rect x="110.8" y="787.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.45%)</title><rect x="120.4" y="771.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (11 samples, 0.45%)</title><rect x="120.4" y="755.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.45%)</title><rect x="120.4" y="739.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.4" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="124.8" y="723.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="127.8" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="125.3" y="723.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="128.3" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="125.8" y="771.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="128.8" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="125.8" y="755.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="128.8" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="125.8" y="739.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="128.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,077 samples, 44.21%)</title><rect x="126.3" y="787.0" width="521.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.3" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,075 samples, 44.13%)</title><rect x="127.2" y="771.0" width="520.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.2" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="127.7" y="755.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="130.7" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="127.7" y="739.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="130.7" y="750.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.21%)</title><rect x="128.7" y="755.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="131.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="129.6" y="739.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="132.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="129.6" y="723.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="132.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="129.6" y="707.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="132.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,062 samples, 43.60%)</title><rect x="131.1" y="755.0" width="514.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.1" y="766.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,060 samples, 43.51%)</title><rect x="132.1" y="739.0" width="513.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.1" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.12%)</title><rect x="134.0" y="723.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="137.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="135.0" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="135.0" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="138.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="135.0" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.0" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.49%)</title><rect x="135.5" y="723.0" width="5.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="138.5" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="139.3" y="707.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="142.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="140.3" y="707.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="143.3" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="140.8" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="140.8" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="143.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="140.8" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="143.8" y="686.0"></text>
</g>
<g>
<title>send (1,040 samples, 42.69%)</title><rect x="141.3" y="723.0" width="503.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="144.3" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,020 samples, 41.87%)</title><rect x="150.0" y="707.0" width="494.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="153.0" y="718.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.12%)</title><rect x="150.0" y="691.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="153.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1,017 samples, 41.75%)</title><rect x="151.4" y="691.0" width="492.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.4" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.08%)</title><rect x="159.2" y="675.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (993 samples, 40.76%)</title><rect x="160.2" y="675.0" width="481.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="163.2" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (991 samples, 40.68%)</title><rect x="160.2" y="659.0" width="480.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="163.2" y="670.0">__sys_sendto</text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="160.2" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="163.2" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (983 samples, 40.35%)</title><rect x="160.6" y="643.0" width="476.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.6" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.29%)</title><rect x="161.1" y="627.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="164.1" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (969 samples, 39.78%)</title><rect x="164.5" y="627.0" width="469.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="167.5" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (964 samples, 39.57%)</title><rect x="166.5" y="611.0" width="466.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="169.5" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.16%)</title><rect x="166.9" y="595.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="169.9" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="168.9" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="171.9" y="606.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="168.9" y="579.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="171.9" y="590.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.12%)</title><rect x="169.4" y="595.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="172.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.12%)</title><rect x="169.4" y="579.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="172.4" y="590.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (3 samples, 0.12%)</title><rect x="169.4" y="563.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.08%)</title><rect x="170.8" y="595.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="173.8" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="171.8" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="174.8" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (948 samples, 38.92%)</title><rect x="172.3" y="595.0" width="459.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="175.3" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.12%)</title><rect x="182.0" y="579.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="185.0" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.08%)</title><rect x="182.4" y="563.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="185.4" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.16%)</title><rect x="183.4" y="579.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="186.4" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.16%)</title><rect x="183.4" y="563.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="186.4" y="574.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (4 samples, 0.16%)</title><rect x="185.4" y="579.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.4" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.21%)</title><rect x="187.3" y="579.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="190.3" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.21%)</title><rect x="187.3" y="563.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="190.3" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (47 samples, 1.93%)</title><rect x="189.7" y="579.0" width="22.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="192.7" y="590.0">s..</text>
</g>
<g>
<title>__alloc_skb (43 samples, 1.77%)</title><rect x="191.7" y="563.0" width="20.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="194.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (20 samples, 0.82%)</title><rect x="193.6" y="547.0" width="9.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="196.6" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.37%)</title><rect x="194.1" y="531.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="197.1" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.08%)</title><rect x="196.5" y="515.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="199.5" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.08%)</title><rect x="197.5" y="515.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="200.5" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="198.4" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="201.4" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.08%)</title><rect x="198.9" y="531.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="201.9" y="542.0"></text>
</g>
<g>
<title>memset (7 samples, 0.29%)</title><rect x="199.9" y="531.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="202.9" y="542.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="203.3" y="547.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="206.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.25%)</title><rect x="203.8" y="547.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="206.8" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="206.2" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="209.2" y="542.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.25%)</title><rect x="206.7" y="547.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="209.7" y="558.0"></text>
</g>
<g>
<title>__ksize (6 samples, 0.25%)</title><rect x="206.7" y="531.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="209.7" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (4 samples, 0.16%)</title><rect x="209.6" y="547.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="212.6" y="558.0"></text>
</g>
<g>
<title>memset (2 samples, 0.08%)</title><rect x="211.5" y="547.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.5" y="558.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.25%)</title><rect x="212.5" y="579.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="215.5" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="215.4" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="218.4" y="590.0"></text>
</g>
<g>
<title>tcp_push (850 samples, 34.89%)</title><rect x="215.9" y="579.0" width="411.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="218.9" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (850 samples, 34.89%)</title><rect x="215.9" y="563.0" width="411.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="218.9" y="574.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="216.8" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.8" y="558.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="217.3" y="547.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="220.3" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="218.3" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="221.3" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="218.8" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="221.8" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.04%)</title><rect x="219.3" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="222.3" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (842 samples, 34.56%)</title><rect x="219.7" y="547.0" width="407.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="222.7" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.12%)</title><rect x="225.1" y="531.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="228.1" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (804 samples, 33.00%)</title><rect x="226.5" y="531.0" width="389.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="229.5" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.12%)</title><rect x="237.2" y="515.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="240.2" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (770 samples, 31.61%)</title><rect x="238.6" y="515.0" width="373.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="241.6" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (766 samples, 31.44%)</title><rect x="238.6" y="499.0" width="371.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="241.6" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="239.6" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="242.6" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="239.6" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="242.6" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="240.1" y="483.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="243.1" y="494.0"></text>
</g>
<g>
<title>ip_local_out (755 samples, 30.99%)</title><rect x="240.6" y="483.0" width="365.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="243.6" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.12%)</title><rect x="242.0" y="467.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="245.0" y="478.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.08%)</title><rect x="242.5" y="451.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.5" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="243.5" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="246.5" y="478.0"></text>
</g>
<g>
<title>ip_output (748 samples, 30.71%)</title><rect x="244.0" y="467.0" width="362.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="247.0" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="245.4" y="451.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="248.4" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.04%)</title><rect x="246.4" y="451.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="249.4" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (742 samples, 30.46%)</title><rect x="246.9" y="451.0" width="359.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="249.9" y="462.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.25%)</title><rect x="248.3" y="435.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.3" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (732 samples, 30.05%)</title><rect x="251.2" y="435.0" width="354.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="254.2" y="446.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (730 samples, 29.97%)</title><rect x="252.2" y="419.0" width="353.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="255.2" y="430.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (659 samples, 27.05%)</title><rect x="257.5" y="403.0" width="319.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.5" y="414.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (657 samples, 26.97%)</title><rect x="258.0" y="387.0" width="318.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="261.0" y="398.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (654 samples, 26.85%)</title><rect x="259.5" y="371.0" width="316.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="262.5" y="382.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (651 samples, 26.72%)</title><rect x="259.5" y="355.0" width="315.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="262.5" y="366.0">__softirqentry_text_start</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="264.8" y="339.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="267.8" y="350.0"></text>
</g>
<g>
<title>net_rx_action (639 samples, 26.23%)</title><rect x="265.3" y="339.0" width="309.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.3" y="350.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="268.2" y="323.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="271.2" y="334.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="268.7" y="323.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="271.7" y="334.0"></text>
</g>
<g>
<title>process_backlog (631 samples, 25.90%)</title><rect x="269.2" y="323.0" width="305.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="272.2" y="334.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (624 samples, 25.62%)</title><rect x="272.5" y="307.0" width="302.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.5" y="318.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (622 samples, 25.53%)</title><rect x="273.5" y="291.0" width="301.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="276.5" y="302.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>__netif_receive_skb_core (15 samples, 0.62%)</title><rect x="274.0" y="275.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="277.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (603 samples, 24.75%)</title><rect x="281.3" y="275.0" width="292.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="284.3" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.12%)</title><rect x="282.2" y="259.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="285.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.16%)</title><rect x="283.7" y="259.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="286.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (593 samples, 24.34%)</title><rect x="285.6" y="259.0" width="287.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="288.6" y="270.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (586 samples, 24.06%)</title><rect x="286.6" y="243.0" width="283.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="289.6" y="254.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (585 samples, 24.01%)</title><rect x="286.6" y="227.0" width="283.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="289.6" y="238.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (584 samples, 23.97%)</title><rect x="286.6" y="211.0" width="282.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="289.6" y="222.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="288.5" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="291.5" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.12%)</title><rect x="289.0" y="195.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="292.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (576 samples, 23.65%)</title><rect x="290.5" y="195.0" width="279.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="293.5" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (19 samples, 0.78%)</title><rect x="294.8" y="179.0" width="9.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="297.8" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="303.5" y="163.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.5" y="174.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="304.0" y="179.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="307.0" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.08%)</title><rect x="304.5" y="179.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="307.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (11 samples, 0.45%)</title><rect x="305.5" y="179.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="308.5" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.21%)</title><rect x="305.5" y="163.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="308.5" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.16%)</title><rect x="307.9" y="163.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="310.9" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.08%)</title><rect x="309.8" y="163.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="312.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="310.8" y="179.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="313.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (532 samples, 21.84%)</title><rect x="311.3" y="179.0" width="257.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="314.3" y="190.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="311.8" y="163.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="314.8" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.08%)</title><rect x="312.3" y="163.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="315.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="313.2" y="163.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="316.2" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (8 samples, 0.33%)</title><rect x="313.7" y="163.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="316.7" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="317.6" y="163.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.6" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="318.1" y="163.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (517 samples, 21.22%)</title><rect x="318.6" y="163.0" width="250.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="321.6" y="174.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.45%)</title><rect x="321.0" y="147.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="324.0" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="321.5" y="131.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="324.5" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.37%)</title><rect x="322.0" y="131.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="325.0" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="322.9" y="115.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="325.9" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.21%)</title><rect x="323.9" y="115.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.9" y="126.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.21%)</title><rect x="323.9" y="99.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="326.9" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.16%)</title><rect x="324.4" y="83.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="327.4" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="326.3" y="147.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="329.3" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.08%)</title><rect x="326.8" y="147.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="329.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.16%)</title><rect x="327.8" y="147.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="330.8" y="158.0"></text>
</g>
<g>
<title>tcp_ack (78 samples, 3.20%)</title><rect x="329.7" y="147.0" width="37.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="332.7" y="158.0">tcp..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="334.5" y="131.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="337.5" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.08%)</title><rect x="335.0" y="131.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.0" y="142.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.12%)</title><rect x="336.0" y="131.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="339.0" y="142.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="337.5" y="131.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="340.5" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.04%)</title><rect x="337.9" y="131.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="340.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="338.4" y="131.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="341.4" y="142.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.08%)</title><rect x="338.9" y="131.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="341.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (53 samples, 2.18%)</title><rect x="339.9" y="131.0" width="25.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="342.9" y="142.0">t..</text>
</g>
<g>
<title>__kfree_skb (35 samples, 1.44%)</title><rect x="345.7" y="115.0" width="16.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="348.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (11 samples, 0.45%)</title><rect x="345.7" y="99.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="348.7" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.41%)</title><rect x="346.2" y="83.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="349.2" y="94.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.12%)</title><rect x="349.6" y="67.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="352.6" y="78.0"></text>
</g>
<g>
<title>skb_release_all (23 samples, 0.94%)</title><rect x="351.0" y="99.0" width="11.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="354.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (21 samples, 0.86%)</title><rect x="351.0" y="83.0" width="10.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="354.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.37%)</title><rect x="356.8" y="67.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="359.8" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="357.3" y="51.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="360.3" y="62.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.29%)</title><rect x="357.8" y="51.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="360.8" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.12%)</title><rect x="359.7" y="35.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.7" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.08%)</title><rect x="361.2" y="83.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="364.2" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="362.2" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.2" y="110.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="362.6" y="115.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="365.6" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="363.1" y="115.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="366.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.08%)</title><rect x="363.6" y="115.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="366.6" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="364.6" y="115.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="367.6" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="365.1" y="115.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="368.1" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="365.6" y="131.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="368.6" y="142.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="366.0" y="131.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="369.0" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="366.5" y="131.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="369.5" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="367.0" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="370.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (404 samples, 16.58%)</title><rect x="367.5" y="147.0" width="195.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.5" y="158.0">tcp_data_ready</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.04%)</title><rect x="368.0" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.0" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (402 samples, 16.50%)</title><rect x="368.5" y="131.0" width="194.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="371.5" y="142.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.08%)</title><rect x="369.9" y="115.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="372.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (397 samples, 16.30%)</title><rect x="370.9" y="115.0" width="192.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="373.9" y="126.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (397 samples, 16.30%)</title><rect x="370.9" y="99.0" width="192.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="373.9" y="110.0">__wake_up_common_lock</text>
</g>
<g>
<title>__lock_text_start (396 samples, 16.26%)</title><rect x="371.4" y="83.0" width="191.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="374.4" y="94.0">__lock_text_start</text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.21%)</title><rect x="563.2" y="147.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="566.2" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="565.6" y="147.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="568.6" y="158.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="565.6" y="131.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.6" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="566.1" y="147.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="569.1" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.12%)</title><rect x="566.6" y="147.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="569.6" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="568.0" y="147.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="571.0" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="568.5" y="147.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="571.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="569.0" y="179.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="572.0" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="569.5" y="211.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="572.5" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="570.0" y="227.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="573.0" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.08%)</title><rect x="570.5" y="243.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="573.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.12%)</title><rect x="571.4" y="243.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="574.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="572.9" y="259.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="575.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.12%)</title><rect x="573.4" y="275.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="576.4" y="286.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.12%)</title><rect x="574.8" y="355.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="577.8" y="366.0"></text>
</g>
<g>
<title>reschedule_interrupt (1 samples, 0.04%)</title><rect x="576.3" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="579.3" y="398.0"></text>
</g>
<g>
<title>smp_reschedule_interrupt (1 samples, 0.04%)</title><rect x="576.3" y="371.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.3" y="382.0"></text>
</g>
<g>
<title>scheduler_ipi (1 samples, 0.04%)</title><rect x="576.3" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="579.3" y="366.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="576.3" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="579.3" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="576.3" y="323.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="579.3" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (59 samples, 2.42%)</title><rect x="576.7" y="403.0" width="28.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="579.7" y="414.0">de..</text>
</g>
<g>
<title>__dev_queue_xmit (57 samples, 2.34%)</title><rect x="576.7" y="387.0" width="27.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="579.7" y="398.0">_..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="581.1" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="584.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (31 samples, 1.27%)</title><rect x="581.6" y="371.0" width="15.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="584.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (24 samples, 0.99%)</title><rect x="584.5" y="355.0" width="11.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="587.5" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.25%)</title><rect x="587.4" y="339.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="590.4" y="350.0"></text>
</g>
<g>
<title>netif_rx (12 samples, 0.49%)</title><rect x="590.3" y="339.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="593.3" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (12 samples, 0.49%)</title><rect x="590.3" y="323.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="593.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (10 samples, 0.41%)</title><rect x="591.3" y="307.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="594.3" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="596.1" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="599.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.16%)</title><rect x="596.6" y="371.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="599.6" y="382.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.08%)</title><rect x="598.5" y="371.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="601.5" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (10 samples, 0.41%)</title><rect x="599.5" y="371.0" width="4.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="602.5" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.08%)</title><rect x="602.4" y="355.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="605.4" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.08%)</title><rect x="602.4" y="339.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="605.4" y="350.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.08%)</title><rect x="603.4" y="355.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="606.4" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="604.4" y="387.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="607.4" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.04%)</title><rect x="605.3" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="608.3" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="605.8" y="435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="608.8" y="446.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.08%)</title><rect x="606.3" y="483.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.3" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.21%)</title><rect x="607.3" y="483.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="610.3" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.08%)</title><rect x="609.7" y="499.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="612.7" y="510.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.08%)</title><rect x="610.7" y="499.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.7" y="510.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.25%)</title><rect x="611.6" y="515.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="614.6" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="612.1" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="615.1" y="510.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.16%)</title><rect x="612.6" y="499.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.6" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="614.0" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="617.0" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.08%)</title><rect x="614.5" y="515.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="617.5" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="615.5" y="515.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="618.5" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="616.0" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="619.0" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="616.5" y="531.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="619.5" y="542.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.16%)</title><rect x="617.4" y="531.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="620.4" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.29%)</title><rect x="619.4" y="531.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="622.4" y="542.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.04%)</title><rect x="619.9" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="622.9" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="620.3" y="515.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="623.3" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.16%)</title><rect x="620.8" y="515.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.8" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.12%)</title><rect x="621.3" y="499.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="624.3" y="510.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.12%)</title><rect x="621.3" y="483.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="624.3" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="621.8" y="467.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="624.8" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="622.8" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="625.8" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.12%)</title><rect x="623.3" y="531.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="626.3" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.04%)</title><rect x="624.7" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.7" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.21%)</title><rect x="625.2" y="531.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="628.2" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.33%)</title><rect x="627.6" y="579.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="630.6" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="627.6" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="630.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.29%)</title><rect x="628.1" y="563.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="631.1" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.12%)</title><rect x="630.0" y="547.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="633.0" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.08%)</title><rect x="631.5" y="595.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="634.5" y="606.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.08%)</title><rect x="632.5" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="635.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.04%)</title><rect x="633.4" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="636.4" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.21%)</title><rect x="633.9" y="627.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="636.9" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.21%)</title><rect x="633.9" y="611.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="636.9" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.21%)</title><rect x="633.9" y="595.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="636.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.04%)</title><rect x="636.3" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.3" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.29%)</title><rect x="636.8" y="643.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="639.8" y="654.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.21%)</title><rect x="637.3" y="627.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.21%)</title><rect x="637.3" y="611.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.3" y="622.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.16%)</title><rect x="637.8" y="595.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="640.8" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="639.7" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="642.7" y="638.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.08%)</title><rect x="640.2" y="659.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="643.2" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.25%)</title><rect x="641.2" y="675.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="644.2" y="686.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.25%)</title><rect x="641.2" y="659.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="644.2" y="670.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.25%)</title><rect x="641.2" y="643.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="644.2" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.21%)</title><rect x="641.7" y="627.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="644.1" y="707.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="647.1" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="644.1" y="691.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="647.1" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="644.1" y="675.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="647.1" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="645.0" y="723.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="648.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="645.0" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="648.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="645.0" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="648.0" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.21%)</title><rect x="645.5" y="755.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="648.5" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="645.5" y="739.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="648.5" y="750.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.16%)</title><rect x="646.0" y="739.0" width="2.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="649.0" y="750.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.12%)</title><rect x="646.5" y="723.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="649.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.12%)</title><rect x="648.0" y="803.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.12%)</title><rect x="648.0" y="787.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.12%)</title><rect x="648.0" y="771.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.49%)</title><rect x="649.4" y="819.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.21%)</title><rect x="649.9" y="803.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.21%)</title><rect x="649.9" y="787.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.9" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="649.9" y="771.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="652.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.12%)</title><rect x="650.9" y="771.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.9" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="651.8" y="755.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.8" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="651.8" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="654.8" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="651.8" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="654.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.04%)</title><rect x="652.3" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="652.3" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="652.3" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.3" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="652.3" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="655.3" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="652.3" y="739.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="655.3" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="652.3" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="655.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="652.8" y="803.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="652.8" y="787.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.8" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="653.3" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.12%)</title><rect x="653.8" y="803.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="656.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="654.7" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="654.7" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="654.7" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (873 samples, 35.84%)</title><rect x="655.2" y="819.0" width="422.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.2" y="830.0">ru/mail/polis/service/kovalkov/ServiceImpl.get</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.12%)</title><rect x="656.2" y="803.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.12%)</title><rect x="656.2" y="787.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.12%)</title><rect x="656.2" y="771.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.2" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="657.2" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.16%)</title><rect x="657.6" y="803.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="658.1" y="787.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="658.1" y="771.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="658.1" y="755.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.1" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="658.1" y="739.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.12%)</title><rect x="658.1" y="723.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.12%)</title><rect x="658.1" y="707.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="659.1" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="659.6" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.04%)</title><rect x="660.1" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="660.1" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (854 samples, 35.06%)</title><rect x="660.6" y="803.0" width="413.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.6" y="814.0">ru/mail/polis/dao/kovalkov/DAOImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (840 samples, 34.48%)</title><rect x="660.6" y="787.0" width="406.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.6" y="798.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (840 samples, 34.48%)</title><rect x="660.6" y="771.0" width="406.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.6" y="782.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.08%)</title><rect x="662.5" y="755.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="665.5" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (799 samples, 32.80%)</title><rect x="663.5" y="755.0" width="387.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="666.5" y="766.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (5 samples, 0.21%)</title><rect x="665.4" y="739.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="668.4" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="667.8" y="739.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="670.8" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="668.3" y="739.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="671.3" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (5 samples, 0.21%)</title><rect x="668.8" y="739.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="671.8" y="750.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="671.2" y="739.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="674.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="671.2" y="723.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="674.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="671.2" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="674.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="671.2" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="674.2" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.16%)</title><rect x="671.7" y="739.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="674.7" y="750.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="673.6" y="739.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="676.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="673.6" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="676.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="673.6" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="676.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="673.6" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="676.6" y="702.0"></text>
</g>
<g>
<title>operator delete[](void*) (3 samples, 0.12%)</title><rect x="674.1" y="739.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="677.1" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.12%)</title><rect x="675.6" y="739.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="678.6" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.08%)</title><rect x="677.0" y="739.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="680.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (6 samples, 0.25%)</title><rect x="678.0" y="739.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="681.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="680.4" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="683.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="680.4" y="707.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="683.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="680.4" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="683.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.08%)</title><rect x="680.9" y="739.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="683.9" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="681.4" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="684.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="681.4" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="684.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="681.4" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="684.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="681.9" y="739.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="684.9" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (752 samples, 30.87%)</title><rect x="682.3" y="739.0" width="364.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="685.3" y="750.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="685.7" y="723.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="688.7" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="686.2" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="689.2" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="686.2" y="707.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="689.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="686.2" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="686.2" y="675.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="689.2" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.25%)</title><rect x="686.7" y="723.0" width="2.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="689.7" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="688.6" y="707.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="691.6" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="689.1" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="692.1" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="689.1" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="692.1" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="689.1" y="675.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="692.1" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.25%)</title><rect x="689.6" y="723.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="692.6" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="690.6" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="693.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.08%)</title><rect x="691.1" y="707.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="694.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="691.6" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="694.6" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="691.6" y="675.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="694.6" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="691.6" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="694.6" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="692.0" y="707.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="695.0" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.16%)</title><rect x="692.5" y="723.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="695.5" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="694.0" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="697.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="694.0" y="691.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="697.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="694.0" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="697.0" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="694.5" y="723.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="697.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (4 samples, 0.16%)</title><rect x="694.9" y="723.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="697.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="696.4" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="699.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="696.4" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="699.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="696.4" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (640 samples, 26.27%)</title><rect x="696.9" y="723.0" width="310.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="699.9" y="734.0">rocksdb::DB::Get(rocksdb::ReadOptions cons..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (4 samples, 0.16%)</title><rect x="697.4" y="707.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="700.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (628 samples, 25.78%)</title><rect x="699.3" y="707.0" width="304.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="702.3" y="718.0">rocksdb::DB::Get(rocksdb::ReadOptions con..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (11 samples, 0.45%)</title><rect x="701.7" y="691.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="704.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (3 samples, 0.12%)</title><rect x="702.7" y="675.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="705.7" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="703.7" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="706.7" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="703.7" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="706.7" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="703.7" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="706.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="704.1" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="707.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) [clone .plt] (1 samples, 0.04%)</title><rect x="704.6" y="675.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="707.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="704.6" y="659.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="707.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="704.6" y="643.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="707.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="704.6" y="627.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="707.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (4 samples, 0.16%)</title><rect x="705.1" y="675.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="708.1" y="686.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.04%)</title><rect x="705.6" y="659.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="708.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (2 samples, 0.08%)</title><rect x="706.1" y="659.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="709.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (608 samples, 24.96%)</title><rect x="707.1" y="691.0" width="294.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="710.1" y="702.0">rocksdb::DBImpl::Get(rocksdb::ReadOption..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (603 samples, 24.75%)</title><rect x="707.1" y="675.0" width="292.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="710.1" y="686.0">rocksdb::DBImpl::Get(rocksdb::ReadOptio..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="707.5" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="710.5" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.04%)</title><rect x="708.0" y="659.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="711.0" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.12%)</title><rect x="708.5" y="659.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="711.5" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="709.5" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="712.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="709.5" y="627.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="712.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="709.5" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="712.5" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="710.0" y="659.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="713.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.08%)</title><rect x="710.4" y="659.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="713.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (4 samples, 0.16%)</title><rect x="711.4" y="659.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="714.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.12%)</title><rect x="713.3" y="659.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="716.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="714.3" y="643.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="717.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="714.3" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="717.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="714.3" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="717.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.08%)</title><rect x="714.8" y="659.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="717.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (562 samples, 23.07%)</title><rect x="715.8" y="659.0" width="272.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="718.8" y="670.0">rocksdb::DBImpl::GetImpl(rocksdb::Re..</text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (1 samples, 0.04%)</title><rect x="725.0" y="643.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="728.0" y="654.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="725.5" y="643.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="728.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="725.5" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="728.5" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="725.5" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="725.5" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.5" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.21%)</title><rect x="725.9" y="643.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="728.9" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.25%)</title><rect x="728.4" y="643.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="731.4" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.12%)</title><rect x="731.3" y="643.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="734.3" y="654.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="732.7" y="643.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="735.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="732.7" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="735.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="732.7" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="735.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="732.7" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="735.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (18 samples, 0.74%)</title><rect x="733.2" y="643.0" width="8.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="736.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.08%)</title><rect x="735.6" y="627.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="738.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() [clone .plt] (1 samples, 0.04%)</title><rect x="736.6" y="627.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="739.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="737.1" y="627.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="740.1" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="737.1" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="740.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="737.1" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="740.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="737.1" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="740.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (6 samples, 0.25%)</title><rect x="737.6" y="627.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="740.6" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="740.0" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="743.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="740.0" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="743.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="740.0" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="743.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (3 samples, 0.12%)</title><rect x="740.5" y="627.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="743.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (3 samples, 0.12%)</title><rect x="740.5" y="611.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="743.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (19 samples, 0.78%)</title><rect x="741.9" y="643.0" width="9.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="744.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (10 samples, 0.41%)</title><rect x="741.9" y="627.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="744.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="741.9" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="744.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="741.9" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="744.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="742.4" y="611.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="745.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() [clone .plt] (1 samples, 0.04%)</title><rect x="742.9" y="611.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="745.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (7 samples, 0.29%)</title><rect x="743.4" y="611.0" width="3.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="746.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="745.8" y="595.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="748.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="746.3" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="749.3" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="746.3" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="749.3" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="746.3" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="749.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (3 samples, 0.12%)</title><rect x="746.8" y="627.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="749.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="747.3" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="747.3" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="750.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="747.3" y="579.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="748.2" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="751.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (5 samples, 0.21%)</title><rect x="748.7" y="627.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="751.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.16%)</title><rect x="751.1" y="643.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="754.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="752.6" y="627.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.6" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="752.6" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="755.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="752.6" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="755.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (2 samples, 0.08%)</title><rect x="753.1" y="643.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="756.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.04%)</title><rect x="754.0" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="757.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.04%)</title><rect x="754.5" y="643.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="757.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (98 samples, 4.02%)</title><rect x="755.0" y="643.0" width="47.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="758.0" y="654.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (1 samples, 0.04%)</title><rect x="758.4" y="627.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="761.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (88 samples, 3.61%)</title><rect x="758.9" y="627.0" width="42.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="761.9" y="638.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (79 samples, 3.24%)</title><rect x="760.3" y="611.0" width="38.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="763.3" y="622.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (4 samples, 0.16%)</title><rect x="762.3" y="595.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="765.3" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="763.7" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="763.7" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="766.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="763.7" y="547.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="766.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (68 samples, 2.79%)</title><rect x="764.2" y="595.0" width="33.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="767.2" y="606.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (3 samples, 0.12%)</title><rect x="781.7" y="579.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="784.7" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="783.1" y="579.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="786.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.12%)</title><rect x="783.6" y="579.0" width="1.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="786.6" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.08%)</title><rect x="785.0" y="579.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="788.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (18 samples, 0.74%)</title><rect x="786.0" y="579.0" width="8.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="789.0" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (1 samples, 0.04%)</title><rect x="788.4" y="563.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="791.4" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.37%)</title><rect x="788.9" y="563.0" width="4.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="791.9" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="793.3" y="563.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="796.3" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="793.8" y="563.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="796.8" y="574.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="794.2" y="563.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="797.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.21%)</title><rect x="794.7" y="579.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="797.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.21%)</title><rect x="794.7" y="563.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="797.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.21%)</title><rect x="794.7" y="547.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="797.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="797.2" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="800.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.04%)</title><rect x="797.6" y="595.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="800.6" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="798.1" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="801.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="798.1" y="579.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="801.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="798.1" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="801.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 0.12%)</title><rect x="798.6" y="611.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="801.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const [clone .plt] (2 samples, 0.08%)</title><rect x="800.1" y="611.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="803.1" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="800.5" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="803.5" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="800.5" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="803.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="800.5" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="803.5" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="801.0" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="804.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="801.0" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="804.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="801.0" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="804.0" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="801.5" y="627.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="804.5" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="801.5" y="611.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="804.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="801.5" y="595.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="804.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (2 samples, 0.08%)</title><rect x="802.5" y="643.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="805.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="803.4" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="806.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (5 samples, 0.21%)</title><rect x="803.9" y="643.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="806.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (4 samples, 0.16%)</title><rect x="804.4" y="627.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="807.4" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="805.9" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="808.9" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="805.9" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="808.9" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="805.9" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="808.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="806.4" y="643.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="809.4" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="806.4" y="627.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="809.4" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="806.4" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="809.4" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="806.4" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="809.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.08%)</title><rect x="806.8" y="643.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="809.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() [clone .plt] (1 samples, 0.04%)</title><rect x="807.8" y="643.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="810.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (4 samples, 0.16%)</title><rect x="808.3" y="643.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="811.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.08%)</title><rect x="810.2" y="643.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="813.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (3 samples, 0.12%)</title><rect x="811.2" y="643.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="814.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (360 samples, 14.78%)</title><rect x="812.7" y="643.0" width="174.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="815.7" y="654.0">rocksdb::Version::Get(..</text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (7 samples, 0.29%)</title><rect x="818.9" y="627.0" width="3.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="821.9" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (5 samples, 0.21%)</title><rect x="819.4" y="611.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="822.4" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="820.9" y="595.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="823.9" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="821.4" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.4" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="821.4" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="824.4" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="821.4" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="824.4" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="821.9" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="824.9" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="821.9" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="824.9" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="821.9" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="824.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="822.3" y="627.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="825.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (1 samples, 0.04%)</title><rect x="822.8" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="825.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::FileIndexer::GetNextLevelIndex(unsigned long, unsigned long, int, int, int*, int*) const (2 samples, 0.08%)</title><rect x="823.3" y="627.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="826.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (4 samples, 0.16%)</title><rect x="824.3" y="627.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="827.3" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="825.7" y="611.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="828.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (4 samples, 0.16%)</title><rect x="826.2" y="627.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="829.2" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="827.7" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="830.7" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="827.7" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="827.7" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="830.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (327 samples, 13.42%)</title><rect x="828.2" y="627.0" width="158.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="831.2" y="638.0">rocksdb::TableCache:..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="830.6" y="611.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="833.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (2 samples, 0.08%)</title><rect x="831.1" y="611.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="834.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (288 samples, 11.82%)</title><rect x="832.0" y="611.0" width="139.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.0" y="622.0">rocksdb::BlockBas..</text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (1 samples, 0.04%)</title><rect x="841.2" y="595.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="844.2" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="841.7" y="595.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="844.7" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="842.7" y="595.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="845.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="843.2" y="595.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="846.2" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="843.7" y="595.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="846.7" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="843.7" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="846.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="843.7" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="846.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="843.7" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="846.7" y="558.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="844.1" y="595.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="847.1" y="606.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="844.6" y="595.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="847.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (9 samples, 0.37%)</title><rect x="845.1" y="595.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="848.1" y="606.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="848.0" y="579.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="851.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="848.5" y="579.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="851.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.04%)</title><rect x="849.0" y="579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="852.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (2 samples, 0.08%)</title><rect x="849.5" y="595.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="852.5" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="850.0" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="853.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="850.0" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="853.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="850.0" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="853.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="850.4" y="595.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="853.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="850.9" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="853.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (3 samples, 0.12%)</title><rect x="851.4" y="595.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="854.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (111 samples, 4.56%)</title><rect x="852.9" y="595.0" width="53.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="855.9" y="606.0">rocks..</text>
</g>
<g>
<title>_ZNK7rocksdb15BlockBasedTable28MaybeReadBlockAndLoadToCacheINS_5BlockEEENS_6StatusEPNS_18FilePrefetchBufferERKNS_11ReadOptionsERKNS_11BlockHandleERKNS_17UncompressionDictEPNS_13CachableEntryIT_EENS_9BlockTypeEPNS_10GetContextEPNS_23BlockCacheLookupContext (2 samples, 0.08%)</title><rect x="854.8" y="579.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="857.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.04%)</title><rect x="855.8" y="579.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="858.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (3 samples, 0.12%)</title><rect x="856.2" y="579.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="859.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (3 samples, 0.12%)</title><rect x="856.2" y="563.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="859.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (4 samples, 0.16%)</title><rect x="857.7" y="579.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="860.7" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="859.2" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="862.2" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="859.2" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="862.2" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="859.2" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="862.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (97 samples, 3.98%)</title><rect x="859.6" y="579.0" width="47.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="862.6" y="590.0">rock..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (4 samples, 0.16%)</title><rect x="862.1" y="563.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="865.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (82 samples, 3.37%)</title><rect x="864.0" y="563.0" width="39.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="867.0" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (3 samples, 0.12%)</title><rect x="866.9" y="547.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="869.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const [clone .plt] (1 samples, 0.04%)</title><rect x="868.4" y="547.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="871.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::Value(rocksdb::Cache::Handle*) (3 samples, 0.12%)</title><rect x="868.8" y="547.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="871.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (69 samples, 2.83%)</title><rect x="870.3" y="547.0" width="33.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="873.3" y="558.0">ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (60 samples, 2.46%)</title><rect x="873.2" y="531.0" width="29.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="876.2" y="542.0">ro..</text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (6 samples, 0.25%)</title><rect x="874.2" y="515.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="877.2" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="875.6" y="499.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="878.6" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="875.6" y="483.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="878.6" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="875.6" y="467.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="878.6" y="478.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits@plt (1 samples, 0.04%)</title><rect x="877.1" y="515.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="880.1" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="877.6" y="515.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="880.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (3 samples, 0.12%)</title><rect x="878.0" y="515.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="881.0" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="878.5" y="499.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="881.5" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="879.0" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="882.0" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="879.0" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="882.0" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="879.0" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="882.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (3 samples, 0.12%)</title><rect x="879.5" y="515.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="882.5" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="880.5" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="883.5" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="880.5" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="883.5" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="880.5" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="883.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (1 samples, 0.04%)</title><rect x="881.0" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="884.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) [clone .plt] (1 samples, 0.04%)</title><rect x="881.4" y="515.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="884.4" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="881.4" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="884.4" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="881.4" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="884.4" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="881.4" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="884.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (37 samples, 1.52%)</title><rect x="881.9" y="515.0" width="17.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="884.9" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (1 samples, 0.04%)</title><rect x="881.9" y="499.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="884.9" y="510.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.08%)</title><rect x="882.4" y="499.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="885.4" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="882.4" y="483.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="885.4" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="882.4" y="467.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="885.4" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="882.4" y="451.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="885.4" y="462.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="882.4" y="435.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="885.4" y="446.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.08%)</title><rect x="882.4" y="419.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="885.4" y="430.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="882.9" y="403.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="885.9" y="414.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="882.9" y="387.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="885.9" y="398.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="882.9" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="885.9" y="382.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="882.9" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="885.9" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (5 samples, 0.21%)</title><rect x="883.4" y="499.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="886.4" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.16%)</title><rect x="883.4" y="483.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="886.4" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.16%)</title><rect x="883.4" y="467.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="886.4" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.16%)</title><rect x="883.4" y="451.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="886.4" y="462.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.16%)</title><rect x="883.4" y="435.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.4" y="446.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.12%)</title><rect x="883.4" y="419.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="886.4" y="430.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.08%)</title><rect x="883.9" y="403.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.9" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.08%)</title><rect x="883.9" y="387.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="886.9" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="883.9" y="371.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="886.9" y="382.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="884.8" y="419.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="887.8" y="430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="885.3" y="483.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="888.3" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="885.3" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="888.3" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="885.3" y="451.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="888.3" y="462.0"></text>
</g>
<g>
<title>malloc_usable_size (2 samples, 0.08%)</title><rect x="885.8" y="499.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="888.8" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="886.3" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="889.3" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="886.3" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="889.3" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="886.3" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="889.3" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.41%)</title><rect x="886.8" y="499.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="889.8" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="890.6" y="483.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.6" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="890.6" y="467.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="893.6" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="890.6" y="451.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="893.6" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.04%)</title><rect x="891.6" y="499.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="894.6" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.08%)</title><rect x="892.1" y="499.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="895.1" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="892.6" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="895.6" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="892.6" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="895.6" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="892.6" y="451.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.6" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.04%)</title><rect x="893.1" y="499.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="896.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="893.5" y="499.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="896.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.08%)</title><rect x="894.0" y="499.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="897.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) [clone .plt] (1 samples, 0.04%)</title><rect x="895.0" y="499.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="898.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (9 samples, 0.37%)</title><rect x="895.5" y="499.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="898.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (9 samples, 0.37%)</title><rect x="895.5" y="483.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.5" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.16%)</title><rect x="897.9" y="467.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.9" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.16%)</title><rect x="897.9" y="451.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="900.9" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.16%)</title><rect x="897.9" y="435.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="900.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (2 samples, 0.08%)</title><rect x="899.8" y="515.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="902.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.08%)</title><rect x="900.8" y="515.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="903.8" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="901.3" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="904.3" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="901.3" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="904.3" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="901.3" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="904.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="901.8" y="515.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="904.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.08%)</title><rect x="902.3" y="531.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="905.3" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="902.8" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.8" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="902.8" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="905.8" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="902.8" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::GetUsage(rocksdb::Cache::Handle*) const (1 samples, 0.04%)</title><rect x="903.2" y="531.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="906.2" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="903.2" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="906.2" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="903.2" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="906.2" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="903.2" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="906.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (5 samples, 0.21%)</title><rect x="903.7" y="563.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="906.7" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="906.1" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="909.1" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="906.1" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="909.1" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="906.1" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="909.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (51 samples, 2.09%)</title><rect x="906.6" y="595.0" width="24.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="909.6" y="606.0">r..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="911.5" y="579.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="914.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (35 samples, 1.44%)</title><rect x="912.0" y="579.0" width="16.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="915.0" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.16%)</title><rect x="912.9" y="563.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="915.9" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="914.4" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="917.4" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="914.4" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="917.4" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="914.4" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="917.4" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="914.9" y="563.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="917.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="915.3" y="563.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="918.3" y="574.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="915.8" y="563.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="918.8" y="574.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.04%)</title><rect x="916.3" y="563.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="919.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (11 samples, 0.45%)</title><rect x="916.8" y="563.0" width="5.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="919.8" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="921.2" y="547.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="924.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="921.2" y="531.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="924.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="921.2" y="515.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="924.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (14 samples, 0.57%)</title><rect x="922.1" y="563.0" width="6.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="925.1" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (2 samples, 0.08%)</title><rect x="925.0" y="547.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="928.0" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.12%)</title><rect x="926.0" y="547.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="929.0" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="927.0" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="930.0" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="927.0" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="930.0" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="927.0" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.0" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="927.5" y="547.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="930.5" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="927.9" y="547.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="930.9" y="558.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="928.4" y="547.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="931.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="928.9" y="579.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="931.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="929.4" y="579.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="932.4" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="929.9" y="563.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="932.9" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="930.4" y="579.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="933.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="930.4" y="563.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="933.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="930.4" y="547.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="933.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (1 samples, 0.04%)</title><rect x="931.3" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="934.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (4 samples, 0.16%)</title><rect x="931.8" y="595.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="934.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (4 samples, 0.16%)</title><rect x="933.8" y="595.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="936.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="935.2" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.2" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="935.2" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="938.2" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="935.2" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="938.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (60 samples, 2.46%)</title><rect x="935.7" y="595.0" width="29.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="938.7" y="606.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni12318600840717126181.so (3 samples, 0.12%)</title><rect x="954.6" y="579.0" width="1.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="957.6" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.12%)</title><rect x="956.0" y="579.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="959.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="957.5" y="579.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="960.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="958.0" y="579.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="961.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) [clone .plt] (2 samples, 0.08%)</title><rect x="958.5" y="579.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="961.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="958.9" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="961.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="958.9" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="961.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="958.9" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="961.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (4 samples, 0.16%)</title><rect x="959.4" y="579.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="962.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (3 samples, 0.12%)</title><rect x="959.9" y="563.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="962.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.16%)</title><rect x="961.4" y="579.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="964.4" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="961.8" y="563.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="964.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="962.3" y="563.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="965.3" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="963.3" y="579.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="963.3" y="563.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="966.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="963.3" y="547.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="966.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (2 samples, 0.08%)</title><rect x="964.8" y="595.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="967.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (4 samples, 0.16%)</title><rect x="965.7" y="595.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="968.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="967.7" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="970.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (1 samples, 0.04%)</title><rect x="968.1" y="595.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="971.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="968.6" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="971.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.12%)</title><rect x="969.1" y="595.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="972.1" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="969.6" y="579.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="972.6" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="969.6" y="563.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="972.6" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="969.6" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="972.6" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="970.6" y="595.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="970.6" y="579.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="973.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="970.6" y="563.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="973.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (7 samples, 0.29%)</title><rect x="971.5" y="611.0" width="3.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="974.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.04%)</title><rect x="974.9" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="977.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (5 samples, 0.21%)</title><rect x="975.4" y="611.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="978.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() [clone .plt] (2 samples, 0.08%)</title><rect x="977.8" y="611.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="980.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (2 samples, 0.08%)</title><rect x="978.8" y="611.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="981.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (1 samples, 0.04%)</title><rect x="979.8" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="982.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="980.3" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="983.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="980.7" y="611.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="983.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (2 samples, 0.08%)</title><rect x="981.2" y="611.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="984.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (2 samples, 0.08%)</title><rect x="982.2" y="611.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="985.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) [clone .plt] (1 samples, 0.04%)</title><rect x="983.2" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="986.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.08%)</title><rect x="983.6" y="611.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="986.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.04%)</title><rect x="984.6" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="987.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() [clone .plt] (1 samples, 0.04%)</title><rect x="985.1" y="611.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="988.1" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="985.1" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="988.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="985.1" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="988.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="985.1" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="988.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="985.6" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="988.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="985.6" y="595.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="988.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="985.6" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="988.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="985.6" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="988.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="986.1" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="989.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="986.1" y="595.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="989.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="986.1" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="989.1" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="986.6" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="989.6" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="986.6" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="989.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="986.6" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="989.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (2 samples, 0.08%)</title><rect x="987.0" y="643.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="990.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="988.0" y="659.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="991.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (3 samples, 0.12%)</title><rect x="988.5" y="659.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="991.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (5 samples, 0.21%)</title><rect x="989.9" y="659.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="992.9" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="991.9" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="994.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="991.9" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="994.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="991.9" y="611.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="994.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.08%)</title><rect x="992.4" y="659.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="995.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (3 samples, 0.12%)</title><rect x="993.3" y="659.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="996.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="994.3" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="997.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="994.3" y="627.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="997.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="994.3" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="997.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() [clone .plt] (1 samples, 0.04%)</title><rect x="994.8" y="659.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="997.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="995.3" y="659.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="998.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (5 samples, 0.21%)</title><rect x="995.8" y="659.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="998.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (2 samples, 0.08%)</title><rect x="998.2" y="659.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1001.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (4 samples, 0.16%)</title><rect x="999.1" y="675.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1002.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="1001.1" y="675.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1004.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (2 samples, 0.08%)</title><rect x="1001.6" y="691.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1004.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.08%)</title><rect x="1002.5" y="691.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1005.5" y="702.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (6 samples, 0.25%)</title><rect x="1003.5" y="707.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.5" y="718.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="1006.4" y="707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1009.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.12%)</title><rect x="1006.9" y="723.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (77 samples, 3.16%)</title><rect x="1008.3" y="723.0" width="37.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1011.3" y="734.0">roc..</text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.04%)</title><rect x="1008.3" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.3" y="718.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="1008.8" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.8" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1009.3" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1012.3" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1009.8" y="707.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1012.8" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (9 samples, 0.37%)</title><rect x="1010.3" y="707.0" width="4.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1013.3" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="1013.2" y="691.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1013.7" y="691.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1013.7" y="675.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1016.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1013.7" y="659.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1016.7" y="670.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1014.2" y="643.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1017.2" y="654.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1014.2" y="627.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1017.2" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1014.2" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1017.2" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (56 samples, 2.30%)</title><rect x="1014.6" y="707.0" width="27.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1017.6" y="718.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="1017.6" y="691.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1020.6" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.16%)</title><rect x="1018.0" y="691.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1021.0" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1019.5" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1022.5" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1019.5" y="659.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1022.5" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1019.5" y="643.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1022.5" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1020.0" y="691.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1023.0" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (43 samples, 1.77%)</title><rect x="1020.5" y="691.0" width="20.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1023.5" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (28 samples, 1.15%)</title><rect x="1025.8" y="675.0" width="13.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1028.8" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (24 samples, 0.99%)</title><rect x="1025.8" y="659.0" width="11.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1028.8" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.16%)</title><rect x="1028.7" y="643.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1031.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1030.1" y="627.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1030.1" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1033.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1030.1" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1033.1" y="606.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (4 samples, 0.16%)</title><rect x="1030.6" y="643.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1033.6" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1032.1" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1035.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1032.1" y="611.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1035.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1032.1" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1035.1" y="606.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1032.6" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1035.6" y="654.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (6 samples, 0.25%)</title><rect x="1033.1" y="643.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1036.1" y="654.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.08%)</title><rect x="1036.0" y="643.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1039.0" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1036.9" y="643.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1039.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1036.9" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1039.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1036.9" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1039.9" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1037.4" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1040.4" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="1037.9" y="659.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1040.9" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1038.4" y="659.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1041.4" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1038.9" y="643.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1041.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1038.9" y="627.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1041.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1038.9" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1041.9" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.12%)</title><rect x="1039.4" y="675.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1042.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1040.8" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1040.8" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1043.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1040.8" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1043.8" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1041.3" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1044.3" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1041.3" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1044.3" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1041.3" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1044.3" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.33%)</title><rect x="1041.8" y="707.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1044.8" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.12%)</title><rect x="1042.3" y="691.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1045.3" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.16%)</title><rect x="1043.7" y="691.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1046.7" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1045.6" y="723.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1048.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1045.6" y="707.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1048.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1045.6" y="691.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1048.6" y="702.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (7 samples, 0.29%)</title><rect x="1046.6" y="739.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1049.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1049.5" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1052.5" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1049.5" y="707.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1052.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1049.5" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1052.5" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="1050.0" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1053.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.49%)</title><rect x="1050.5" y="755.0" width="5.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1053.5" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.29%)</title><rect x="1050.5" y="739.0" width="3.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1053.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1053.4" y="723.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1056.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1053.4" y="707.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1056.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1053.4" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1056.4" y="702.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="1053.9" y="739.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1056.9" y="750.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (4 samples, 0.16%)</title><rect x="1054.4" y="739.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1057.4" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (10 samples, 0.41%)</title><rect x="1056.3" y="755.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1059.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1060.2" y="739.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1063.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1060.2" y="723.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1063.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1060.2" y="707.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1063.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (6 samples, 0.25%)</title><rect x="1061.1" y="755.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1064.1" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1063.6" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1066.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1063.6" y="723.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1066.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1063.6" y="707.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1066.6" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.12%)</title><rect x="1064.1" y="755.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.1" y="766.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1065.5" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1068.5" y="766.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (3 samples, 0.12%)</title><rect x="1066.0" y="755.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1069.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (14 samples, 0.57%)</title><rect x="1067.4" y="787.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (14 samples, 0.57%)</title><rect x="1067.4" y="771.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1070.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.12%)</title><rect x="1070.4" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.12%)</title><rect x="1070.4" y="739.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.12%)</title><rect x="1070.4" y="723.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1073.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.16%)</title><rect x="1071.8" y="755.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1071.8" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1071.8" y="723.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1074.8" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1071.8" y="707.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="1071.8" y="691.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1074.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="1071.8" y="675.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.8" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.08%)</title><rect x="1071.8" y="659.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.8" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1072.8" y="739.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1075.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1072.8" y="723.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1075.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1072.8" y="707.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1075.8" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1073.7" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1076.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1073.7" y="739.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1076.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1073.7" y="723.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1076.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (8 samples, 0.33%)</title><rect x="1074.2" y="803.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1077.2" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.clear (1 samples, 0.04%)</title><rect x="1074.2" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1077.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.12%)</title><rect x="1074.7" y="787.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.7" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.12%)</title><rect x="1074.7" y="771.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1077.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="1075.2" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.2" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.08%)</title><rect x="1075.2" y="739.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.16%)</title><rect x="1076.2" y="787.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.2" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="1076.2" y="771.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1079.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="1076.2" y="755.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1079.2" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="1076.2" y="739.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="1076.2" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="1076.2" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="1076.2" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1079.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.12%)</title><rect x="1076.7" y="723.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="1077.1" y="707.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1080.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.08%)</title><rect x="1077.1" y="691.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.1" y="702.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (11 samples, 0.45%)</title><rect x="1078.1" y="835.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.12%)</title><rect x="1078.1" y="819.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.33%)</title><rect x="1079.6" y="819.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.21%)</title><rect x="1079.6" y="803.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1082.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.21%)</title><rect x="1079.6" y="787.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1082.6" y="798.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (2 samples, 0.08%)</title><rect x="1079.6" y="771.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.6" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.12%)</title><rect x="1080.5" y="771.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1083.5" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1081.5" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1084.5" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1081.5" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1084.5" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1081.5" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1084.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.12%)</title><rect x="1082.0" y="803.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1085.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.37%)</title><rect x="1083.4" y="835.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.37%)</title><rect x="1083.4" y="819.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1083.4" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.33%)</title><rect x="1083.9" y="803.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.33%)</title><rect x="1083.9" y="787.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1086.9" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1087.3" y="771.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1090.3" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1087.3" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.3" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1087.3" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1090.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.08%)</title><rect x="1087.8" y="835.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="1087.8" y="819.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.04%)</title><rect x="1087.8" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1088.3" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.3" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="1088.3" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (26 samples, 1.07%)</title><rect x="1088.8" y="867.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1091.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1091.2" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1094.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1091.2" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1091.2" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1091.2" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.45%)</title><rect x="1091.7" y="851.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.45%)</title><rect x="1091.7" y="835.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (8 samples, 0.33%)</title><rect x="1097.0" y="851.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.0" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1100.4" y="835.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1103.4" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1100.4" y="819.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1103.4" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1100.4" y="803.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1103.4" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1100.9" y="851.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1103.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1100.9" y="835.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1103.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1100.9" y="819.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1103.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="1101.4" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1104.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.41%)</title><rect x="1101.8" y="867.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1105.7" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1105.7" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.7" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1106.2" y="851.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1109.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1106.2" y="835.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1109.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1106.2" y="819.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1109.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (6 samples, 0.25%)</title><rect x="1106.7" y="867.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.12%)</title><rect x="1108.1" y="851.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.33%)</title><rect x="1109.6" y="867.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.29%)</title><rect x="1110.1" y="851.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.1" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1113.0" y="835.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1116.0" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1113.0" y="819.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1116.0" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1113.0" y="803.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1116.0" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.21%)</title><rect x="1113.5" y="867.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1116.5" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.21%)</title><rect x="1113.5" y="851.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1116.5" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.21%)</title><rect x="1113.5" y="835.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1116.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (150 samples, 6.16%)</title><rect x="1115.9" y="883.0" width="72.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.9" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (150 samples, 6.16%)</title><rect x="1115.9" y="867.0" width="72.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.9" y="878.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (39 samples, 1.60%)</title><rect x="1118.3" y="851.0" width="18.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1121.3" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.21%)</title><rect x="1118.3" y="835.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1121.3" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1119.8" y="819.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1122.8" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1119.8" y="803.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.8" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1119.8" y="787.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1122.8" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.12%)</title><rect x="1120.7" y="835.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.7" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1121.7" y="819.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.7" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1121.7" y="803.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1124.7" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1121.7" y="787.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1124.7" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1122.2" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1125.2" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.12%)</title><rect x="1122.7" y="835.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.7" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="1124.1" y="835.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1127.1" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (23 samples, 0.94%)</title><rect x="1124.6" y="835.0" width="11.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1127.6" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1127.5" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1130.5" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (6 samples, 0.25%)</title><rect x="1128.0" y="819.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.0" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1130.4" y="803.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1133.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1130.4" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1133.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1130.4" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.4" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.33%)</title><rect x="1130.9" y="819.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1133.9" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1134.3" y="803.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.3" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1134.3" y="787.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1137.3" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1134.3" y="771.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1137.3" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1134.8" y="819.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.8" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1134.8" y="803.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.8" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1134.8" y="787.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1137.8" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1135.7" y="835.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1138.7" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1135.7" y="819.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1138.7" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1135.7" y="803.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1138.7" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.08%)</title><rect x="1136.2" y="835.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1139.2" y="846.0"></text>
</g>
<g>
<title>__recv (97 samples, 3.98%)</title><rect x="1137.2" y="851.0" width="47.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1140.2" y="862.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 3.57%)</title><rect x="1141.1" y="835.0" width="42.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.1" y="846.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="1141.1" y="819.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1144.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (86 samples, 3.53%)</title><rect x="1141.6" y="819.0" width="41.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1144.6" y="830.0">do_..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.04%)</title><rect x="1145.9" y="803.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1148.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (76 samples, 3.12%)</title><rect x="1146.4" y="803.0" width="36.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1149.4" y="814.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (70 samples, 2.87%)</title><rect x="1146.4" y="787.0" width="33.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1149.4" y="798.0">__..</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1146.4" y="771.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1149.4" y="782.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="1146.9" y="771.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1149.9" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (61 samples, 2.50%)</title><rect x="1147.4" y="771.0" width="29.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1150.4" y="782.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (55 samples, 2.26%)</title><rect x="1147.4" y="755.0" width="26.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1150.4" y="766.0">i..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1147.9" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1150.9" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (53 samples, 2.18%)</title><rect x="1148.3" y="739.0" width="25.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1151.3" y="750.0">t..</text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.25%)</title><rect x="1152.2" y="723.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.2" y="734.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.21%)</title><rect x="1152.2" y="707.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1155.2" y="718.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="1152.2" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.2" y="702.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1152.7" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.7" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.08%)</title><rect x="1153.2" y="691.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1156.2" y="702.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.08%)</title><rect x="1153.2" y="675.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.2" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="1154.2" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1157.2" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="1154.6" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.21%)</title><rect x="1155.1" y="723.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1158.1" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="1157.5" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1160.5" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.08%)</title><rect x="1158.0" y="723.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1161.0" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="1158.0" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1161.0" y="718.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="1158.5" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1161.5" y="718.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.12%)</title><rect x="1159.0" y="723.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1162.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.08%)</title><rect x="1159.5" y="707.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1162.5" y="718.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.08%)</title><rect x="1159.5" y="691.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1162.5" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (18 samples, 0.74%)</title><rect x="1160.5" y="723.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1163.5" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (17 samples, 0.70%)</title><rect x="1160.5" y="707.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1163.5" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (12 samples, 0.49%)</title><rect x="1162.9" y="691.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1165.9" y="702.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.33%)</title><rect x="1162.9" y="675.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.9" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.16%)</title><rect x="1164.8" y="659.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1167.8" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.16%)</title><rect x="1166.7" y="675.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1169.7" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.12%)</title><rect x="1167.2" y="659.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1170.2" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="1168.7" y="707.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1171.7" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.16%)</title><rect x="1169.2" y="723.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.2" y="734.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.08%)</title><rect x="1170.1" y="707.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1173.1" y="718.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (2 samples, 0.08%)</title><rect x="1170.1" y="691.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1173.1" y="702.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.08%)</title><rect x="1170.1" y="675.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.1" y="686.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.08%)</title><rect x="1170.1" y="659.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1173.1" y="670.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.08%)</title><rect x="1170.1" y="643.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1173.1" y="654.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.08%)</title><rect x="1170.1" y="627.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1173.1" y="638.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.08%)</title><rect x="1170.1" y="611.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1173.1" y="622.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.08%)</title><rect x="1170.1" y="595.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1173.1" y="606.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.08%)</title><rect x="1170.1" y="579.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1173.1" y="590.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.08%)</title><rect x="1170.1" y="563.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.1" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.08%)</title><rect x="1170.1" y="547.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.1" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.08%)</title><rect x="1170.1" y="531.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.1" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.08%)</title><rect x="1170.1" y="515.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1173.1" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.08%)</title><rect x="1170.1" y="499.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.1" y="510.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.08%)</title><rect x="1170.1" y="483.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.1" y="494.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.08%)</title><rect x="1170.1" y="467.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1173.1" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.08%)</title><rect x="1170.1" y="451.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1173.1" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.08%)</title><rect x="1170.1" y="435.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1173.1" y="446.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.08%)</title><rect x="1170.1" y="419.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.1" y="430.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.08%)</title><rect x="1170.1" y="403.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.1" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.08%)</title><rect x="1170.1" y="387.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1173.1" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.08%)</title><rect x="1170.1" y="371.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.1" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.08%)</title><rect x="1170.1" y="355.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.1" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.08%)</title><rect x="1170.1" y="339.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1173.1" y="350.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="1170.1" y="323.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.1" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="1170.6" y="323.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1173.6" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="1170.6" y="307.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1173.6" y="318.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="1170.6" y="291.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.6" y="302.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="1170.6" y="275.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1173.6" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.21%)</title><rect x="1171.1" y="723.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1174.1" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.21%)</title><rect x="1171.1" y="707.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.1" y="718.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="1171.1" y="691.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1174.1" y="702.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.12%)</title><rect x="1172.1" y="691.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1175.1" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="1173.5" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1176.5" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.25%)</title><rect x="1174.0" y="755.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.0" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.08%)</title><rect x="1176.0" y="739.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1179.0" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.08%)</title><rect x="1176.0" y="723.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.0" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.29%)</title><rect x="1176.9" y="771.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1179.9" y="782.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.29%)</title><rect x="1176.9" y="755.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.29%)</title><rect x="1176.9" y="739.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1179.9" y="750.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.29%)</title><rect x="1176.9" y="723.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1179.9" y="734.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="1180.3" y="787.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1183.3" y="798.0"></text>
</g>
<g>
<title>import_single_range (5 samples, 0.21%)</title><rect x="1180.8" y="787.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1183.8" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1183.2" y="835.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1183.2" y="819.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1186.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1183.2" y="803.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1186.2" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.29%)</title><rect x="1184.2" y="851.0" width="3.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1187.2" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="1186.1" y="835.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1189.1" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="1186.1" y="819.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1189.1" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="1186.1" y="803.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1189.1" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1187.6" y="851.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1190.6" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1187.6" y="835.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1190.6" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1187.6" y="819.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.6" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="1188.5" y="899.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.5" y="910.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1189.5" y="931.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1192.5" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1189.5" y="915.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1192.5" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1189.5" y="899.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="910.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.04%)</title><rect x="1189.5" y="883.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.04%)</title><rect x="1189.5" y="867.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
</g>
</svg>
