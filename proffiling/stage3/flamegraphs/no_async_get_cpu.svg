<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (2,700 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=44074] (346 samples, 12.81%)</title><rect x="10.0" y="947.0" width="151.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="958.0">[NIO Selector #0 ti..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="10.0" y="931.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="10.0" y="915.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.04%)</title><rect x="10.0" y="899.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (345 samples, 12.78%)</title><rect x="10.4" y="931.0" width="150.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.4" y="942.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (15 samples, 0.56%)</title><rect x="10.4" y="915.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (15 samples, 0.56%)</title><rect x="10.4" y="899.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.4" y="910.0"></text>
</g>
<g>
<title>epoll_wait (15 samples, 0.56%)</title><rect x="10.4" y="883.0" width="6.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.56%)</title><rect x="10.4" y="867.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="13.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.56%)</title><rect x="10.4" y="851.0" width="6.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="13.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (15 samples, 0.56%)</title><rect x="10.4" y="835.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.4" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (15 samples, 0.56%)</title><rect x="10.4" y="819.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="13.4" y="830.0"></text>
</g>
<g>
<title>ep_poll (15 samples, 0.56%)</title><rect x="10.4" y="803.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.4" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.07%)</title><rect x="10.4" y="787.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="13.4" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.07%)</title><rect x="10.4" y="771.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="13.4" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.07%)</title><rect x="10.4" y="755.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="13.4" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.07%)</title><rect x="10.4" y="739.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="13.4" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="10.9" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="13.9" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (13 samples, 0.48%)</title><rect x="11.3" y="787.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="14.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (13 samples, 0.48%)</title><rect x="11.3" y="771.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="14.3" y="782.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.48%)</title><rect x="11.3" y="755.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="14.3" y="766.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.48%)</title><rect x="11.3" y="739.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="14.3" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.44%)</title><rect x="11.7" y="723.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="14.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (329 samples, 12.19%)</title><rect x="17.0" y="915.0" width="143.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.0" y="926.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (327 samples, 12.11%)</title><rect x="17.9" y="899.0" width="142.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.9" y="910.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (306 samples, 11.33%)</title><rect x="17.9" y="883.0" width="133.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.9" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (303 samples, 11.22%)</title><rect x="18.7" y="867.0" width="132.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.7" y="878.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (303 samples, 11.22%)</title><rect x="18.7" y="851.0" width="132.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.7" y="862.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (298 samples, 11.04%)</title><rect x="18.7" y="835.0" width="130.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.7" y="846.0">RequestHandler0_..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (95 samples, 3.52%)</title><rect x="19.2" y="819.0" width="41.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.2" y="830.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (93 samples, 3.44%)</title><rect x="19.6" y="803.0" width="40.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.6" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="19.6" y="787.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="19.6" y="771.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="19.6" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.07%)</title><rect x="19.6" y="739.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 3.37%)</title><rect x="20.5" y="787.0" width="39.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.5" y="798.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 3.37%)</title><rect x="20.5" y="771.0" width="39.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.5" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.04%)</title><rect x="20.5" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (90 samples, 3.33%)</title><rect x="20.9" y="755.0" width="39.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.9" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (90 samples, 3.33%)</title><rect x="20.9" y="739.0" width="39.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.9" y="750.0">one..</text>
</g>
<g>
<title>send (90 samples, 3.33%)</title><rect x="20.9" y="723.0" width="39.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="23.9" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (89 samples, 3.30%)</title><rect x="21.4" y="707.0" width="38.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="24.4" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (89 samples, 3.30%)</title><rect x="21.4" y="691.0" width="38.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.4" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (89 samples, 3.30%)</title><rect x="21.4" y="675.0" width="38.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.4" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (89 samples, 3.30%)</title><rect x="21.4" y="659.0" width="38.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="24.4" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (86 samples, 3.19%)</title><rect x="21.8" y="643.0" width="37.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="24.8" y="654.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (86 samples, 3.19%)</title><rect x="21.8" y="627.0" width="37.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.8" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (86 samples, 3.19%)</title><rect x="21.8" y="611.0" width="37.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="24.8" y="622.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (86 samples, 3.19%)</title><rect x="21.8" y="595.0" width="37.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.8" y="606.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.04%)</title><rect x="22.2" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.2" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="22.7" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="25.7" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="22.7" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="25.7" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="23.1" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="26.1" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="23.1" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="26.1" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.26%)</title><rect x="23.5" y="579.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.5" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.26%)</title><rect x="23.5" y="563.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="26.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.15%)</title><rect x="23.5" y="547.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="26.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="23.5" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="26.5" y="542.0"></text>
</g>
<g>
<title>memset (3 samples, 0.11%)</title><rect x="24.0" y="531.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.0" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="25.3" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="28.3" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="25.7" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="28.7" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="25.7" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="28.7" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="26.2" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (74 samples, 2.74%)</title><rect x="26.6" y="579.0" width="32.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.6" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (74 samples, 2.74%)</title><rect x="26.6" y="563.0" width="32.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="29.6" y="574.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (73 samples, 2.70%)</title><rect x="27.0" y="547.0" width="31.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="30.0" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (69 samples, 2.56%)</title><rect x="27.5" y="531.0" width="30.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="30.5" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (68 samples, 2.52%)</title><rect x="27.9" y="515.0" width="29.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="30.9" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (68 samples, 2.52%)</title><rect x="27.9" y="499.0" width="29.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.9" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (67 samples, 2.48%)</title><rect x="27.9" y="483.0" width="29.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="30.9" y="494.0">ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="27.9" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="30.9" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="27.9" y="451.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="30.9" y="462.0"></text>
</g>
<g>
<title>ip_output (66 samples, 2.44%)</title><rect x="28.4" y="467.0" width="28.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.4" y="478.0">ip..</text>
</g>
<g>
<title>ip_finish_output (65 samples, 2.41%)</title><rect x="28.8" y="451.0" width="28.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="31.8" y="462.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (65 samples, 2.41%)</title><rect x="28.8" y="435.0" width="28.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="31.8" y="446.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (64 samples, 2.37%)</title><rect x="29.2" y="419.0" width="28.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.2" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (57 samples, 2.11%)</title><rect x="30.1" y="403.0" width="24.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="33.1" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (56 samples, 2.07%)</title><rect x="30.5" y="387.0" width="24.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="33.5" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (56 samples, 2.07%)</title><rect x="30.5" y="371.0" width="24.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="33.5" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (55 samples, 2.04%)</title><rect x="30.5" y="355.0" width="24.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="33.5" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (54 samples, 2.00%)</title><rect x="31.0" y="339.0" width="23.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="34.0" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (54 samples, 2.00%)</title><rect x="31.0" y="323.0" width="23.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="34.0" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (53 samples, 1.96%)</title><rect x="31.4" y="307.0" width="23.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="34.4" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (53 samples, 1.96%)</title><rect x="31.4" y="291.0" width="23.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.4" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.07%)</title><rect x="31.4" y="275.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="34.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv (51 samples, 1.89%)</title><rect x="32.3" y="275.0" width="22.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.3" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (51 samples, 1.89%)</title><rect x="32.3" y="259.0" width="22.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.3" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (51 samples, 1.89%)</title><rect x="32.3" y="243.0" width="22.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.3" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 1.89%)</title><rect x="32.3" y="227.0" width="22.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.3" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (51 samples, 1.89%)</title><rect x="32.3" y="211.0" width="22.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.3" y="222.0">i..</text>
</g>
<g>
<title>sock_put (1 samples, 0.04%)</title><rect x="32.3" y="195.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="35.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (50 samples, 1.85%)</title><rect x="32.7" y="195.0" width="21.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.7" y="206.0">t..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="33.6" y="179.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="36.6" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.11%)</title><rect x="34.0" y="179.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="37.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="35.3" y="179.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="38.3" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="35.3" y="163.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="38.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 1.59%)</title><rect x="35.8" y="179.0" width="18.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="38.8" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="35.8" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.8" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="36.2" y="163.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="39.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (41 samples, 1.52%)</title><rect x="36.7" y="163.0" width="17.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="39.7" y="174.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.37%)</title><rect x="36.7" y="147.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="39.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.30%)</title><rect x="37.5" y="131.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="40.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.19%)</title><rect x="38.4" y="115.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="41.4" y="126.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.19%)</title><rect x="38.4" y="99.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="41.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.19%)</title><rect x="38.4" y="83.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="41.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.11%)</title><rect x="39.3" y="67.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="42.3" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.11%)</title><rect x="39.3" y="51.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="42.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.11%)</title><rect x="39.3" y="35.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="42.3" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="40.6" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.6" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (31 samples, 1.15%)</title><rect x="41.0" y="147.0" width="13.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="44.0" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.04%)</title><rect x="41.0" y="131.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="44.0" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (30 samples, 1.11%)</title><rect x="41.5" y="131.0" width="13.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="44.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 1.07%)</title><rect x="41.9" y="115.0" width="12.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="44.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 1.07%)</title><rect x="41.9" y="99.0" width="12.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="44.9" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 1.07%)</title><rect x="41.9" y="83.0" width="12.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="44.9" y="94.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="54.6" y="355.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="57.6" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.19%)</title><rect x="55.0" y="403.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="58.0" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.19%)</title><rect x="55.0" y="387.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="58.0" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="55.0" y="371.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.11%)</title><rect x="55.0" y="355.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.0" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="55.0" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="58.0" y="350.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.07%)</title><rect x="55.5" y="339.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="58.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="56.3" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="59.3" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="56.8" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.8" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="56.8" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="59.8" y="366.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="57.2" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.2" y="494.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="57.6" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="60.6" y="542.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="57.6" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="60.6" y="526.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="57.6" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.6" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.07%)</title><rect x="58.1" y="531.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="61.1" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.07%)</title><rect x="58.1" y="515.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="61.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="58.1" y="499.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="61.1" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.07%)</title><rect x="58.1" y="483.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="61.1" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="58.5" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="61.5" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="58.9" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="61.9" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="58.9" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="61.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="58.9" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.9" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.07%)</title><rect x="59.4" y="643.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="62.4" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="59.4" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="62.4" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="59.4" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.4" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="59.4" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="62.4" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="59.8" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="62.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="60.3" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="60.3" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="60.3" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (202 samples, 7.48%)</title><rect x="60.7" y="819.0" width="88.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.7" y="830.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (201 samples, 7.44%)</title><rect x="61.1" y="803.0" width="87.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.1" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (201 samples, 7.44%)</title><rect x="61.1" y="787.0" width="87.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.1" y="798.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (201 samples, 7.44%)</title><rect x="61.1" y="771.0" width="87.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.1" y="782.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (197 samples, 7.30%)</title><rect x="61.1" y="755.0" width="86.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="64.1" y="766.0">Java_org_r..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="61.1" y="739.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="64.1" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="61.6" y="739.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="64.6" y="750.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="62.0" y="739.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="65.0" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (193 samples, 7.15%)</title><rect x="62.4" y="739.0" width="84.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="65.4" y="750.0">rocksdb_ge..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="62.4" y="723.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="65.4" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.11%)</title><rect x="62.9" y="723.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="65.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (181 samples, 6.70%)</title><rect x="64.2" y="723.0" width="79.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="67.2" y="734.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.07%)</title><rect x="64.2" y="707.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="67.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (179 samples, 6.63%)</title><rect x="65.1" y="707.0" width="78.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="68.1" y="718.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="65.5" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="68.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="65.5" y="675.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="68.5" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="65.5" y="659.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="68.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (176 samples, 6.52%)</title><rect x="65.9" y="691.0" width="77.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="68.9" y="702.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (176 samples, 6.52%)</title><rect x="65.9" y="675.0" width="77.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="68.9" y="686.0">rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="66.4" y="659.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="69.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="66.8" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="69.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (171 samples, 6.33%)</title><rect x="67.3" y="659.0" width="74.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="70.3" y="670.0">rocksdb:..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.11%)</title><rect x="68.1" y="643.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="71.1" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="69.4" y="643.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="72.4" y="654.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="69.9" y="643.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="72.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="70.3" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="73.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="70.3" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="73.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="70.7" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="73.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="70.7" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="73.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="70.7" y="611.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="73.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="70.7" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="73.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (2 samples, 0.07%)</title><rect x="71.2" y="643.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="74.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (23 samples, 0.85%)</title><rect x="72.1" y="643.0" width="10.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="75.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (23 samples, 0.85%)</title><rect x="72.1" y="627.0" width="10.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="75.1" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (22 samples, 0.81%)</title><rect x="72.5" y="611.0" width="9.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="75.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (22 samples, 0.81%)</title><rect x="72.5" y="595.0" width="9.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="75.5" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="76.0" y="579.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="79.0" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="76.9" y="579.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="79.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.19%)</title><rect x="77.3" y="579.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="80.3" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="79.1" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="82.1" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="79.1" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.1" y="558.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="79.1" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="82.1" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="79.1" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="82.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.22%)</title><rect x="79.5" y="579.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="82.5" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.15%)</title><rect x="79.9" y="563.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="82.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="81.7" y="563.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="84.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="82.1" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="85.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="82.1" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="85.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (1 samples, 0.04%)</title><rect x="82.5" y="643.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="85.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (135 samples, 5.00%)</title><rect x="83.0" y="643.0" width="59.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="86.0" y="654.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (5 samples, 0.19%)</title><rect x="84.3" y="627.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="87.3" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="85.6" y="611.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="88.6" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="85.6" y="595.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="88.6" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="86.0" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="89.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="86.0" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="89.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="86.0" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="89.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="86.5" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="89.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (1 samples, 0.04%)</title><rect x="86.9" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="89.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (125 samples, 4.63%)</title><rect x="87.4" y="627.0" width="54.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="90.4" y="638.0">rocks..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="87.8" y="611.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="90.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (118 samples, 4.37%)</title><rect x="88.2" y="611.0" width="51.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="91.2" y="622.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (5 samples, 0.19%)</title><rect x="89.5" y="595.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="92.5" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="91.7" y="595.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="94.7" y="606.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="92.2" y="595.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="95.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (3 samples, 0.11%)</title><rect x="92.6" y="595.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="95.6" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="92.6" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="95.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (2 samples, 0.07%)</title><rect x="93.0" y="579.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="96.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (29 samples, 1.07%)</title><rect x="93.9" y="595.0" width="12.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="96.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (28 samples, 1.04%)</title><rect x="93.9" y="579.0" width="12.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="96.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (26 samples, 0.96%)</title><rect x="94.8" y="563.0" width="11.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="97.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.07%)</title><rect x="94.8" y="547.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="97.8" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="94.8" y="531.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="97.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (1 samples, 0.04%)</title><rect x="95.2" y="531.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="98.2" y="542.0"></text>
</g>
<g>
<title>__libc_pread (1 samples, 0.04%)</title><rect x="95.2" y="515.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="98.2" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="95.2" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="98.2" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="95.2" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.2" y="494.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.04%)</title><rect x="95.2" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="98.2" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.04%)</title><rect x="95.2" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="98.2" y="462.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="95.2" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="98.2" y="446.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.04%)</title><rect x="95.2" y="419.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.2" y="430.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.04%)</title><rect x="95.2" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="98.2" y="414.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.04%)</title><rect x="95.2" y="387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="98.2" y="398.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.04%)</title><rect x="95.2" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.2" y="382.0"></text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.04%)</title><rect x="95.2" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="98.2" y="366.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.04%)</title><rect x="95.2" y="339.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.2" y="350.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (1 samples, 0.04%)</title><rect x="95.7" y="547.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="98.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (23 samples, 0.85%)</title><rect x="96.1" y="547.0" width="10.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="99.1" y="558.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="97.0" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.0" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="97.0" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="100.0" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="97.0" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="100.0" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="97.0" y="483.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (19 samples, 0.70%)</title><rect x="97.4" y="531.0" width="8.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="100.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (2 samples, 0.07%)</title><rect x="97.4" y="515.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="100.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="97.8" y="499.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="100.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (15 samples, 0.56%)</title><rect x="98.3" y="515.0" width="6.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="101.3" y="526.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.07%)</title><rect x="98.3" y="499.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="101.3" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="98.3" y="483.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="101.3" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="98.3" y="467.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.3" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="98.3" y="451.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="101.3" y="462.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="98.3" y="435.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="101.3" y="446.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.07%)</title><rect x="98.3" y="419.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="101.3" y="430.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="98.3" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.3" y="414.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="98.3" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="101.3" y="398.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="98.3" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="101.3" y="382.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="98.3" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.3" y="366.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="98.7" y="403.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="101.7" y="414.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.11%)</title><rect x="99.2" y="499.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="102.2" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="99.6" y="483.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="102.6" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="99.6" y="467.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="102.6" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="99.6" y="451.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="102.6" y="462.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="99.6" y="435.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="102.6" y="446.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="99.6" y="419.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="102.6" y="430.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="99.6" y="403.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="102.6" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="99.6" y="387.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="102.6" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="99.6" y="371.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="102.6" y="382.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.07%)</title><rect x="100.5" y="499.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="103.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (8 samples, 0.30%)</title><rect x="101.3" y="499.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="104.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (8 samples, 0.30%)</title><rect x="101.3" y="483.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="104.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.04%)</title><rect x="104.8" y="515.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="107.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="105.3" y="515.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="108.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetCharge(rocksdb::Cache::Handle*) const (1 samples, 0.04%)</title><rect x="105.7" y="531.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="108.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="106.1" y="579.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="109.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (35 samples, 1.30%)</title><rect x="106.6" y="595.0" width="15.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="109.6" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="107.9" y="579.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="110.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (23 samples, 0.85%)</title><rect x="108.3" y="579.0" width="10.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="111.3" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="108.8" y="563.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="111.8" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="109.6" y="563.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="112.6" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="110.1" y="563.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="113.1" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.22%)</title><rect x="110.5" y="563.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="113.5" y="574.0"></text>
</g>
<g>
<title>memcpy (2 samples, 0.07%)</title><rect x="113.1" y="563.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="116.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (3 samples, 0.11%)</title><rect x="114.0" y="563.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="117.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.26%)</title><rect x="115.3" y="563.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="118.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="115.8" y="547.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="118.8" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="116.2" y="547.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="119.2" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="117.5" y="547.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="120.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="118.4" y="579.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.26%)</title><rect x="118.8" y="579.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="121.8" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="121.4" y="563.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="124.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (3 samples, 0.11%)</title><rect x="121.9" y="595.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="124.9" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="122.8" y="579.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="125.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (34 samples, 1.26%)</title><rect x="123.2" y="595.0" width="14.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="126.2" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="128.9" y="579.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="131.9" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.19%)</title><rect x="129.3" y="579.0" width="2.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="132.3" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="131.5" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="134.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.22%)</title><rect x="131.9" y="579.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="134.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="134.6" y="579.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="137.6" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="135.0" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="138.0" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="135.0" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.0" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="135.0" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="138.0" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="135.0" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="138.0" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="135.0" y="515.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.0" y="526.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="135.0" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="138.0" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="135.0" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="138.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (5 samples, 0.19%)</title><rect x="135.4" y="579.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="138.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="135.4" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="138.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (3 samples, 0.11%)</title><rect x="135.9" y="563.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="138.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) [clone .plt] (1 samples, 0.04%)</title><rect x="137.2" y="563.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="140.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="137.6" y="579.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="140.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="138.1" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="141.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (2 samples, 0.07%)</title><rect x="138.5" y="595.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="141.5" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="138.9" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="141.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="138.9" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="141.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="138.9" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="141.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="139.4" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="142.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="139.8" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="142.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.04%)</title><rect x="140.2" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="143.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="140.2" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.2" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="140.2" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="143.2" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="140.2" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="143.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (1 samples, 0.04%)</title><rect x="140.7" y="611.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="143.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="141.1" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="144.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="141.5" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="144.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.04%)</title><rect x="142.0" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="145.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="142.4" y="659.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="145.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="142.9" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="145.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (8 samples, 0.30%)</title><rect x="143.3" y="723.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="146.3" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="143.3" y="707.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="146.3" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.04%)</title><rect x="143.7" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="146.7" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="143.7" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="146.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="143.7" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="146.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="143.7" y="659.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="146.7" y="670.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="144.2" y="707.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="147.2" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.19%)</title><rect x="144.6" y="707.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="147.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="145.0" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="148.0" y="702.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.04%)</title><rect x="145.5" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="148.5" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.07%)</title><rect x="145.9" y="691.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="148.9" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.07%)</title><rect x="145.9" y="675.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="148.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.07%)</title><rect x="145.9" y="659.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="148.9" y="670.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="146.8" y="739.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="149.8" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.07%)</title><rect x="147.2" y="755.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="150.2" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="148.1" y="755.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="151.1" y="766.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="148.5" y="755.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="151.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.19%)</title><rect x="149.0" y="835.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.19%)</title><rect x="149.0" y="819.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.11%)</title><rect x="149.0" y="803.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.0" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="149.9" y="787.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="152.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="150.3" y="803.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="150.3" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.07%)</title><rect x="150.3" y="771.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="151.2" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="151.6" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (20 samples, 0.74%)</title><rect x="152.0" y="883.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 0.70%)</title><rect x="152.0" y="867.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.0" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="152.9" y="851.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="155.9" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="152.9" y="835.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="155.9" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="152.9" y="819.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="155.9" y="830.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="153.3" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="156.3" y="846.0"></text>
</g>
<g>
<title>__recv (15 samples, 0.56%)</title><rect x="153.8" y="851.0" width="6.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="156.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.52%)</title><rect x="154.2" y="835.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="157.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.52%)</title><rect x="154.2" y="819.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="157.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (14 samples, 0.52%)</title><rect x="154.2" y="803.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="157.2" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (14 samples, 0.52%)</title><rect x="154.2" y="787.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="157.2" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.48%)</title><rect x="154.2" y="771.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="157.2" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="154.2" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="157.2" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.41%)</title><rect x="154.7" y="755.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="157.7" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.37%)</title><rect x="155.1" y="739.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="158.1" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="156.4" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="159.4" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="156.4" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.4" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="156.4" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="159.4" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="156.4" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="159.4" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="156.8" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="159.8" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="157.3" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.3" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.04%)</title><rect x="157.3" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="160.3" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="157.3" y="691.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.3" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="157.3" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.3" y="686.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="157.3" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="160.3" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.15%)</title><rect x="157.7" y="723.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="160.7" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.15%)</title><rect x="157.7" y="707.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="160.7" y="718.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.11%)</title><rect x="157.7" y="691.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="160.7" y="702.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (3 samples, 0.11%)</title><rect x="157.7" y="675.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="160.7" y="686.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (3 samples, 0.11%)</title><rect x="157.7" y="659.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.7" y="670.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="159.0" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="162.0" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="159.5" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="162.5" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="159.5" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.5" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="159.5" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.5" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="159.9" y="771.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.9" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="159.9" y="755.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="162.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="159.9" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.9" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="159.9" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.04%)</title><rect x="160.3" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.3" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="160.8" y="915.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="163.8" y="926.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="160.8" y="899.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="163.8" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="160.8" y="883.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="163.8" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=44075] (367 samples, 13.59%)</title><rect x="161.2" y="947.0" width="160.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="164.2" y="958.0">[NIO Selector #1 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (367 samples, 13.59%)</title><rect x="161.2" y="931.0" width="160.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.2" y="942.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.48%)</title><rect x="161.2" y="915.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 0.48%)</title><rect x="161.2" y="899.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.2" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="161.2" y="883.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="164.2" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="161.7" y="883.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="164.7" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="161.7" y="867.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="164.7" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="161.7" y="851.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="164.7" y="862.0"></text>
</g>
<g>
<title>epoll_wait (11 samples, 0.41%)</title><rect x="162.1" y="883.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="165.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.37%)</title><rect x="162.5" y="867.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="165.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.37%)</title><rect x="162.5" y="851.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="165.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (10 samples, 0.37%)</title><rect x="162.5" y="835.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="165.5" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (10 samples, 0.37%)</title><rect x="162.5" y="819.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="165.5" y="830.0"></text>
</g>
<g>
<title>ep_poll (10 samples, 0.37%)</title><rect x="162.5" y="803.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.5" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.11%)</title><rect x="162.5" y="787.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="165.5" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.11%)</title><rect x="162.5" y="771.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="165.5" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.07%)</title><rect x="163.0" y="755.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="166.0" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.07%)</title><rect x="163.0" y="739.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="166.0" y="750.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.07%)</title><rect x="163.0" y="723.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="166.0" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.26%)</title><rect x="163.8" y="787.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="166.8" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.26%)</title><rect x="163.8" y="771.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="166.8" y="782.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.26%)</title><rect x="163.8" y="755.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="166.8" y="766.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.26%)</title><rect x="163.8" y="739.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="166.8" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.26%)</title><rect x="163.8" y="723.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="166.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (354 samples, 13.11%)</title><rect x="166.9" y="915.0" width="154.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.9" y="926.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (352 samples, 13.04%)</title><rect x="167.3" y="899.0" width="153.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.3" y="910.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (334 samples, 12.37%)</title><rect x="167.3" y="883.0" width="146.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.3" y="894.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (326 samples, 12.07%)</title><rect x="168.6" y="867.0" width="142.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.6" y="878.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (326 samples, 12.07%)</title><rect x="168.6" y="851.0" width="142.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.6" y="862.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (325 samples, 12.04%)</title><rect x="168.6" y="835.0" width="142.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.6" y="846.0">RequestHandler0_ge..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (104 samples, 3.85%)</title><rect x="169.5" y="819.0" width="45.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.5" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="170.4" y="803.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="170.4" y="787.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="170.4" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="170.4" y="755.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="173.4" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="170.4" y="739.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="173.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (99 samples, 3.67%)</title><rect x="171.3" y="803.0" width="43.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.3" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.11%)</title><rect x="171.3" y="787.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="171.7" y="771.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="171.7" y="755.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.07%)</title><rect x="171.7" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (96 samples, 3.56%)</title><rect x="172.6" y="787.0" width="41.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.6" y="798.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (96 samples, 3.56%)</title><rect x="172.6" y="771.0" width="41.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.6" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (96 samples, 3.56%)</title><rect x="172.6" y="755.0" width="41.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.6" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (96 samples, 3.56%)</title><rect x="172.6" y="739.0" width="41.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.6" y="750.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="173.0" y="723.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="176.0" y="734.0"></text>
</g>
<g>
<title>send (94 samples, 3.48%)</title><rect x="173.5" y="723.0" width="41.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="176.5" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (94 samples, 3.48%)</title><rect x="173.5" y="707.0" width="41.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="176.5" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (94 samples, 3.48%)</title><rect x="173.5" y="691.0" width="41.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="176.5" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (94 samples, 3.48%)</title><rect x="173.5" y="675.0" width="41.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="176.5" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (94 samples, 3.48%)</title><rect x="173.5" y="659.0" width="41.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="176.5" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (92 samples, 3.41%)</title><rect x="173.5" y="643.0" width="40.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="176.5" y="654.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (91 samples, 3.37%)</title><rect x="173.9" y="627.0" width="39.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="176.9" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (89 samples, 3.30%)</title><rect x="174.8" y="611.0" width="38.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="177.8" y="622.0">tcp..</text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="174.8" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="177.8" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="174.8" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="177.8" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (88 samples, 3.26%)</title><rect x="175.2" y="595.0" width="38.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.2" y="606.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.07%)</title><rect x="175.6" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="178.6" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="175.6" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="178.6" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="176.1" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="179.1" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.07%)</title><rect x="176.5" y="579.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="179.5" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.07%)</title><rect x="176.5" y="563.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="179.5" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.44%)</title><rect x="177.4" y="579.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.4" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (12 samples, 0.44%)</title><rect x="177.4" y="563.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="177.4" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="180.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.26%)</title><rect x="177.8" y="547.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="180.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.15%)</title><rect x="177.8" y="531.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="180.8" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="179.1" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.1" y="526.0"></text>
</g>
<g>
<title>memset (3 samples, 0.11%)</title><rect x="179.6" y="531.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="182.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="180.9" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="183.9" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="181.3" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="184.3" y="558.0"></text>
</g>
<g>
<title>memset (2 samples, 0.07%)</title><rect x="181.8" y="547.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="184.8" y="558.0"></text>
</g>
<g>
<title>tcp_push (70 samples, 2.59%)</title><rect x="182.6" y="579.0" width="30.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="185.6" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (70 samples, 2.59%)</title><rect x="182.6" y="563.0" width="30.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="185.6" y="574.0">__..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="182.6" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="185.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (69 samples, 2.56%)</title><rect x="183.1" y="547.0" width="30.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="186.1" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (68 samples, 2.52%)</title><rect x="183.1" y="531.0" width="29.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="186.1" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (65 samples, 2.41%)</title><rect x="184.4" y="515.0" width="28.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="187.4" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (65 samples, 2.41%)</title><rect x="184.4" y="499.0" width="28.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.4" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (65 samples, 2.41%)</title><rect x="184.4" y="483.0" width="28.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="187.4" y="494.0">ip..</text>
</g>
<g>
<title>ip_output (65 samples, 2.41%)</title><rect x="184.4" y="467.0" width="28.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="187.4" y="478.0">ip..</text>
</g>
<g>
<title>ip_finish_output (65 samples, 2.41%)</title><rect x="184.4" y="451.0" width="28.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="187.4" y="462.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.07%)</title><rect x="184.4" y="435.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="187.4" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (62 samples, 2.30%)</title><rect x="185.3" y="435.0" width="27.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.3" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (62 samples, 2.30%)</title><rect x="185.3" y="419.0" width="27.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="188.3" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (53 samples, 1.96%)</title><rect x="185.7" y="403.0" width="23.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="188.7" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (53 samples, 1.96%)</title><rect x="185.7" y="387.0" width="23.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="188.7" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (53 samples, 1.96%)</title><rect x="185.7" y="371.0" width="23.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="188.7" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (53 samples, 1.96%)</title><rect x="185.7" y="355.0" width="23.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="188.7" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (52 samples, 1.93%)</title><rect x="185.7" y="339.0" width="22.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="188.7" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (52 samples, 1.93%)</title><rect x="185.7" y="323.0" width="22.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="188.7" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (51 samples, 1.89%)</title><rect x="186.1" y="307.0" width="22.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.1" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (51 samples, 1.89%)</title><rect x="186.1" y="291.0" width="22.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.1" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="186.1" y="275.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="189.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv (50 samples, 1.85%)</title><rect x="186.6" y="275.0" width="21.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="189.6" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (50 samples, 1.85%)</title><rect x="186.6" y="259.0" width="21.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="189.6" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (49 samples, 1.81%)</title><rect x="186.6" y="243.0" width="21.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="189.6" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (49 samples, 1.81%)</title><rect x="186.6" y="227.0" width="21.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="189.6" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (49 samples, 1.81%)</title><rect x="186.6" y="211.0" width="21.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="189.6" y="222.0">i..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="186.6" y="195.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="189.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 1.78%)</title><rect x="187.0" y="195.0" width="21.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="190.0" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.11%)</title><rect x="187.0" y="179.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="190.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (45 samples, 1.67%)</title><rect x="188.3" y="179.0" width="19.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="191.3" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.11%)</title><rect x="188.3" y="163.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="191.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (42 samples, 1.56%)</title><rect x="189.6" y="163.0" width="18.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="192.6" y="174.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.26%)</title><rect x="190.5" y="147.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.5" y="158.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="190.9" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="193.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.19%)</title><rect x="191.4" y="131.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="194.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="191.4" y="115.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.4" y="126.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.15%)</title><rect x="191.4" y="99.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.15%)</title><rect x="191.4" y="83.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="194.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.07%)</title><rect x="192.2" y="67.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="195.2" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.07%)</title><rect x="192.2" y="51.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="195.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="192.7" y="35.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="195.7" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="193.1" y="115.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.1" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="193.6" y="147.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.6" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (32 samples, 1.19%)</title><rect x="194.0" y="147.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.0" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (32 samples, 1.19%)</title><rect x="194.0" y="131.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (32 samples, 1.19%)</title><rect x="194.0" y="115.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (32 samples, 1.19%)</title><rect x="194.0" y="99.0" width="14.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (32 samples, 1.19%)</title><rect x="194.0" y="83.0" width="14.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="197.0" y="94.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="208.0" y="243.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="211.0" y="254.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="208.4" y="339.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="211.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.30%)</title><rect x="208.9" y="403.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="211.9" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.30%)</title><rect x="208.9" y="387.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="210.6" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="213.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="210.6" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="213.6" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="210.6" y="339.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="213.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="210.6" y="323.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.6" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="210.6" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="213.6" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.07%)</title><rect x="211.0" y="371.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="214.0" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="211.9" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.9" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="212.3" y="435.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="215.3" y="446.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="212.8" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="215.8" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="213.2" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.07%)</title><rect x="213.7" y="643.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.7" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="213.7" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="213.7" y="611.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="216.7" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="213.7" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="216.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="214.1" y="627.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="217.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="214.5" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (219 samples, 8.11%)</title><rect x="215.0" y="819.0" width="95.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.0" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (218 samples, 8.07%)</title><rect x="215.4" y="803.0" width="95.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.4" y="814.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (218 samples, 8.07%)</title><rect x="215.4" y="787.0" width="95.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.4" y="798.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (218 samples, 8.07%)</title><rect x="215.4" y="771.0" width="95.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.4" y="782.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (216 samples, 8.00%)</title><rect x="215.4" y="755.0" width="94.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="218.4" y="766.0">Java_org_ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="215.4" y="739.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="218.4" y="750.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.07%)</title><rect x="215.8" y="739.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="218.8" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="216.7" y="739.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="219.7" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.07%)</title><rect x="217.2" y="739.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="220.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="218.0" y="739.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="221.0" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (207 samples, 7.67%)</title><rect x="218.5" y="739.0" width="90.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="221.5" y="750.0">rocksdb_ge..</text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.11%)</title><rect x="218.5" y="723.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="221.5" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="219.8" y="723.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="222.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (194 samples, 7.19%)</title><rect x="220.2" y="723.0" width="84.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="223.2" y="734.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (193 samples, 7.15%)</title><rect x="220.2" y="707.0" width="84.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="223.2" y="718.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (5 samples, 0.19%)</title><rect x="220.2" y="691.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="223.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (2 samples, 0.07%)</title><rect x="220.2" y="675.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="223.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="221.1" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="224.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="221.1" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="224.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.07%)</title><rect x="221.5" y="675.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="224.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (188 samples, 6.96%)</title><rect x="222.4" y="691.0" width="82.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="225.4" y="702.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (188 samples, 6.96%)</title><rect x="222.4" y="675.0" width="82.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="225.4" y="686.0">rocksdb::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="222.4" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="225.4" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="222.8" y="659.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="225.8" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="223.3" y="659.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="226.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.07%)</title><rect x="223.7" y="659.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="226.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (179 samples, 6.63%)</title><rect x="224.6" y="659.0" width="78.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="227.6" y="670.0">rocksdb::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.07%)</title><rect x="224.6" y="643.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="227.6" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="225.5" y="643.0" width="1.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="228.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="227.2" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="230.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.15%)</title><rect x="227.6" y="643.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="230.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.11%)</title><rect x="227.6" y="627.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="230.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.07%)</title><rect x="227.6" y="611.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="230.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="228.5" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="231.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="228.5" y="595.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="231.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="229.0" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="232.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.04%)</title><rect x="229.4" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="232.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (16 samples, 0.59%)</title><rect x="229.8" y="643.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="232.8" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="229.8" y="627.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="232.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (15 samples, 0.56%)</title><rect x="230.3" y="627.0" width="6.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="233.3" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (15 samples, 0.56%)</title><rect x="230.3" y="611.0" width="6.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="233.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (15 samples, 0.56%)</title><rect x="230.3" y="595.0" width="6.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="233.3" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="232.5" y="579.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="235.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="232.9" y="579.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="235.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="234.6" y="579.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="237.6" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="234.6" y="563.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="237.6" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="235.9" y="563.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="238.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="236.4" y="563.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="239.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="236.8" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="239.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="237.3" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="240.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (149 samples, 5.52%)</title><rect x="237.7" y="643.0" width="65.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="240.7" y="654.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.11%)</title><rect x="238.6" y="627.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="241.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (1 samples, 0.04%)</title><rect x="239.9" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="242.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.07%)</title><rect x="240.3" y="627.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="243.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::FileIndexer::GetNextLevelIndex(unsigned long, unsigned long, int, int, int*, int*) const (1 samples, 0.04%)</title><rect x="241.2" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="244.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="241.6" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="244.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="241.6" y="611.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="244.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="242.1" y="627.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="245.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (138 samples, 5.11%)</title><rect x="242.5" y="627.0" width="60.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="245.5" y="638.0">rocksd..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (130 samples, 4.81%)</title><rect x="243.4" y="611.0" width="56.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="246.4" y="622.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="244.7" y="595.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="247.7" y="606.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="245.1" y="595.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="248.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (2 samples, 0.07%)</title><rect x="245.6" y="595.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="248.6" y="606.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="245.6" y="579.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="248.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.04%)</title><rect x="246.0" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="249.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="246.4" y="595.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="249.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (26 samples, 0.96%)</title><rect x="246.9" y="595.0" width="11.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="249.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (1 samples, 0.04%)</title><rect x="247.3" y="579.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="250.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.04%)</title><rect x="247.3" y="563.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="250.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (23 samples, 0.85%)</title><rect x="247.7" y="579.0" width="10.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="250.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (22 samples, 0.81%)</title><rect x="247.7" y="563.0" width="9.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="250.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="247.7" y="547.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="250.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.04%)</title><rect x="248.2" y="547.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="251.2" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="248.2" y="531.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="251.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::Value(rocksdb::Cache::Handle*) (2 samples, 0.07%)</title><rect x="248.6" y="547.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="251.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (18 samples, 0.67%)</title><rect x="249.5" y="547.0" width="7.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="252.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (17 samples, 0.63%)</title><rect x="249.5" y="531.0" width="7.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="252.5" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="249.9" y="515.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="252.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (2 samples, 0.07%)</title><rect x="250.8" y="515.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="253.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (11 samples, 0.41%)</title><rect x="251.7" y="515.0" width="4.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="254.7" y="526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="251.7" y="499.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="254.7" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="251.7" y="483.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="254.7" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="251.7" y="467.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="254.7" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="252.1" y="451.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="255.1" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="252.1" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="255.1" y="446.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="252.1" y="419.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.1" y="430.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="252.6" y="499.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="255.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="253.4" y="499.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="256.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (6 samples, 0.22%)</title><rect x="253.9" y="499.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="256.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (6 samples, 0.22%)</title><rect x="253.9" y="483.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="256.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="256.5" y="515.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="259.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="256.9" y="531.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="259.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="257.4" y="563.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="260.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="257.8" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="260.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (45 samples, 1.67%)</title><rect x="258.2" y="595.0" width="19.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="261.2" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="259.5" y="579.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="262.5" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="260.0" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="263.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="260.4" y="579.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="263.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (27 samples, 1.00%)</title><rect x="261.7" y="579.0" width="11.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="264.7" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="262.6" y="563.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="265.6" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="263.5" y="563.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="266.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (12 samples, 0.44%)</title><rect x="263.9" y="563.0" width="5.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="266.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (3 samples, 0.11%)</title><rect x="269.2" y="563.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="272.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.26%)</title><rect x="270.5" y="563.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="273.5" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="271.8" y="547.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="274.8" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="272.7" y="547.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="275.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (5 samples, 0.19%)</title><rect x="273.5" y="579.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="276.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="275.7" y="579.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="278.7" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="275.7" y="563.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="278.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="277.0" y="563.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="280.0" y="574.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="277.5" y="563.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="280.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (7 samples, 0.26%)</title><rect x="277.9" y="595.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="280.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (1 samples, 0.04%)</title><rect x="277.9" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="280.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (6 samples, 0.22%)</title><rect x="278.3" y="579.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="281.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (5 samples, 0.19%)</title><rect x="278.3" y="563.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="281.3" y="574.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.04%)</title><rect x="278.3" y="547.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="281.3" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="278.8" y="547.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="281.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (3 samples, 0.11%)</title><rect x="279.2" y="547.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="282.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="280.5" y="563.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="283.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (41 samples, 1.52%)</title><rect x="281.0" y="595.0" width="17.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="284.0" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="285.3" y="579.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="288.3" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.26%)</title><rect x="285.8" y="579.0" width="3.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="288.8" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.11%)</title><rect x="288.8" y="579.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="291.8" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.33%)</title><rect x="290.1" y="579.0" width="4.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="293.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (2 samples, 0.07%)</title><rect x="294.1" y="579.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="297.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.04%)</title><rect x="294.5" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="297.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 0.33%)</title><rect x="294.9" y="579.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="297.9" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="296.7" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="299.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="297.1" y="563.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="300.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="298.9" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="301.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.07%)</title><rect x="299.3" y="595.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="302.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.04%)</title><rect x="300.2" y="611.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="303.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="300.6" y="611.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="303.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="301.1" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="304.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="301.5" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="304.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.07%)</title><rect x="301.9" y="611.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="304.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="302.8" y="659.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="305.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (3 samples, 0.11%)</title><rect x="303.3" y="659.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="306.3" y="670.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="304.6" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="307.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (8 samples, 0.30%)</title><rect x="305.0" y="723.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="308.0" y="734.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="305.0" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="308.0" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="305.4" y="707.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="308.4" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.22%)</title><rect x="305.9" y="707.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="308.9" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="305.9" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="308.9" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.19%)</title><rect x="306.3" y="691.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="309.3" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.15%)</title><rect x="306.7" y="675.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="309.7" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.11%)</title><rect x="306.7" y="659.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="309.7" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="306.7" y="643.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="309.7" y="654.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="307.2" y="643.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="310.2" y="654.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="307.6" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="310.6" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="308.1" y="659.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="311.1" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="308.5" y="723.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="311.5" y="734.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.07%)</title><rect x="308.9" y="739.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="311.9" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.07%)</title><rect x="309.8" y="755.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="312.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="310.7" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="310.7" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="310.7" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.15%)</title><rect x="311.1" y="867.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="311.1" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="311.1" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="311.1" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="311.1" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="314.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.11%)</title><rect x="311.6" y="851.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="312.9" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="312.9" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 0.67%)</title><rect x="313.3" y="883.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 0.63%)</title><rect x="313.7" y="867.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.7" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="314.2" y="851.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="317.2" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="314.2" y="835.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="317.2" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="314.2" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="317.2" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="314.6" y="819.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="317.6" y="830.0"></text>
</g>
<g>
<title>__recv (13 samples, 0.48%)</title><rect x="315.1" y="851.0" width="5.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="318.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.41%)</title><rect x="315.9" y="835.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="318.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.41%)</title><rect x="315.9" y="819.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="318.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 0.37%)</title><rect x="316.4" y="803.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="319.4" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.37%)</title><rect x="316.4" y="787.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="319.4" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (10 samples, 0.37%)</title><rect x="316.4" y="771.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="319.4" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="316.8" y="755.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="319.8" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (8 samples, 0.30%)</title><rect x="317.2" y="755.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="320.2" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.30%)</title><rect x="317.2" y="739.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="320.2" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="318.5" y="723.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="321.5" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.11%)</title><rect x="319.0" y="723.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.0" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.11%)</title><rect x="319.0" y="707.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.0" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.07%)</title><rect x="319.4" y="691.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.4" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="319.4" y="675.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="322.4" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="319.9" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="322.9" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="320.3" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="323.3" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="320.3" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="323.3" y="718.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="320.3" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="323.3" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="320.7" y="851.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="323.7" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="321.2" y="899.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="324.2" y="910.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="321.2" y="883.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="324.2" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="321.2" y="867.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="324.2" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=44076] (343 samples, 12.70%)</title><rect x="321.6" y="947.0" width="149.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="324.6" y="958.0">[NIO Selector #2 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (343 samples, 12.70%)</title><rect x="321.6" y="931.0" width="149.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.6" y="942.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 0.74%)</title><rect x="322.0" y="915.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (17 samples, 0.63%)</title><rect x="323.4" y="899.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.4" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="323.8" y="883.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="326.8" y="894.0"></text>
</g>
<g>
<title>epoll_wait (15 samples, 0.56%)</title><rect x="324.2" y="883.0" width="6.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="327.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.48%)</title><rect x="325.1" y="867.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="328.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.48%)</title><rect x="325.1" y="851.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="328.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (13 samples, 0.48%)</title><rect x="325.1" y="835.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.1" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (13 samples, 0.48%)</title><rect x="325.1" y="819.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="328.1" y="830.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.48%)</title><rect x="325.1" y="803.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.19%)</title><rect x="325.1" y="787.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.1" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.19%)</title><rect x="325.1" y="771.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="328.1" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.07%)</title><rect x="325.1" y="755.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="328.1" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.07%)</title><rect x="325.1" y="739.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.1" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.07%)</title><rect x="325.1" y="723.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.1" y="734.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.11%)</title><rect x="326.0" y="755.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="329.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.30%)</title><rect x="327.3" y="787.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="330.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.30%)</title><rect x="327.3" y="771.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="330.3" y="782.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.30%)</title><rect x="327.3" y="755.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="330.3" y="766.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.30%)</title><rect x="327.3" y="739.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="330.3" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.30%)</title><rect x="327.3" y="723.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="330.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (322 samples, 11.93%)</title><rect x="330.8" y="915.0" width="140.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.8" y="926.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (321 samples, 11.89%)</title><rect x="331.2" y="899.0" width="140.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.2" y="910.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (305 samples, 11.30%)</title><rect x="331.2" y="883.0" width="133.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.2" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (300 samples, 11.11%)</title><rect x="331.2" y="867.0" width="131.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.2" y="878.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (299 samples, 11.07%)</title><rect x="331.7" y="851.0" width="130.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.7" y="862.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (297 samples, 11.00%)</title><rect x="331.7" y="835.0" width="129.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.7" y="846.0">RequestHandler0_..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (101 samples, 3.74%)</title><rect x="331.7" y="819.0" width="44.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.7" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.15%)</title><rect x="332.1" y="803.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.15%)</title><rect x="332.1" y="787.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="335.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.15%)</title><rect x="332.1" y="771.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="332.1" y="755.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="335.1" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="332.1" y="739.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="335.1" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="332.5" y="755.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="335.5" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="333.0" y="755.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="336.0" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="333.0" y="739.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="336.0" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="333.4" y="723.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="336.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (96 samples, 3.56%)</title><rect x="333.8" y="803.0" width="42.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.8" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="333.8" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="333.8" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="333.8" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="333.8" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (95 samples, 3.52%)</title><rect x="334.3" y="787.0" width="41.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.3" y="798.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (95 samples, 3.52%)</title><rect x="334.3" y="771.0" width="41.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.3" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (95 samples, 3.52%)</title><rect x="334.3" y="755.0" width="41.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.3" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (95 samples, 3.52%)</title><rect x="334.3" y="739.0" width="41.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.3" y="750.0">one..</text>
</g>
<g>
<title>send (95 samples, 3.52%)</title><rect x="334.3" y="723.0" width="41.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="337.3" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (95 samples, 3.52%)</title><rect x="334.3" y="707.0" width="41.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="337.3" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (95 samples, 3.52%)</title><rect x="334.3" y="691.0" width="41.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="337.3" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (94 samples, 3.48%)</title><rect x="334.7" y="675.0" width="41.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="337.7" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (94 samples, 3.48%)</title><rect x="334.7" y="659.0" width="41.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="337.7" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (93 samples, 3.44%)</title><rect x="335.2" y="643.0" width="40.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="338.2" y="654.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="335.2" y="627.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="338.2" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (92 samples, 3.41%)</title><rect x="335.6" y="627.0" width="40.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="338.6" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (92 samples, 3.41%)</title><rect x="335.6" y="611.0" width="40.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="338.6" y="622.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="335.6" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="338.6" y="606.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="336.0" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="339.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (89 samples, 3.30%)</title><rect x="336.5" y="595.0" width="38.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="339.5" y="606.0">tcp..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="336.5" y="579.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="339.5" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.07%)</title><rect x="336.5" y="563.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="339.5" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="337.3" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="340.3" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="337.3" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="340.3" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.26%)</title><rect x="337.8" y="579.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="340.8" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.22%)</title><rect x="338.2" y="563.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="341.2" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.19%)</title><rect x="338.2" y="547.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="341.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="338.2" y="531.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="341.2" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="339.1" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="342.1" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="339.5" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="342.5" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="340.0" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="343.0" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="340.4" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="343.4" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="340.8" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="343.8" y="590.0"></text>
</g>
<g>
<title>tcp_push (78 samples, 2.89%)</title><rect x="341.3" y="579.0" width="34.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.3" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (78 samples, 2.89%)</title><rect x="341.3" y="563.0" width="34.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="344.3" y="574.0">__..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="341.3" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="344.3" y="558.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.04%)</title><rect x="341.7" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="344.7" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (76 samples, 2.81%)</title><rect x="342.1" y="547.0" width="33.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="345.1" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (66 samples, 2.44%)</title><rect x="343.0" y="531.0" width="28.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="346.0" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (64 samples, 2.37%)</title><rect x="343.0" y="515.0" width="28.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.0" y="526.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (64 samples, 2.37%)</title><rect x="343.0" y="499.0" width="28.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.0" y="510.0">_..</text>
</g>
<g>
<title>ip_local_out (62 samples, 2.30%)</title><rect x="343.9" y="483.0" width="27.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="346.9" y="494.0">i..</text>
</g>
<g>
<title>ip_output (61 samples, 2.26%)</title><rect x="343.9" y="467.0" width="26.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="346.9" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (61 samples, 2.26%)</title><rect x="343.9" y="451.0" width="26.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="346.9" y="462.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="343.9" y="435.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="346.9" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (60 samples, 2.22%)</title><rect x="344.3" y="435.0" width="26.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="347.3" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (60 samples, 2.22%)</title><rect x="344.3" y="419.0" width="26.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="347.3" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (54 samples, 2.00%)</title><rect x="344.3" y="403.0" width="23.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="347.3" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (54 samples, 2.00%)</title><rect x="344.3" y="387.0" width="23.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="347.3" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (54 samples, 2.00%)</title><rect x="344.3" y="371.0" width="23.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="347.3" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (54 samples, 2.00%)</title><rect x="344.3" y="355.0" width="23.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="347.3" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (54 samples, 2.00%)</title><rect x="344.3" y="339.0" width="23.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="347.3" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (54 samples, 2.00%)</title><rect x="344.3" y="323.0" width="23.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="347.3" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (53 samples, 1.96%)</title><rect x="344.8" y="307.0" width="23.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="347.8" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (53 samples, 1.96%)</title><rect x="344.8" y="291.0" width="23.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="347.8" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (52 samples, 1.93%)</title><rect x="345.2" y="275.0" width="22.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="348.2" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (52 samples, 1.93%)</title><rect x="345.2" y="259.0" width="22.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="348.2" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (52 samples, 1.93%)</title><rect x="345.2" y="243.0" width="22.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.2" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 1.93%)</title><rect x="345.2" y="227.0" width="22.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="348.2" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 1.93%)</title><rect x="345.2" y="211.0" width="22.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="348.2" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (52 samples, 1.93%)</title><rect x="345.2" y="195.0" width="22.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="348.2" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="346.1" y="179.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="349.1" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="346.5" y="163.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (48 samples, 1.78%)</title><rect x="347.0" y="179.0" width="20.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="350.0" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="347.0" y="163.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="350.0" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.04%)</title><rect x="347.4" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="350.4" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (46 samples, 1.70%)</title><rect x="347.8" y="163.0" width="20.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="350.8" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="347.8" y="147.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="350.8" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="347.8" y="131.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="350.8" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="347.8" y="115.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="350.8" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="347.8" y="99.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="350.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="347.8" y="83.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="350.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.30%)</title><rect x="348.3" y="147.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="351.3" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="348.3" y="131.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="351.3" y="142.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.07%)</title><rect x="348.7" y="131.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="351.7" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.15%)</title><rect x="349.6" y="131.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="352.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="350.0" y="115.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="353.0" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="350.0" y="99.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="353.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="350.0" y="83.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="353.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.07%)</title><rect x="350.0" y="67.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="353.0" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.07%)</title><rect x="350.0" y="51.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="353.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.07%)</title><rect x="350.0" y="35.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="353.0" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="350.9" y="115.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.9" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="351.3" y="131.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="354.3" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (36 samples, 1.33%)</title><rect x="351.8" y="147.0" width="15.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="354.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (36 samples, 1.33%)</title><rect x="351.8" y="131.0" width="15.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (36 samples, 1.33%)</title><rect x="351.8" y="115.0" width="15.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="354.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (36 samples, 1.33%)</title><rect x="351.8" y="99.0" width="15.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="354.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (36 samples, 1.33%)</title><rect x="351.8" y="83.0" width="15.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="354.8" y="94.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="367.5" y="147.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="370.5" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.22%)</title><rect x="367.9" y="403.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="370.9" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.22%)</title><rect x="367.9" y="387.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="370.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.07%)</title><rect x="369.2" y="371.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="372.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.07%)</title><rect x="369.2" y="355.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="372.2" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.07%)</title><rect x="369.2" y="339.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="372.2" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.07%)</title><rect x="369.2" y="323.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="372.2" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.07%)</title><rect x="369.2" y="307.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="372.2" y="318.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.04%)</title><rect x="370.1" y="371.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="373.1" y="382.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="370.6" y="467.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="373.6" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="371.0" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="374.0" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="371.4" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="374.4" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.11%)</title><rect x="371.9" y="531.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="374.9" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="373.2" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="376.2" y="542.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="373.2" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="376.2" y="526.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="373.2" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="376.2" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="373.6" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="376.6" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.07%)</title><rect x="374.1" y="531.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="377.1" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="374.5" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="377.5" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="374.5" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="377.5" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="374.5" y="483.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="377.5" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="374.5" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="377.5" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="374.9" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="377.9" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="375.4" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="378.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="375.8" y="819.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.8" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="375.8" y="803.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="378.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="376.2" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="376.2" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="376.2" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="376.2" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (194 samples, 7.19%)</title><rect x="376.7" y="819.0" width="84.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.7" y="830.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="377.1" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (192 samples, 7.11%)</title><rect x="377.5" y="803.0" width="84.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.5" y="814.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (192 samples, 7.11%)</title><rect x="377.5" y="787.0" width="84.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.5" y="798.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (192 samples, 7.11%)</title><rect x="377.5" y="771.0" width="84.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.5" y="782.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (190 samples, 7.04%)</title><rect x="377.5" y="755.0" width="83.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="380.5" y="766.0">Java_org_..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="377.5" y="739.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="380.5" y="750.0"></text>
</g>
<g>
<title>cfree (3 samples, 0.11%)</title><rect x="378.0" y="739.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="381.0" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="379.3" y="739.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="382.3" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.07%)</title><rect x="379.7" y="739.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="382.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="380.6" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="383.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="381.0" y="739.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="384.0" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (180 samples, 6.67%)</title><rect x="381.5" y="739.0" width="78.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="384.5" y="750.0">rocksdb_g..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="381.9" y="723.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="384.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (170 samples, 6.30%)</title><rect x="382.4" y="723.0" width="74.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="385.4" y="734.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (170 samples, 6.30%)</title><rect x="382.4" y="707.0" width="74.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="385.4" y="718.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.07%)</title><rect x="382.4" y="691.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="385.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (1 samples, 0.04%)</title><rect x="382.4" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="385.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="382.8" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="385.8" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="382.8" y="659.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="385.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (166 samples, 6.15%)</title><rect x="383.2" y="691.0" width="72.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="386.2" y="702.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (164 samples, 6.07%)</title><rect x="383.7" y="675.0" width="71.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="386.7" y="686.0">rocksdb:..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="383.7" y="659.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="386.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="385.0" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="388.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (159 samples, 5.89%)</title><rect x="385.4" y="659.0" width="69.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="388.4" y="670.0">rocksdb..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="388.5" y="643.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="391.5" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="388.9" y="643.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="391.9" y="654.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="389.3" y="643.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="392.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.07%)</title><rect x="389.8" y="643.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="392.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.07%)</title><rect x="389.8" y="627.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="392.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="390.2" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="393.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="390.7" y="643.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="393.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.07%)</title><rect x="391.1" y="643.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="394.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="391.1" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="394.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="391.5" y="627.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="394.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (21 samples, 0.78%)</title><rect x="392.0" y="643.0" width="9.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="395.0" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="392.0" y="627.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="395.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (20 samples, 0.74%)</title><rect x="392.4" y="627.0" width="8.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="395.4" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (20 samples, 0.74%)</title><rect x="392.4" y="611.0" width="8.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="395.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (19 samples, 0.70%)</title><rect x="392.8" y="595.0" width="8.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="395.8" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="394.6" y="579.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="397.6" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="395.0" y="579.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="398.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="395.5" y="579.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="398.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.33%)</title><rect x="397.2" y="579.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="400.2" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="398.1" y="563.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="401.1" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.15%)</title><rect x="398.5" y="563.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="401.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="400.3" y="563.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="403.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.04%)</title><rect x="401.1" y="643.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="404.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (121 samples, 4.48%)</title><rect x="401.6" y="643.0" width="52.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="404.6" y="654.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.15%)</title><rect x="402.9" y="627.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="405.9" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="404.2" y="611.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="407.2" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="404.6" y="627.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="407.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="405.1" y="627.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="408.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="405.1" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="408.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (112 samples, 4.15%)</title><rect x="405.5" y="627.0" width="49.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="408.5" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="406.0" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="409.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (105 samples, 3.89%)</title><rect x="406.4" y="611.0" width="45.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="409.4" y="622.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="406.8" y="595.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="409.8" y="606.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="407.3" y="595.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="410.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (4 samples, 0.15%)</title><rect x="407.7" y="595.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="410.7" y="606.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="408.6" y="579.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="411.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="409.0" y="579.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="412.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.04%)</title><rect x="409.5" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="412.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="409.9" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="412.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (1 samples, 0.04%)</title><rect x="410.3" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="413.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (30 samples, 1.11%)</title><rect x="410.8" y="595.0" width="13.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="413.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.04%)</title><rect x="411.6" y="579.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="414.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (27 samples, 1.00%)</title><rect x="412.1" y="579.0" width="11.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="415.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (26 samples, 0.96%)</title><rect x="412.1" y="563.0" width="11.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="415.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (3 samples, 0.11%)</title><rect x="412.1" y="547.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="415.1" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="412.5" y="531.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="415.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (1 samples, 0.04%)</title><rect x="412.9" y="531.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="415.9" y="542.0"></text>
</g>
<g>
<title>__libc_pread (1 samples, 0.04%)</title><rect x="412.9" y="515.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="415.9" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="412.9" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="415.9" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="412.9" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="415.9" y="494.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.04%)</title><rect x="412.9" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="415.9" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.04%)</title><rect x="412.9" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="415.9" y="462.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="412.9" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="415.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (1 samples, 0.04%)</title><rect x="413.4" y="547.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="416.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::Value(rocksdb::Cache::Handle*) (1 samples, 0.04%)</title><rect x="413.8" y="547.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="416.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (21 samples, 0.78%)</title><rect x="414.3" y="547.0" width="9.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="417.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (21 samples, 0.78%)</title><rect x="414.3" y="531.0" width="9.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="417.3" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="414.3" y="515.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="417.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="414.7" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="417.7" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="414.7" y="499.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="417.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="415.1" y="515.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="418.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (17 samples, 0.63%)</title><rect x="415.6" y="515.0" width="7.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="418.6" y="526.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 0.11%)</title><rect x="415.6" y="499.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="418.6" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="416.0" y="483.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="419.0" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="416.0" y="467.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="419.0" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="416.0" y="451.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="419.0" y="462.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="416.0" y="435.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="419.0" y="446.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.07%)</title><rect x="416.0" y="419.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="419.0" y="430.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.07%)</title><rect x="416.0" y="403.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="419.0" y="414.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="416.0" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="419.0" y="398.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="416.4" y="387.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="419.4" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.15%)</title><rect x="416.9" y="499.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="419.9" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="416.9" y="483.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="419.9" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="416.9" y="467.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="419.9" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.15%)</title><rect x="416.9" y="451.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="419.9" y="462.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.15%)</title><rect x="416.9" y="435.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="419.9" y="446.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.15%)</title><rect x="416.9" y="419.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.9" y="430.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.15%)</title><rect x="416.9" y="403.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="419.9" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.15%)</title><rect x="416.9" y="387.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="419.9" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.15%)</title><rect x="416.9" y="371.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="419.9" y="382.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.04%)</title><rect x="418.6" y="499.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="421.6" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="419.1" y="499.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="422.1" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="419.5" y="499.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="422.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="420.4" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="423.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.19%)</title><rect x="420.8" y="499.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="423.8" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="420.8" y="483.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="423.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.15%)</title><rect x="421.3" y="483.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="424.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="423.0" y="515.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="426.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::StopWatch(rocksdb::Env*, rocksdb::Statistics*, unsigned int, unsigned long*, bool, bool) (1 samples, 0.04%)</title><rect x="423.4" y="563.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="426.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (27 samples, 1.00%)</title><rect x="423.9" y="595.0" width="11.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="426.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="424.7" y="579.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="427.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (16 samples, 0.59%)</title><rect x="425.6" y="579.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="428.6" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="426.1" y="563.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="429.1" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="426.5" y="563.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="429.5" y="574.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="426.9" y="563.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="429.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (8 samples, 0.30%)</title><rect x="427.4" y="563.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="430.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="430.9" y="563.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="433.9" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="432.2" y="547.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="435.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.07%)</title><rect x="432.6" y="579.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="435.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="433.5" y="579.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="436.5" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="434.4" y="563.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="437.4" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="435.2" y="563.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="438.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (7 samples, 0.26%)</title><rect x="435.7" y="595.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="438.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.11%)</title><rect x="437.0" y="579.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="440.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (1 samples, 0.04%)</title><rect x="437.0" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="440.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.07%)</title><rect x="437.4" y="563.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="440.4" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="437.4" y="547.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="440.4" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="437.9" y="547.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="440.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="438.3" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="441.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (2 samples, 0.07%)</title><rect x="438.7" y="595.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="441.7" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="438.7" y="579.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="441.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (24 samples, 0.89%)</title><rect x="439.6" y="595.0" width="10.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="442.6" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="442.7" y="579.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="445.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.22%)</title><rect x="444.0" y="579.0" width="2.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="447.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (2 samples, 0.07%)</title><rect x="446.6" y="579.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="449.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (2 samples, 0.07%)</title><rect x="446.6" y="563.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="449.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 0.22%)</title><rect x="447.5" y="579.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="450.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="447.9" y="563.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="450.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="449.7" y="563.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="452.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="450.1" y="595.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="453.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="450.5" y="595.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="453.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="451.0" y="595.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="454.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.04%)</title><rect x="452.3" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="455.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (2 samples, 0.07%)</title><rect x="452.7" y="611.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="455.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="453.6" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="456.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="454.0" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="457.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (1 samples, 0.04%)</title><rect x="454.5" y="643.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="457.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="454.9" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="457.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.04%)</title><rect x="455.3" y="675.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="458.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.04%)</title><rect x="455.8" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="458.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="456.2" y="691.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="459.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (8 samples, 0.30%)</title><rect x="456.7" y="723.0" width="3.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="459.7" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.07%)</title><rect x="456.7" y="707.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="459.7" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.22%)</title><rect x="457.5" y="707.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="460.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="458.0" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="461.0" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.15%)</title><rect x="458.4" y="691.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="461.4" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.15%)</title><rect x="458.4" y="675.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="461.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.15%)</title><rect x="458.4" y="659.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="461.4" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="458.8" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="461.8" y="654.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="459.3" y="643.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="462.3" y="654.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.04%)</title><rect x="459.7" y="643.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="462.7" y="654.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.04%)</title><rect x="460.1" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="463.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="460.6" y="755.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="463.6" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="460.6" y="739.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="463.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="461.5" y="835.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="461.5" y="819.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.07%)</title><rect x="461.5" y="803.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.15%)</title><rect x="462.3" y="867.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="462.8" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="462.8" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.07%)</title><rect x="463.2" y="851.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="464.1" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="464.1" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.59%)</title><rect x="464.5" y="883.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.59%)</title><rect x="464.5" y="867.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.5" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="465.4" y="851.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="468.4" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="465.4" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="468.4" y="846.0"></text>
</g>
<g>
<title>__recv (12 samples, 0.44%)</title><rect x="465.8" y="851.0" width="5.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="468.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.41%)</title><rect x="466.3" y="835.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.41%)</title><rect x="466.3" y="819.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="469.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.41%)</title><rect x="466.3" y="803.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.3" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.37%)</title><rect x="466.3" y="787.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.3" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.33%)</title><rect x="466.3" y="771.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.3" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="466.3" y="755.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.3" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 0.26%)</title><rect x="466.7" y="755.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="469.7" y="766.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="466.7" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.7" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.22%)</title><rect x="467.1" y="739.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="470.1" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="468.0" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="471.0" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="468.0" y="707.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="471.0" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="468.0" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="471.0" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="468.0" y="675.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.0" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.07%)</title><rect x="468.5" y="723.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="471.5" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="469.3" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="472.3" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="469.8" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.8" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="469.8" y="739.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.8" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="469.8" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.8" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="470.2" y="771.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="473.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="470.2" y="755.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.2" y="766.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="470.6" y="787.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="473.6" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="471.1" y="851.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="474.1" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=44077] (302 samples, 11.19%)</title><rect x="471.5" y="947.0" width="132.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="474.5" y="958.0">[NIO Selector #3..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (302 samples, 11.19%)</title><rect x="471.5" y="931.0" width="132.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.5" y="942.0">one/nio/server/S..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="471.9" y="915.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="474.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="471.9" y="899.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="474.9" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="471.9" y="883.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="474.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.44%)</title><rect x="472.4" y="915.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 0.44%)</title><rect x="472.4" y="899.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.4" y="910.0"></text>
</g>
<g>
<title>epoll_wait (11 samples, 0.41%)</title><rect x="472.8" y="883.0" width="4.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="475.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.37%)</title><rect x="473.3" y="867.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="476.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.37%)</title><rect x="473.3" y="851.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="476.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 0.33%)</title><rect x="473.7" y="835.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="476.7" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (9 samples, 0.33%)</title><rect x="473.7" y="819.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="476.7" y="830.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.33%)</title><rect x="473.7" y="803.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.7" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.07%)</title><rect x="473.7" y="787.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="476.7" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.07%)</title><rect x="473.7" y="771.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="476.7" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.07%)</title><rect x="473.7" y="755.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="476.7" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.07%)</title><rect x="473.7" y="739.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="476.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.26%)</title><rect x="474.6" y="787.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="477.6" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.26%)</title><rect x="474.6" y="771.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="477.6" y="782.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.26%)</title><rect x="474.6" y="755.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="477.6" y="766.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.26%)</title><rect x="474.6" y="739.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="477.6" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.26%)</title><rect x="474.6" y="723.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="477.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (288 samples, 10.67%)</title><rect x="477.6" y="915.0" width="125.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.6" y="926.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (286 samples, 10.59%)</title><rect x="478.5" y="899.0" width="125.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.5" y="910.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (279 samples, 10.33%)</title><rect x="478.5" y="883.0" width="121.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.5" y="894.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (274 samples, 10.15%)</title><rect x="478.5" y="867.0" width="119.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.5" y="878.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (274 samples, 10.15%)</title><rect x="478.5" y="851.0" width="119.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.5" y="862.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (272 samples, 10.07%)</title><rect x="478.5" y="835.0" width="118.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.5" y="846.0">RequestHandler..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="478.5" y="819.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="481.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (78 samples, 2.89%)</title><rect x="478.9" y="819.0" width="34.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.9" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (75 samples, 2.78%)</title><rect x="479.4" y="803.0" width="32.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.4" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.19%)</title><rect x="479.4" y="787.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="480.7" y="771.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="480.7" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.07%)</title><rect x="480.7" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.7" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="481.1" y="723.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="484.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 2.59%)</title><rect x="481.6" y="787.0" width="30.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.6" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 2.59%)</title><rect x="481.6" y="771.0" width="30.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.6" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (70 samples, 2.59%)</title><rect x="481.6" y="755.0" width="30.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.6" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (70 samples, 2.59%)</title><rect x="481.6" y="739.0" width="30.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.6" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="481.6" y="723.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="484.6" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="482.0" y="707.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="485.0" y="718.0"></text>
</g>
<g>
<title>send (68 samples, 2.52%)</title><rect x="482.4" y="723.0" width="29.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="485.4" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 2.52%)</title><rect x="482.4" y="707.0" width="29.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.4" y="718.0">en..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="482.4" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="485.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 2.48%)</title><rect x="482.9" y="691.0" width="29.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="485.9" y="702.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (66 samples, 2.44%)</title><rect x="483.3" y="675.0" width="28.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="486.3" y="686.0">__..</text>
</g>
<g>
<title>__sys_sendto (66 samples, 2.44%)</title><rect x="483.3" y="659.0" width="28.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="486.3" y="670.0">__..</text>
</g>
<g>
<title>sock_sendmsg (66 samples, 2.44%)</title><rect x="483.3" y="643.0" width="28.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="486.3" y="654.0">so..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="483.7" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.7" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (63 samples, 2.33%)</title><rect x="484.2" y="627.0" width="27.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.2" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (63 samples, 2.33%)</title><rect x="484.2" y="611.0" width="27.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="487.2" y="622.0">t..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="484.2" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="487.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (61 samples, 2.26%)</title><rect x="484.6" y="595.0" width="26.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.6" y="606.0">t..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.07%)</title><rect x="485.1" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="488.1" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.07%)</title><rect x="485.1" y="563.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="488.1" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="485.9" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="488.9" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="485.9" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="488.9" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.19%)</title><rect x="486.4" y="579.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.4" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="486.8" y="563.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="489.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.07%)</title><rect x="486.8" y="547.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="489.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.07%)</title><rect x="486.8" y="531.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="489.8" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.07%)</title><rect x="487.7" y="547.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="490.7" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="488.6" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="491.6" y="590.0"></text>
</g>
<g>
<title>tcp_push (48 samples, 1.78%)</title><rect x="489.0" y="579.0" width="21.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="492.0" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (48 samples, 1.78%)</title><rect x="489.0" y="563.0" width="21.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="492.0" y="574.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="489.4" y="547.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="492.4" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (46 samples, 1.70%)</title><rect x="489.9" y="547.0" width="20.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="492.9" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (43 samples, 1.59%)</title><rect x="490.7" y="531.0" width="18.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="493.7" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (43 samples, 1.59%)</title><rect x="490.7" y="515.0" width="18.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="493.7" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (43 samples, 1.59%)</title><rect x="490.7" y="499.0" width="18.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.7" y="510.0"></text>
</g>
<g>
<title>ip_local_out (43 samples, 1.59%)</title><rect x="490.7" y="483.0" width="18.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="493.7" y="494.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="490.7" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="493.7" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="490.7" y="451.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="493.7" y="462.0"></text>
</g>
<g>
<title>ip_output (42 samples, 1.56%)</title><rect x="491.2" y="467.0" width="18.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.2" y="478.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="491.2" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (41 samples, 1.52%)</title><rect x="491.6" y="451.0" width="17.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="494.6" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (41 samples, 1.52%)</title><rect x="491.6" y="435.0" width="17.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="494.6" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (41 samples, 1.52%)</title><rect x="491.6" y="419.0" width="17.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="494.6" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (37 samples, 1.37%)</title><rect x="491.6" y="403.0" width="16.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.6" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (37 samples, 1.37%)</title><rect x="491.6" y="387.0" width="16.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="494.6" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (37 samples, 1.37%)</title><rect x="491.6" y="371.0" width="16.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="494.6" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (37 samples, 1.37%)</title><rect x="491.6" y="355.0" width="16.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.6" y="366.0"></text>
</g>
<g>
<title>net_rx_action (36 samples, 1.33%)</title><rect x="492.1" y="339.0" width="15.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="495.1" y="350.0"></text>
</g>
<g>
<title>process_backlog (36 samples, 1.33%)</title><rect x="492.1" y="323.0" width="15.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="495.1" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (36 samples, 1.33%)</title><rect x="492.1" y="307.0" width="15.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.1" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (36 samples, 1.33%)</title><rect x="492.1" y="291.0" width="15.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="495.1" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="492.5" y="275.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="495.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (34 samples, 1.26%)</title><rect x="492.9" y="275.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="495.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (34 samples, 1.26%)</title><rect x="492.9" y="259.0" width="14.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="495.9" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (34 samples, 1.26%)</title><rect x="492.9" y="243.0" width="14.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="495.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (34 samples, 1.26%)</title><rect x="492.9" y="227.0" width="14.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.9" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (34 samples, 1.26%)</title><rect x="492.9" y="211.0" width="14.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="495.9" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="492.9" y="195.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="495.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (33 samples, 1.22%)</title><rect x="493.4" y="195.0" width="14.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="496.4" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="493.4" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="496.4" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="493.8" y="179.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="496.8" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="493.8" y="163.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="496.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 1.15%)</title><rect x="494.2" y="179.0" width="13.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="497.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (31 samples, 1.15%)</title><rect x="494.2" y="163.0" width="13.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="497.2" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="494.7" y="147.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="497.7" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="494.7" y="131.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="497.7" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="494.7" y="115.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="497.7" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="494.7" y="99.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="497.7" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="494.7" y="83.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="497.7" y="94.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.30%)</title><rect x="495.1" y="147.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.1" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="495.5" y="131.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="498.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.22%)</title><rect x="496.0" y="131.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="499.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="496.0" y="115.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="499.0" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="496.0" y="99.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="499.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="496.0" y="83.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="499.0" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="496.0" y="67.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="499.0" y="78.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.11%)</title><rect x="496.4" y="99.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="499.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.11%)</title><rect x="496.4" y="83.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="499.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.11%)</title><rect x="496.4" y="67.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="499.4" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.11%)</title><rect x="496.4" y="51.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="499.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="497.3" y="35.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="500.3" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="497.7" y="115.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.7" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="498.2" y="115.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="501.2" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (19 samples, 0.70%)</title><rect x="498.6" y="147.0" width="8.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="501.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (19 samples, 0.70%)</title><rect x="498.6" y="131.0" width="8.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="501.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.70%)</title><rect x="498.6" y="115.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="501.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.70%)</title><rect x="498.6" y="99.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.70%)</title><rect x="498.6" y="83.0" width="8.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="501.6" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.07%)</title><rect x="506.9" y="147.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="509.9" y="158.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="506.9" y="131.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="509.9" y="142.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="506.9" y="115.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="509.9" y="126.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="506.9" y="99.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="509.9" y="110.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="507.3" y="131.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="510.3" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.15%)</title><rect x="507.8" y="403.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="510.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.15%)</title><rect x="507.8" y="387.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="510.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.15%)</title><rect x="507.8" y="371.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="510.8" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.07%)</title><rect x="508.2" y="355.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="511.2" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.07%)</title><rect x="508.2" y="339.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="511.2" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.07%)</title><rect x="508.2" y="323.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="511.2" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.07%)</title><rect x="508.2" y="307.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="511.2" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="509.1" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="512.1" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="509.5" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="512.5" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="509.5" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="512.5" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="509.5" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="512.5" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="509.5" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="512.5" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="509.5" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="512.5" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.11%)</title><rect x="510.0" y="579.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="513.0" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="510.0" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="513.0" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.07%)</title><rect x="510.4" y="563.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="513.4" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.07%)</title><rect x="510.4" y="547.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="513.4" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="511.3" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="514.3" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="511.7" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="514.7" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="511.7" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="514.7" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="511.7" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="514.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="512.2" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="513.0" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="513.0" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="513.0" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (192 samples, 7.11%)</title><rect x="513.5" y="819.0" width="83.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.5" y="830.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (192 samples, 7.11%)</title><rect x="513.5" y="803.0" width="83.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.5" y="814.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (192 samples, 7.11%)</title><rect x="513.5" y="787.0" width="83.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.5" y="798.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (192 samples, 7.11%)</title><rect x="513.5" y="771.0" width="83.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.5" y="782.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (185 samples, 6.85%)</title><rect x="513.5" y="755.0" width="80.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="516.5" y="766.0">Java_org_..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="513.9" y="739.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="516.9" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="514.3" y="739.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="517.3" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="514.8" y="739.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="517.8" y="750.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="515.2" y="739.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="518.2" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="515.7" y="739.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="518.7" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (179 samples, 6.63%)</title><rect x="516.1" y="739.0" width="78.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="519.1" y="750.0">rocksdb_g..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="516.1" y="723.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="519.1" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="516.5" y="723.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="519.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (164 samples, 6.07%)</title><rect x="517.0" y="723.0" width="71.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="520.0" y="734.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (160 samples, 5.93%)</title><rect x="517.0" y="707.0" width="69.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="520.0" y="718.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (160 samples, 5.93%)</title><rect x="517.0" y="691.0" width="69.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="520.0" y="702.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (160 samples, 5.93%)</title><rect x="517.0" y="675.0" width="69.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="520.0" y="686.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="517.0" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="520.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (158 samples, 5.85%)</title><rect x="517.4" y="659.0" width="69.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="520.4" y="670.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="518.3" y="643.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="521.3" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="518.7" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="521.7" y="654.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="519.1" y="643.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="522.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="519.6" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="522.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.11%)</title><rect x="520.0" y="643.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="523.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.07%)</title><rect x="520.5" y="627.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="523.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (27 samples, 1.00%)</title><rect x="521.3" y="643.0" width="11.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="524.3" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="522.2" y="627.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="525.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (24 samples, 0.89%)</title><rect x="522.6" y="627.0" width="10.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="525.6" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (24 samples, 0.89%)</title><rect x="522.6" y="611.0" width="10.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="525.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (21 samples, 0.78%)</title><rect x="522.6" y="595.0" width="9.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="525.6" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="526.6" y="579.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="529.6" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="527.0" y="579.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="530.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.19%)</title><rect x="527.5" y="579.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="530.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="529.6" y="579.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="532.6" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="530.1" y="563.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="533.1" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="530.5" y="563.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="533.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="530.9" y="563.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="533.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="531.8" y="595.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="534.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.04%)</title><rect x="533.1" y="643.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="536.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="533.6" y="643.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="536.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (120 samples, 4.44%)</title><rect x="534.0" y="643.0" width="52.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="537.0" y="654.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.11%)</title><rect x="534.4" y="627.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="537.4" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="534.9" y="611.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="537.9" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="534.9" y="595.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="537.9" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="535.3" y="611.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="538.3" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="535.8" y="627.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="538.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (1 samples, 0.04%)</title><rect x="536.2" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="539.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (114 samples, 4.22%)</title><rect x="536.6" y="627.0" width="49.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="539.6" y="638.0">rocks..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="537.5" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="540.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (110 samples, 4.07%)</title><rect x="537.9" y="611.0" width="48.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="540.9" y="622.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.11%)</title><rect x="539.3" y="595.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="542.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="540.6" y="595.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="543.6" y="606.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="540.6" y="579.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="543.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.04%)</title><rect x="541.0" y="595.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="544.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (2 samples, 0.07%)</title><rect x="541.4" y="595.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="544.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (20 samples, 0.74%)</title><rect x="542.3" y="595.0" width="8.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="545.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.04%)</title><rect x="542.3" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="545.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (19 samples, 0.70%)</title><rect x="542.7" y="579.0" width="8.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="545.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="542.7" y="563.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="545.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (17 samples, 0.63%)</title><rect x="543.2" y="563.0" width="7.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="546.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (15 samples, 0.56%)</title><rect x="543.6" y="547.0" width="6.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="546.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (15 samples, 0.56%)</title><rect x="543.6" y="531.0" width="6.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="546.6" y="542.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (3 samples, 0.11%)</title><rect x="544.1" y="515.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="547.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (2 samples, 0.07%)</title><rect x="545.4" y="515.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="548.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="545.8" y="499.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="548.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="546.2" y="515.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="549.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (7 samples, 0.26%)</title><rect x="546.7" y="515.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="549.7" y="526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="546.7" y="499.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="549.7" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="546.7" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="549.7" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="546.7" y="467.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="549.7" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="546.7" y="451.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="549.7" y="462.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="546.7" y="435.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="549.7" y="446.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="546.7" y="419.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="549.7" y="430.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="546.7" y="403.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="549.7" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="546.7" y="387.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.7" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="546.7" y="371.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="549.7" y="382.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="547.6" y="499.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="550.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="548.0" y="499.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="551.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.11%)</title><rect x="548.4" y="499.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="551.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.11%)</title><rect x="548.4" y="483.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="551.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.04%)</title><rect x="549.7" y="515.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="552.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="550.2" y="547.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="553.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.04%)</title><rect x="550.2" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="553.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.04%)</title><rect x="550.2" y="515.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="553.2" y="526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="550.2" y="499.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="553.2" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="550.2" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="553.2" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="550.2" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.2" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="550.2" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.2" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="550.2" y="435.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="553.2" y="446.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="550.2" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="553.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="550.6" y="563.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="553.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (43 samples, 1.59%)</title><rect x="551.1" y="595.0" width="18.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="554.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="551.1" y="579.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="554.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="551.5" y="579.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="554.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (30 samples, 1.11%)</title><rect x="552.8" y="579.0" width="13.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="555.8" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (5 samples, 0.19%)</title><rect x="553.2" y="563.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="556.2" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="555.4" y="563.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="558.4" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="555.9" y="563.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="558.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.26%)</title><rect x="556.3" y="563.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="559.3" y="574.0"></text>
</g>
<g>
<title>memcpy (4 samples, 0.15%)</title><rect x="559.4" y="563.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="562.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (4 samples, 0.15%)</title><rect x="561.1" y="563.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="564.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.26%)</title><rect x="562.9" y="563.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="565.9" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="562.9" y="547.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="565.9" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="564.2" y="547.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="567.2" y="558.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="565.5" y="547.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="568.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="565.9" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="568.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 0.30%)</title><rect x="566.3" y="579.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="569.3" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="567.7" y="563.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="570.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="568.5" y="563.0" width="1.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="571.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (4 samples, 0.15%)</title><rect x="569.8" y="595.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="572.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (4 samples, 0.15%)</title><rect x="569.8" y="579.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="572.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (4 samples, 0.15%)</title><rect x="569.8" y="563.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="572.8" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.07%)</title><rect x="569.8" y="547.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="572.8" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="570.7" y="547.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="573.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="571.2" y="547.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="574.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (29 samples, 1.07%)</title><rect x="571.6" y="595.0" width="12.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="574.6" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="575.5" y="579.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="578.5" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.11%)</title><rect x="576.4" y="579.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="579.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.26%)</title><rect x="577.7" y="579.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="580.7" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="580.8" y="579.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="583.8" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="580.8" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="583.8" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="580.8" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="583.8" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="580.8" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="583.8" y="542.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="581.2" y="579.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="584.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (2 samples, 0.07%)</title><rect x="581.6" y="579.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="584.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="581.6" y="563.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="584.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.04%)</title><rect x="582.1" y="563.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="585.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="582.5" y="579.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="585.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="583.8" y="563.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="586.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="584.3" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="587.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="584.7" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="587.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.07%)</title><rect x="585.1" y="595.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="588.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="586.0" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="589.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="586.5" y="659.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="589.5" y="670.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (4 samples, 0.15%)</title><rect x="586.9" y="707.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="589.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (13 samples, 0.48%)</title><rect x="588.6" y="723.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="591.6" y="734.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="588.6" y="707.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="591.6" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="589.1" y="707.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="592.1" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="589.1" y="691.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="592.1" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 0.30%)</title><rect x="589.5" y="707.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="592.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.11%)</title><rect x="589.9" y="691.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="592.9" y="702.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.04%)</title><rect x="591.3" y="691.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="594.3" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.11%)</title><rect x="591.7" y="691.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="594.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="592.6" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="595.6" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.11%)</title><rect x="593.0" y="707.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="596.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="593.4" y="691.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="596.4" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="593.9" y="691.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="596.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="594.3" y="755.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="597.3" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="594.3" y="739.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="597.3" y="750.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="594.8" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="597.8" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="595.2" y="755.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="598.2" y="766.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="595.6" y="755.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="598.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.07%)</title><rect x="596.1" y="755.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="599.1" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="596.9" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="599.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="597.4" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="597.4" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.07%)</title><rect x="597.4" y="803.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.4" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="597.8" y="787.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="600.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.15%)</title><rect x="598.3" y="867.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.07%)</title><rect x="598.3" y="851.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="598.3" y="835.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="598.3" y="819.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="598.3" y="803.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="599.1" y="851.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="599.1" y="835.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="600.0" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.26%)</title><rect x="600.4" y="883.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.22%)</title><rect x="600.4" y="867.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.4" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.15%)</title><rect x="600.4" y="851.0" width="1.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="603.4" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="600.4" y="835.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="603.4" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="600.9" y="835.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="603.9" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="601.3" y="835.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="604.3" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.07%)</title><rect x="601.3" y="819.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="604.3" y="830.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.07%)</title><rect x="602.2" y="851.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="605.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="602.2" y="835.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="605.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="602.2" y="819.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="605.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.07%)</title><rect x="602.2" y="803.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="605.2" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.07%)</title><rect x="602.2" y="787.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="605.2" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="602.2" y="771.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="605.2" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.04%)</title><rect x="602.2" y="755.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="605.2" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.04%)</title><rect x="602.2" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="605.2" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="602.2" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="605.2" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="602.6" y="771.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="605.6" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="602.6" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="605.6" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="602.6" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="605.6" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="602.6" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="605.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.04%)</title><rect x="603.1" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.1" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=44078] (336 samples, 12.44%)</title><rect x="603.5" y="947.0" width="146.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="606.5" y="958.0">[NIO Selector #4 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (336 samples, 12.44%)</title><rect x="603.5" y="931.0" width="146.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.5" y="942.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.52%)</title><rect x="604.4" y="915.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 0.48%)</title><rect x="604.8" y="899.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.8" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="604.8" y="883.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="607.8" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="605.2" y="883.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="608.2" y="894.0"></text>
</g>
<g>
<title>epoll_wait (11 samples, 0.41%)</title><rect x="605.7" y="883.0" width="4.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="608.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.41%)</title><rect x="605.7" y="867.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="608.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.41%)</title><rect x="605.7" y="851.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="608.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (10 samples, 0.37%)</title><rect x="606.1" y="835.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="609.1" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (9 samples, 0.33%)</title><rect x="606.1" y="819.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.1" y="830.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 0.26%)</title><rect x="607.0" y="803.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.0" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.11%)</title><rect x="607.0" y="787.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="610.0" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.11%)</title><rect x="607.0" y="771.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="610.0" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.11%)</title><rect x="607.0" y="755.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="610.0" y="766.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.11%)</title><rect x="607.0" y="739.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="610.0" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.15%)</title><rect x="608.3" y="787.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="611.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.15%)</title><rect x="608.3" y="771.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="611.3" y="782.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.15%)</title><rect x="608.3" y="755.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="611.3" y="766.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.15%)</title><rect x="608.3" y="739.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="611.3" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.15%)</title><rect x="608.3" y="723.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="611.3" y="734.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.04%)</title><rect x="610.1" y="819.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="613.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (320 samples, 11.85%)</title><rect x="610.5" y="915.0" width="139.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.5" y="926.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (320 samples, 11.85%)</title><rect x="610.5" y="899.0" width="139.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.5" y="910.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (302 samples, 11.19%)</title><rect x="610.5" y="883.0" width="132.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.5" y="894.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (298 samples, 11.04%)</title><rect x="611.4" y="867.0" width="130.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.4" y="878.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (298 samples, 11.04%)</title><rect x="611.4" y="851.0" width="130.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.4" y="862.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (297 samples, 11.00%)</title><rect x="611.4" y="835.0" width="129.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.4" y="846.0">RequestHandler0_..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="611.8" y="819.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="614.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (99 samples, 3.67%)</title><rect x="612.7" y="819.0" width="43.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.7" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="613.5" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="613.5" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="613.5" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.5" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="613.5" y="755.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="616.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (96 samples, 3.56%)</title><rect x="614.0" y="803.0" width="41.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.0" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="614.0" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="614.4" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="614.4" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="614.4" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (94 samples, 3.48%)</title><rect x="614.9" y="787.0" width="41.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.9" y="798.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (94 samples, 3.48%)</title><rect x="614.9" y="771.0" width="41.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.9" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (93 samples, 3.44%)</title><rect x="615.3" y="755.0" width="40.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.3" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (93 samples, 3.44%)</title><rect x="615.3" y="739.0" width="40.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.3" y="750.0">one..</text>
</g>
<g>
<title>send (93 samples, 3.44%)</title><rect x="615.3" y="723.0" width="40.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="618.3" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (91 samples, 3.37%)</title><rect x="616.2" y="707.0" width="39.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="619.2" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (91 samples, 3.37%)</title><rect x="616.2" y="691.0" width="39.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="619.2" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (89 samples, 3.30%)</title><rect x="617.0" y="675.0" width="38.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.0" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (89 samples, 3.30%)</title><rect x="617.0" y="659.0" width="38.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="620.0" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (89 samples, 3.30%)</title><rect x="617.0" y="643.0" width="38.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="620.0" y="654.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.07%)</title><rect x="617.0" y="627.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.0" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (87 samples, 3.22%)</title><rect x="617.9" y="627.0" width="38.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.9" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (87 samples, 3.22%)</title><rect x="617.9" y="611.0" width="38.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="620.9" y="622.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="617.9" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.9" y="606.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.07%)</title><rect x="618.4" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="621.4" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (84 samples, 3.11%)</title><rect x="619.2" y="595.0" width="36.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="622.2" y="606.0">tcp..</text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="620.1" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="623.1" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.19%)</title><rect x="620.5" y="579.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="623.5" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.19%)</title><rect x="620.5" y="563.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="623.5" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="620.5" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="623.5" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="620.5" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="623.5" y="542.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.11%)</title><rect x="621.0" y="547.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="624.0" y="558.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.11%)</title><rect x="621.0" y="531.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="624.0" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="622.3" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="625.3" y="558.0"></text>
</g>
<g>
<title>tcp_push (75 samples, 2.78%)</title><rect x="622.7" y="579.0" width="32.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="625.7" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (75 samples, 2.78%)</title><rect x="622.7" y="563.0" width="32.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="625.7" y="574.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (74 samples, 2.74%)</title><rect x="623.2" y="547.0" width="32.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="626.2" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="623.6" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="626.6" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (69 samples, 2.56%)</title><rect x="624.0" y="531.0" width="30.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="627.0" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (65 samples, 2.41%)</title><rect x="624.9" y="515.0" width="28.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="627.9" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (65 samples, 2.41%)</title><rect x="624.9" y="499.0" width="28.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="627.9" y="510.0">__..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="624.9" y="483.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="627.9" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="624.9" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="627.9" y="478.0"></text>
</g>
<g>
<title>ip_local_out (63 samples, 2.33%)</title><rect x="625.3" y="483.0" width="27.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="628.3" y="494.0">i..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="625.3" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="628.3" y="478.0"></text>
</g>
<g>
<title>ip_output (62 samples, 2.30%)</title><rect x="625.8" y="467.0" width="27.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="628.8" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (62 samples, 2.30%)</title><rect x="625.8" y="451.0" width="27.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="628.8" y="462.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="625.8" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="628.8" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (61 samples, 2.26%)</title><rect x="626.2" y="435.0" width="26.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.2" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (61 samples, 2.26%)</title><rect x="626.2" y="419.0" width="26.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="629.2" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (57 samples, 2.11%)</title><rect x="626.7" y="403.0" width="24.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="629.7" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (57 samples, 2.11%)</title><rect x="626.7" y="387.0" width="24.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="629.7" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (57 samples, 2.11%)</title><rect x="626.7" y="371.0" width="24.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="629.7" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (57 samples, 2.11%)</title><rect x="626.7" y="355.0" width="24.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="629.7" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (57 samples, 2.11%)</title><rect x="626.7" y="339.0" width="24.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="629.7" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (56 samples, 2.07%)</title><rect x="627.1" y="323.0" width="24.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="630.1" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (56 samples, 2.07%)</title><rect x="627.1" y="307.0" width="24.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="630.1" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (56 samples, 2.07%)</title><rect x="627.1" y="291.0" width="24.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="630.1" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (56 samples, 2.07%)</title><rect x="627.1" y="275.0" width="24.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="630.1" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (56 samples, 2.07%)</title><rect x="627.1" y="259.0" width="24.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="630.1" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (56 samples, 2.07%)</title><rect x="627.1" y="243.0" width="24.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="630.1" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (56 samples, 2.07%)</title><rect x="627.1" y="227.0" width="24.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="630.1" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (56 samples, 2.07%)</title><rect x="627.1" y="211.0" width="24.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="630.1" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (56 samples, 2.07%)</title><rect x="627.1" y="195.0" width="24.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="630.1" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="628.4" y="179.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="631.4" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="629.3" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="632.3" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="629.7" y="179.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="632.7" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="629.7" y="163.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="632.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (49 samples, 1.81%)</title><rect x="630.2" y="179.0" width="21.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="633.2" y="190.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (49 samples, 1.81%)</title><rect x="630.2" y="163.0" width="21.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.2" y="174.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="630.2" y="147.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="633.2" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="630.2" y="131.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="633.2" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="630.2" y="115.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="633.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="630.2" y="99.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="633.2" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="630.2" y="83.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="630.6" y="147.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="633.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.41%)</title><rect x="631.0" y="147.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="634.0" y="158.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.11%)</title><rect x="631.9" y="131.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="634.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.22%)</title><rect x="633.2" y="131.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="636.2" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="634.1" y="115.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="637.1" y="126.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.15%)</title><rect x="634.1" y="99.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="637.1" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.15%)</title><rect x="634.1" y="83.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="637.1" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.07%)</title><rect x="635.0" y="67.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="638.0" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.07%)</title><rect x="635.0" y="51.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.0" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (34 samples, 1.26%)</title><rect x="635.8" y="147.0" width="14.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="638.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (34 samples, 1.26%)</title><rect x="635.8" y="131.0" width="14.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="638.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (34 samples, 1.26%)</title><rect x="635.8" y="115.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="638.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (33 samples, 1.22%)</title><rect x="636.3" y="99.0" width="14.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="639.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (33 samples, 1.22%)</title><rect x="636.3" y="83.0" width="14.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="639.3" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="650.7" y="147.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="653.7" y="158.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="650.7" y="131.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="653.7" y="142.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="650.7" y="115.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="653.7" y="126.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="650.7" y="99.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="653.7" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="651.1" y="147.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="654.1" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.11%)</title><rect x="651.6" y="403.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="654.6" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.11%)</title><rect x="651.6" y="387.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="654.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="651.6" y="371.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.11%)</title><rect x="651.6" y="355.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.6" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="651.6" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="654.6" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.07%)</title><rect x="652.0" y="339.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="655.0" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.07%)</title><rect x="652.0" y="323.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="655.0" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.07%)</title><rect x="652.0" y="307.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="655.0" y="318.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="652.9" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="655.9" y="494.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.07%)</title><rect x="653.3" y="515.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="656.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="653.3" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="656.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="653.8" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="656.8" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="654.2" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="657.2" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="654.6" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="657.6" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="654.6" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="657.6" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="654.6" y="499.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="657.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="654.6" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="657.6" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="654.6" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="657.6" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="654.6" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="657.6" y="462.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="655.1" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="658.1" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="655.5" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="658.5" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="655.5" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="658.5" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="655.5" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="658.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (195 samples, 7.22%)</title><rect x="655.9" y="819.0" width="85.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.9" y="830.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (194 samples, 7.19%)</title><rect x="656.4" y="803.0" width="84.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.4" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (194 samples, 7.19%)</title><rect x="656.4" y="787.0" width="84.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.4" y="798.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (194 samples, 7.19%)</title><rect x="656.4" y="771.0" width="84.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.4" y="782.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (190 samples, 7.04%)</title><rect x="656.4" y="755.0" width="83.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="659.4" y="766.0">Java_org_..</text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="656.8" y="739.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="659.8" y="750.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.07%)</title><rect x="657.3" y="739.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="660.3" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="658.1" y="739.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="661.1" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="658.6" y="739.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="661.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="659.0" y="739.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="662.0" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (183 samples, 6.78%)</title><rect x="659.4" y="739.0" width="80.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="662.4" y="750.0">rocksdb_g..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (175 samples, 6.48%)</title><rect x="659.4" y="723.0" width="76.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="662.4" y="734.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (175 samples, 6.48%)</title><rect x="659.4" y="707.0" width="76.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="662.4" y="718.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (1 samples, 0.04%)</title><rect x="659.4" y="691.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="662.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.11%)</title><rect x="659.9" y="691.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="662.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (2 samples, 0.07%)</title><rect x="659.9" y="675.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="662.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="660.7" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="663.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (171 samples, 6.33%)</title><rect x="661.2" y="691.0" width="74.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="664.2" y="702.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (171 samples, 6.33%)</title><rect x="661.2" y="675.0" width="74.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="664.2" y="686.0">rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="661.2" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="664.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (169 samples, 6.26%)</title><rect x="661.6" y="659.0" width="73.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="664.6" y="670.0">rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.07%)</title><rect x="662.1" y="643.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="665.1" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="662.9" y="643.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="665.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="663.8" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="666.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="663.8" y="627.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="666.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="664.2" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="667.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="664.2" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="667.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="664.2" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="667.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="664.2" y="595.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="667.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="664.7" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="667.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="665.1" y="643.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="668.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (23 samples, 0.85%)</title><rect x="665.6" y="643.0" width="10.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="668.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (22 samples, 0.81%)</title><rect x="666.0" y="627.0" width="9.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="669.0" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (21 samples, 0.78%)</title><rect x="666.4" y="611.0" width="9.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="669.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (19 samples, 0.70%)</title><rect x="666.4" y="595.0" width="8.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="669.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="670.4" y="579.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="673.4" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="670.8" y="579.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="673.8" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="671.2" y="579.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="674.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="672.5" y="579.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="675.5" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="673.0" y="563.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="676.0" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="673.9" y="563.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="676.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.07%)</title><rect x="674.7" y="595.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="677.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="675.6" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="678.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (136 samples, 5.04%)</title><rect x="676.0" y="643.0" width="59.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="679.0" y="654.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.15%)</title><rect x="676.5" y="627.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="679.5" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="676.9" y="611.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="679.9" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="677.4" y="595.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="680.4" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="677.8" y="611.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="680.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (131 samples, 4.85%)</title><rect x="678.2" y="627.0" width="57.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="681.2" y="638.0">rocksd..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (122 samples, 4.52%)</title><rect x="679.1" y="611.0" width="53.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="682.1" y="622.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.15%)</title><rect x="680.0" y="595.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="683.0" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="681.7" y="595.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="684.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="682.6" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="685.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="682.6" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="685.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="683.0" y="595.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="686.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="683.5" y="595.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="686.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="683.9" y="595.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="686.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (30 samples, 1.11%)</title><rect x="684.3" y="595.0" width="13.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="687.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="684.3" y="579.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="687.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="684.8" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="687.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (25 samples, 0.93%)</title><rect x="685.2" y="579.0" width="10.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="688.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (25 samples, 0.93%)</title><rect x="685.2" y="563.0" width="10.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="688.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="686.1" y="547.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="689.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (3 samples, 0.11%)</title><rect x="686.5" y="547.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="689.5" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="686.5" y="531.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="689.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (1 samples, 0.04%)</title><rect x="687.4" y="531.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="690.4" y="542.0"></text>
</g>
<g>
<title>__libc_pread (1 samples, 0.04%)</title><rect x="687.4" y="515.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="690.4" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="687.4" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="690.4" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="687.4" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.4" y="494.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.04%)</title><rect x="687.4" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="690.4" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.04%)</title><rect x="687.4" y="451.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="690.4" y="462.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="687.4" y="435.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="690.4" y="446.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.04%)</title><rect x="687.4" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="690.4" y="430.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.04%)</title><rect x="687.4" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="690.4" y="414.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.04%)</title><rect x="687.4" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.4" y="398.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.04%)</title><rect x="687.4" y="371.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.4" y="382.0"></text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.04%)</title><rect x="687.4" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="690.4" y="366.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="687.4" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="690.4" y="350.0"></text>
</g>
<g>
<title>activate_page (1 samples, 0.04%)</title><rect x="687.4" y="323.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="690.4" y="334.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.04%)</title><rect x="687.4" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="690.4" y="318.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="687.4" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="690.4" y="302.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (18 samples, 0.67%)</title><rect x="687.8" y="547.0" width="7.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="690.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (17 samples, 0.63%)</title><rect x="688.3" y="531.0" width="7.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="691.3" y="542.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits@plt (1 samples, 0.04%)</title><rect x="688.3" y="515.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="691.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (2 samples, 0.07%)</title><rect x="688.7" y="515.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="691.7" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="688.7" y="499.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="691.7" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="689.2" y="499.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="692.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (1 samples, 0.04%)</title><rect x="689.6" y="515.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="692.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (12 samples, 0.44%)</title><rect x="690.0" y="515.0" width="5.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="693.0" y="526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (5 samples, 0.19%)</title><rect x="690.5" y="499.0" width="2.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="693.5" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.19%)</title><rect x="690.5" y="483.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="693.5" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.19%)</title><rect x="690.5" y="467.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="693.5" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.19%)</title><rect x="690.5" y="451.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="693.5" y="462.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.19%)</title><rect x="690.5" y="435.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="693.5" y="446.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.19%)</title><rect x="690.5" y="419.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="693.5" y="430.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.19%)</title><rect x="690.5" y="403.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="693.5" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.19%)</title><rect x="690.5" y="387.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.5" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.19%)</title><rect x="690.5" y="371.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="693.5" y="382.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.04%)</title><rect x="692.7" y="499.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="695.7" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="693.1" y="499.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="696.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="693.5" y="499.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="696.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.11%)</title><rect x="694.0" y="499.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="697.0" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="694.0" y="483.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="697.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.07%)</title><rect x="694.4" y="483.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="697.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="695.3" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="698.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="695.7" y="547.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="698.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="695.7" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="698.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.11%)</title><rect x="696.1" y="579.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="699.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (36 samples, 1.33%)</title><rect x="697.5" y="595.0" width="15.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="700.5" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="698.8" y="579.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="701.8" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="699.2" y="579.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="702.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (22 samples, 0.81%)</title><rect x="700.1" y="579.0" width="9.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="703.1" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="700.5" y="563.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="703.5" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="701.4" y="563.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="704.4" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.07%)</title><rect x="701.8" y="563.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="704.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="702.7" y="563.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="705.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (3 samples, 0.11%)</title><rect x="704.5" y="563.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="707.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 0.33%)</title><rect x="705.8" y="563.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="708.8" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="705.8" y="547.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="708.8" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.22%)</title><rect x="706.6" y="547.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="709.6" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="709.3" y="547.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="712.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.07%)</title><rect x="709.7" y="579.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="712.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 0.22%)</title><rect x="710.6" y="579.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="713.6" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="711.4" y="563.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="714.4" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="712.3" y="563.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="715.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (4 samples, 0.15%)</title><rect x="713.2" y="595.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="716.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (4 samples, 0.15%)</title><rect x="713.2" y="579.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="716.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (1 samples, 0.04%)</title><rect x="713.2" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="716.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.07%)</title><rect x="713.6" y="563.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="716.6" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="713.6" y="547.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="716.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="714.1" y="547.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="717.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="714.5" y="563.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="717.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="714.9" y="595.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="717.9" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="714.9" y="579.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="717.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (36 samples, 1.33%)</title><rect x="715.4" y="595.0" width="15.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="718.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="720.6" y="579.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="723.6" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.22%)</title><rect x="721.1" y="579.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="724.1" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="723.7" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="726.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.22%)</title><rect x="724.1" y="579.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="727.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.07%)</title><rect x="726.7" y="579.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="729.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (3 samples, 0.11%)</title><rect x="727.6" y="579.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="730.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.04%)</title><rect x="728.5" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="731.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="728.9" y="579.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="731.9" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.11%)</title><rect x="729.4" y="563.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="732.4" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="730.7" y="563.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="733.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="731.1" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="734.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="731.5" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="734.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="732.0" y="595.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="735.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="732.4" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="735.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const [clone .plt] (1 samples, 0.04%)</title><rect x="732.9" y="611.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="735.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (2 samples, 0.07%)</title><rect x="733.3" y="611.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="736.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="734.2" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="737.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (1 samples, 0.04%)</title><rect x="734.6" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="737.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="735.0" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="738.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="735.5" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="738.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (8 samples, 0.30%)</title><rect x="735.9" y="723.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="738.9" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="736.4" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="739.4" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.19%)</title><rect x="736.8" y="707.0" width="2.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="739.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="736.8" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="739.8" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.15%)</title><rect x="737.2" y="691.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="740.2" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.07%)</title><rect x="737.2" y="675.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="740.2" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="737.2" y="659.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="740.2" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="737.7" y="643.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="740.7" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="738.1" y="675.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="741.1" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="739.0" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="742.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="739.4" y="755.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="742.4" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="739.4" y="739.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="742.4" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="740.3" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="743.3" y="766.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="740.7" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="743.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="741.2" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="741.2" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="741.2" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="741.6" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="741.6" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="741.6" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="742.0" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="742.0" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 0.67%)</title><rect x="742.5" y="883.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.67%)</title><rect x="742.5" y="867.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.5" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="742.5" y="851.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="745.5" y="862.0"></text>
</g>
<g>
<title>__recv (17 samples, 0.63%)</title><rect x="742.9" y="851.0" width="7.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="745.9" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.63%)</title><rect x="742.9" y="835.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="745.9" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="742.9" y="819.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="745.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.59%)</title><rect x="743.3" y="819.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="746.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.56%)</title><rect x="743.8" y="803.0" width="6.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="746.8" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.56%)</title><rect x="743.8" y="787.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="746.8" y="798.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="743.8" y="771.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="746.8" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.48%)</title><rect x="744.2" y="771.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="747.2" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.07%)</title><rect x="744.2" y="755.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="747.2" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.41%)</title><rect x="745.1" y="755.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="748.1" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="745.1" y="739.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="748.1" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.37%)</title><rect x="745.5" y="739.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="748.5" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.11%)</title><rect x="746.0" y="723.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="749.0" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="746.0" y="707.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="749.0" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.07%)</title><rect x="746.0" y="691.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="749.0" y="702.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.07%)</title><rect x="746.0" y="675.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="749.0" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="746.8" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="749.8" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="747.3" y="723.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="750.3" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="747.3" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="750.3" y="718.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="747.3" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="750.3" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.11%)</title><rect x="747.7" y="723.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="750.7" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.11%)</title><rect x="747.7" y="707.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="750.7" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.07%)</title><rect x="748.2" y="691.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="751.2" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="748.6" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="751.6" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="748.6" y="659.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="751.6" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.07%)</title><rect x="749.0" y="723.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="752.0" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.07%)</title><rect x="749.0" y="707.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="752.0" y="718.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.07%)</title><rect x="749.0" y="691.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="752.0" y="702.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.07%)</title><rect x="749.0" y="675.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="752.0" y="686.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.07%)</title><rect x="749.0" y="659.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="752.0" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="749.9" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="752.9" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="749.9" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="752.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="749.9" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="752.9" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="749.9" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="752.9" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=44079] (269 samples, 9.96%)</title><rect x="750.3" y="947.0" width="117.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="753.3" y="958.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (269 samples, 9.96%)</title><rect x="750.3" y="931.0" width="117.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.3" y="942.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 0.67%)</title><rect x="750.3" y="915.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.3" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 0.59%)</title><rect x="751.2" y="899.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.2" y="910.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.07%)</title><rect x="751.2" y="883.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="754.2" y="894.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 0.52%)</title><rect x="752.1" y="883.0" width="6.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="755.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.52%)</title><rect x="752.1" y="867.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="755.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.52%)</title><rect x="752.1" y="851.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="755.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (14 samples, 0.52%)</title><rect x="752.1" y="835.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="755.1" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 0.52%)</title><rect x="752.1" y="819.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="755.1" y="830.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.52%)</title><rect x="752.1" y="803.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="755.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.11%)</title><rect x="752.5" y="787.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="755.5" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.07%)</title><rect x="752.5" y="771.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="755.5" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.07%)</title><rect x="752.5" y="755.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="755.5" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="753.0" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="756.0" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="753.0" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="756.0" y="734.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="753.4" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="756.4" y="782.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="753.4" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.4" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (10 samples, 0.37%)</title><rect x="753.8" y="787.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="756.8" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 0.37%)</title><rect x="753.8" y="771.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="756.8" y="782.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.37%)</title><rect x="753.8" y="755.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.8" y="766.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.37%)</title><rect x="753.8" y="739.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="756.8" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.33%)</title><rect x="754.3" y="723.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="757.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (251 samples, 9.30%)</title><rect x="758.2" y="915.0" width="109.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.2" y="926.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (249 samples, 9.22%)</title><rect x="758.6" y="899.0" width="108.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.6" y="910.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (242 samples, 8.96%)</title><rect x="759.1" y="883.0" width="105.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.1" y="894.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (237 samples, 8.78%)</title><rect x="760.0" y="867.0" width="103.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.0" y="878.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (236 samples, 8.74%)</title><rect x="760.4" y="851.0" width="103.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.4" y="862.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (234 samples, 8.67%)</title><rect x="760.4" y="835.0" width="102.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.4" y="846.0">RequestHandl..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="760.8" y="819.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="763.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (73 samples, 2.70%)</title><rect x="761.7" y="819.0" width="31.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.7" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (68 samples, 2.52%)</title><rect x="763.9" y="803.0" width="29.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.9" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.11%)</title><rect x="763.9" y="787.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="764.8" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="764.8" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="764.8" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (65 samples, 2.41%)</title><rect x="765.2" y="787.0" width="28.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.2" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (65 samples, 2.41%)</title><rect x="765.2" y="771.0" width="28.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.2" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (65 samples, 2.41%)</title><rect x="765.2" y="755.0" width="28.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.2" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (65 samples, 2.41%)</title><rect x="765.2" y="739.0" width="28.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.2" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="765.2" y="723.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="768.2" y="734.0"></text>
</g>
<g>
<title>send (63 samples, 2.33%)</title><rect x="766.1" y="723.0" width="27.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="769.1" y="734.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 2.30%)</title><rect x="766.5" y="707.0" width="27.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="769.5" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (62 samples, 2.30%)</title><rect x="766.5" y="691.0" width="27.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="769.5" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (61 samples, 2.26%)</title><rect x="766.9" y="675.0" width="26.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="769.9" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (61 samples, 2.26%)</title><rect x="766.9" y="659.0" width="26.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="769.9" y="670.0">_..</text>
</g>
<g>
<title>sock_sendmsg (59 samples, 2.19%)</title><rect x="766.9" y="643.0" width="25.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="769.9" y="654.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (59 samples, 2.19%)</title><rect x="766.9" y="627.0" width="25.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="769.9" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (59 samples, 2.19%)</title><rect x="766.9" y="611.0" width="25.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="769.9" y="622.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (58 samples, 2.15%)</title><rect x="766.9" y="595.0" width="25.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="769.9" y="606.0">t..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="767.8" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="770.8" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="767.8" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="770.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.41%)</title><rect x="768.3" y="579.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="771.3" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.33%)</title><rect x="769.1" y="563.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="772.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.19%)</title><rect x="769.1" y="547.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="772.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="770.0" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.0" y="542.0"></text>
</g>
<g>
<title>memset (2 samples, 0.07%)</title><rect x="770.4" y="531.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="773.4" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="771.3" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="774.3" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="771.8" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="774.8" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="772.2" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.2" y="558.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="772.6" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.6" y="558.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.07%)</title><rect x="773.1" y="579.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="776.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (41 samples, 1.52%)</title><rect x="773.9" y="579.0" width="18.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="776.9" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (41 samples, 1.52%)</title><rect x="773.9" y="563.0" width="18.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="776.9" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (41 samples, 1.52%)</title><rect x="773.9" y="547.0" width="18.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="776.9" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (40 samples, 1.48%)</title><rect x="773.9" y="531.0" width="17.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="776.9" y="542.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="774.4" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="777.4" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (37 samples, 1.37%)</title><rect x="774.8" y="515.0" width="16.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="777.8" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (37 samples, 1.37%)</title><rect x="774.8" y="499.0" width="16.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="777.8" y="510.0"></text>
</g>
<g>
<title>ip_local_out (37 samples, 1.37%)</title><rect x="774.8" y="483.0" width="16.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="777.8" y="494.0"></text>
</g>
<g>
<title>ip_output (37 samples, 1.37%)</title><rect x="774.8" y="467.0" width="16.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="777.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (37 samples, 1.37%)</title><rect x="774.8" y="451.0" width="16.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="777.8" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (36 samples, 1.33%)</title><rect x="775.3" y="435.0" width="15.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="778.3" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (35 samples, 1.30%)</title><rect x="775.7" y="419.0" width="15.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="778.7" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (33 samples, 1.22%)</title><rect x="776.1" y="403.0" width="14.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="779.1" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (33 samples, 1.22%)</title><rect x="776.1" y="387.0" width="14.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="779.1" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (32 samples, 1.19%)</title><rect x="776.6" y="371.0" width="13.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="779.6" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (32 samples, 1.19%)</title><rect x="776.6" y="355.0" width="13.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="779.6" y="366.0"></text>
</g>
<g>
<title>net_rx_action (31 samples, 1.15%)</title><rect x="777.0" y="339.0" width="13.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="780.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (31 samples, 1.15%)</title><rect x="777.0" y="323.0" width="13.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="780.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (29 samples, 1.07%)</title><rect x="777.9" y="307.0" width="12.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="780.9" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="777.9" y="291.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="780.9" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (28 samples, 1.04%)</title><rect x="778.3" y="291.0" width="12.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="781.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (28 samples, 1.04%)</title><rect x="778.3" y="275.0" width="12.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="781.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (28 samples, 1.04%)</title><rect x="778.3" y="259.0" width="12.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (28 samples, 1.04%)</title><rect x="778.3" y="243.0" width="12.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 1.04%)</title><rect x="778.3" y="227.0" width="12.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="781.3" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 1.04%)</title><rect x="778.3" y="211.0" width="12.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="781.3" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="778.7" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="781.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (26 samples, 0.96%)</title><rect x="779.2" y="195.0" width="11.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="782.2" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="779.6" y="179.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="782.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 0.85%)</title><rect x="780.1" y="179.0" width="10.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 0.85%)</title><rect x="780.1" y="163.0" width="10.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="783.1" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="780.1" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="783.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.26%)</title><rect x="780.5" y="147.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="783.5" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.07%)</title><rect x="781.8" y="131.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="784.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="782.2" y="115.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.2" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="782.2" y="99.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="785.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="782.2" y="83.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="785.2" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="782.2" y="67.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="785.2" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="782.2" y="51.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="785.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="782.2" y="35.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="785.2" y="46.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.04%)</title><rect x="782.7" y="131.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="785.7" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="783.1" y="131.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.1" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (15 samples, 0.56%)</title><rect x="783.6" y="147.0" width="6.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="786.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.56%)</title><rect x="783.6" y="131.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="786.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.56%)</title><rect x="783.6" y="115.0" width="6.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="786.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.56%)</title><rect x="783.6" y="99.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="786.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.56%)</title><rect x="783.6" y="83.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.6" y="94.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="790.1" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.1" y="190.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.04%)</title><rect x="790.5" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="793.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.04%)</title><rect x="790.5" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.5" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="790.5" y="371.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="793.5" y="382.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="791.0" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="794.0" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="791.0" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="794.0" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="791.0" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="794.0" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="791.4" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.4" y="542.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.04%)</title><rect x="791.4" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.4" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="791.9" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="794.9" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="791.9" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="794.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="791.9" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="794.9" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="792.3" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="795.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.07%)</title><rect x="792.7" y="643.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="795.7" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="792.7" y="627.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="795.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="792.7" y="611.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="795.7" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="792.7" y="595.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="795.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="793.6" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="793.6" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="793.6" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="793.6" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (157 samples, 5.81%)</title><rect x="794.0" y="819.0" width="68.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.0" y="830.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="794.0" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="794.0" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="794.0" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (156 samples, 5.78%)</title><rect x="794.5" y="803.0" width="68.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.5" y="814.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (155 samples, 5.74%)</title><rect x="794.5" y="787.0" width="67.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.5" y="798.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (155 samples, 5.74%)</title><rect x="794.5" y="771.0" width="67.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.5" y="782.0">org/roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="794.5" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="797.5" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (151 samples, 5.59%)</title><rect x="794.9" y="755.0" width="66.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="797.9" y="766.0">Java_or..</text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="795.8" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="798.8" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (146 samples, 5.41%)</title><rect x="796.2" y="739.0" width="63.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="799.2" y="750.0">rocksdb..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="796.7" y="723.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="799.7" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="796.7" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="799.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (138 samples, 5.11%)</title><rect x="797.1" y="723.0" width="60.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="800.1" y="734.0">rocksd..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="797.1" y="707.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="800.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (137 samples, 5.07%)</title><rect x="797.5" y="707.0" width="59.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="800.5" y="718.0">rocksd..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.07%)</title><rect x="797.5" y="691.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="800.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="797.5" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="800.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="798.0" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="801.0" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="798.0" y="659.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="801.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="798.0" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="801.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="798.0" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="801.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="798.0" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="801.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (135 samples, 5.00%)</title><rect x="798.4" y="691.0" width="59.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="801.4" y="702.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (135 samples, 5.00%)</title><rect x="798.4" y="675.0" width="59.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="801.4" y="686.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="798.4" y="659.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="801.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (129 samples, 4.78%)</title><rect x="799.3" y="659.0" width="56.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="802.3" y="670.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="799.7" y="643.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="802.7" y="654.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="801.0" y="643.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="804.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="801.5" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="804.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="801.5" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="804.5" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="801.5" y="611.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="804.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="801.9" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="804.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="801.9" y="627.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="804.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (12 samples, 0.44%)</title><rect x="802.3" y="643.0" width="5.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="805.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (12 samples, 0.44%)</title><rect x="802.3" y="627.0" width="5.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="805.3" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (11 samples, 0.41%)</title><rect x="802.8" y="611.0" width="4.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="805.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (9 samples, 0.33%)</title><rect x="803.2" y="595.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="806.2" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="805.4" y="579.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="808.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="805.8" y="579.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="808.8" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="805.8" y="563.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="808.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="806.7" y="563.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="809.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="807.2" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="810.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="807.6" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="810.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (109 samples, 4.04%)</title><rect x="808.0" y="643.0" width="47.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="811.0" y="654.0">rock..</text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="808.9" y="627.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="811.9" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="808.9" y="611.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="811.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (106 samples, 3.93%)</title><rect x="809.3" y="627.0" width="46.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="812.3" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (99 samples, 3.67%)</title><rect x="810.2" y="611.0" width="43.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="813.2" y="622.0">rock..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="812.0" y="595.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="815.0" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="812.4" y="595.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="815.4" y="606.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="812.8" y="595.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="815.8" y="606.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="813.3" y="595.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="816.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="813.7" y="595.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="816.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="813.7" y="579.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="816.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="814.1" y="595.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="817.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (1 samples, 0.04%)</title><rect x="814.6" y="595.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="817.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (1 samples, 0.04%)</title><rect x="815.0" y="595.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="818.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="815.5" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="818.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (23 samples, 0.85%)</title><rect x="815.9" y="595.0" width="10.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="818.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="816.8" y="579.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="819.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (18 samples, 0.67%)</title><rect x="817.6" y="579.0" width="7.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="820.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="818.1" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="821.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (16 samples, 0.59%)</title><rect x="818.5" y="563.0" width="7.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="821.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.04%)</title><rect x="818.5" y="547.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="821.5" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="818.5" y="531.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="821.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (15 samples, 0.56%)</title><rect x="819.0" y="547.0" width="6.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="822.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (15 samples, 0.56%)</title><rect x="819.0" y="531.0" width="6.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="822.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="819.0" y="515.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="822.0" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="819.0" y="499.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="822.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (13 samples, 0.48%)</title><rect x="819.4" y="515.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="822.4" y="526.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.07%)</title><rect x="819.4" y="499.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="822.4" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="819.8" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.8" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="819.8" y="467.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="822.8" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="819.8" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="822.8" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="819.8" y="435.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="822.8" y="446.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="819.8" y="419.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="822.8" y="430.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.04%)</title><rect x="819.8" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="822.8" y="414.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.15%)</title><rect x="820.3" y="499.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="823.3" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.11%)</title><rect x="820.7" y="483.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="823.7" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.11%)</title><rect x="820.7" y="467.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="823.7" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.11%)</title><rect x="820.7" y="451.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="823.7" y="462.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.11%)</title><rect x="820.7" y="435.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="823.7" y="446.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.11%)</title><rect x="820.7" y="419.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="823.7" y="430.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.11%)</title><rect x="820.7" y="403.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="823.7" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.11%)</title><rect x="820.7" y="387.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="823.7" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.11%)</title><rect x="820.7" y="371.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="823.7" y="382.0"></text>
</g>
<g>
<title>malloc_usable_size (2 samples, 0.07%)</title><rect x="822.0" y="499.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="825.0" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="822.9" y="499.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="825.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="823.3" y="499.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="826.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.11%)</title><rect x="823.8" y="499.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="826.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.11%)</title><rect x="823.8" y="483.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="826.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.04%)</title><rect x="825.1" y="515.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="828.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="825.5" y="579.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="828.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (34 samples, 1.26%)</title><rect x="825.9" y="595.0" width="14.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="828.9" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="828.6" y="579.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="831.6" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="829.0" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="832.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="829.4" y="579.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="832.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (17 samples, 0.63%)</title><rect x="830.8" y="579.0" width="7.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="833.8" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.11%)</title><rect x="830.8" y="563.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="833.8" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="832.1" y="563.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="835.1" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="832.5" y="563.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="835.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (3 samples, 0.11%)</title><rect x="833.4" y="563.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="836.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 0.30%)</title><rect x="834.7" y="563.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="837.7" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="835.6" y="547.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="838.6" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="836.0" y="547.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="839.0" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="836.4" y="547.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="839.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="836.9" y="547.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="839.9" y="558.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="837.7" y="547.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="840.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.07%)</title><rect x="838.2" y="579.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="841.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="839.1" y="579.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="842.1" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="839.5" y="563.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="842.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="839.9" y="563.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="842.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (3 samples, 0.11%)</title><rect x="840.8" y="595.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="843.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.11%)</title><rect x="840.8" y="579.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="843.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (3 samples, 0.11%)</title><rect x="840.8" y="563.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="843.8" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="840.8" y="547.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="843.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (2 samples, 0.07%)</title><rect x="841.2" y="547.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="844.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="842.1" y="595.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="845.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (20 samples, 0.74%)</title><rect x="842.6" y="595.0" width="8.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="845.6" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="845.6" y="579.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="848.6" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.07%)</title><rect x="846.1" y="579.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="849.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.22%)</title><rect x="846.9" y="579.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="849.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="849.5" y="579.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="852.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="850.0" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="853.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.04%)</title><rect x="850.0" y="563.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="853.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="850.4" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="853.4" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="850.9" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="853.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="850.9" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="853.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="850.9" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="853.9" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="850.9" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="853.9" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="850.9" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="853.9" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="850.9" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="853.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.04%)</title><rect x="851.3" y="595.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="854.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="851.7" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="854.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (1 samples, 0.04%)</title><rect x="852.2" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="855.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.07%)</title><rect x="852.6" y="595.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="855.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.04%)</title><rect x="853.5" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="856.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (1 samples, 0.04%)</title><rect x="853.9" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="856.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="854.4" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="857.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (1 samples, 0.04%)</title><rect x="854.8" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="857.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.04%)</title><rect x="855.2" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="858.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (2 samples, 0.07%)</title><rect x="855.7" y="659.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="858.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="856.5" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="859.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="857.0" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="860.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (6 samples, 0.22%)</title><rect x="857.4" y="723.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="860.4" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="857.4" y="707.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="860.4" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.11%)</title><rect x="857.9" y="707.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="860.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="858.3" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="861.3" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="858.7" y="691.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="861.7" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="859.2" y="707.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="862.2" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.07%)</title><rect x="859.2" y="691.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="862.2" y="702.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.07%)</title><rect x="860.0" y="739.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="863.0" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.07%)</title><rect x="860.9" y="755.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="863.9" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="861.8" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="864.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (1 samples, 0.04%)</title><rect x="862.2" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.2" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="862.2" y="771.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="865.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="862.7" y="835.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="862.7" y="819.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.07%)</title><rect x="862.7" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="865.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.11%)</title><rect x="863.5" y="867.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="863.5" y="851.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="866.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="863.5" y="835.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="864.4" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.22%)</title><rect x="864.8" y="883.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.22%)</title><rect x="864.8" y="867.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.8" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.15%)</title><rect x="864.8" y="851.0" width="1.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="867.8" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="864.8" y="835.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="867.8" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="865.3" y="835.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="868.3" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="865.7" y="835.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="868.7" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.07%)</title><rect x="865.7" y="819.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="868.7" y="830.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.07%)</title><rect x="866.6" y="851.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="869.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="866.6" y="835.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="869.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="866.6" y="819.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="869.6" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="867.0" y="803.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="870.0" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.04%)</title><rect x="867.0" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="870.0" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="867.0" y="771.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="870.0" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.04%)</title><rect x="867.0" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.0" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.04%)</title><rect x="867.0" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="870.0" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="867.0" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="870.0" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="867.0" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="870.0" y="718.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="867.0" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="870.0" y="702.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="867.0" y="675.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="870.0" y="686.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="867.0" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="870.0" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="867.5" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="870.5" y="910.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="867.5" y="883.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="870.5" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="867.5" y="867.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="870.5" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=44080] (376 samples, 13.93%)</title><rect x="867.9" y="947.0" width="164.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="870.9" y="958.0">[NIO Selector #6 tid=..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (376 samples, 13.93%)</title><rect x="867.9" y="931.0" width="164.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.9" y="942.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.48%)</title><rect x="867.9" y="915.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 0.48%)</title><rect x="867.9" y="899.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="870.9" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="868.8" y="883.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="871.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="868.8" y="867.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="871.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="868.8" y="851.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="871.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="868.8" y="835.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="871.8" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="868.8" y="819.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.8" y="830.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="868.8" y="803.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="871.8" y="814.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="868.8" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="871.8" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="868.8" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="871.8" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="868.8" y="755.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="871.8" y="766.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.37%)</title><rect x="869.2" y="883.0" width="4.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="872.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.37%)</title><rect x="869.2" y="867.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="872.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.37%)</title><rect x="869.2" y="851.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="872.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 0.33%)</title><rect x="869.2" y="835.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="872.2" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (9 samples, 0.33%)</title><rect x="869.2" y="819.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="872.2" y="830.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.33%)</title><rect x="869.2" y="803.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="872.2" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.07%)</title><rect x="869.2" y="787.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="872.2" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.07%)</title><rect x="869.2" y="771.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="872.2" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.07%)</title><rect x="869.2" y="755.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="872.2" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="869.7" y="739.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="872.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.26%)</title><rect x="870.1" y="787.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.1" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.26%)</title><rect x="870.1" y="771.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="873.1" y="782.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.26%)</title><rect x="870.1" y="755.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="873.1" y="766.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.26%)</title><rect x="870.1" y="739.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="873.1" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.26%)</title><rect x="870.1" y="723.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.1" y="734.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.04%)</title><rect x="873.1" y="835.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="876.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (363 samples, 13.44%)</title><rect x="873.6" y="915.0" width="158.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.6" y="926.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (360 samples, 13.33%)</title><rect x="874.9" y="899.0" width="157.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.9" y="910.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (341 samples, 12.63%)</title><rect x="874.9" y="883.0" width="149.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.9" y="894.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (329 samples, 12.19%)</title><rect x="875.8" y="867.0" width="143.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.8" y="878.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (329 samples, 12.19%)</title><rect x="875.8" y="851.0" width="143.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="878.8" y="862.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (328 samples, 12.15%)</title><rect x="875.8" y="835.0" width="143.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.8" y="846.0">RequestHandler0_ge..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (108 samples, 4.00%)</title><rect x="876.2" y="819.0" width="47.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.2" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="876.2" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="876.2" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="876.2" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="879.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="876.2" y="755.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="879.2" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="876.2" y="739.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="879.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (107 samples, 3.96%)</title><rect x="876.6" y="803.0" width="46.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="879.6" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.19%)</title><rect x="876.6" y="787.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="877.5" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="877.5" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.07%)</title><rect x="877.5" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="878.4" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="881.4" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="878.4" y="755.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="881.4" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="878.4" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="881.4" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="878.4" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="881.4" y="734.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="878.4" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="881.4" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="878.4" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="881.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 3.78%)</title><rect x="878.8" y="787.0" width="44.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.8" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 3.78%)</title><rect x="878.8" y="771.0" width="44.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.8" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (102 samples, 3.78%)</title><rect x="878.8" y="755.0" width="44.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.8" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="878.8" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (101 samples, 3.74%)</title><rect x="879.3" y="739.0" width="44.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.3" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="879.7" y="723.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="882.7" y="734.0"></text>
</g>
<g>
<title>send (99 samples, 3.67%)</title><rect x="880.1" y="723.0" width="43.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="883.1" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 3.56%)</title><rect x="881.5" y="707.0" width="41.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="884.5" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (96 samples, 3.56%)</title><rect x="881.5" y="691.0" width="41.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="884.5" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (95 samples, 3.52%)</title><rect x="881.9" y="675.0" width="41.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.9" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (95 samples, 3.52%)</title><rect x="881.9" y="659.0" width="41.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="884.9" y="670.0">__s..</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="882.3" y="643.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="885.3" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (93 samples, 3.44%)</title><rect x="882.8" y="643.0" width="40.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="885.8" y="654.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="882.8" y="627.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="885.8" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (92 samples, 3.41%)</title><rect x="883.2" y="627.0" width="40.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="886.2" y="638.0">ine..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="883.2" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (91 samples, 3.37%)</title><rect x="883.6" y="611.0" width="39.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="886.6" y="622.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (90 samples, 3.33%)</title><rect x="883.6" y="595.0" width="39.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="886.6" y="606.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 0.56%)</title><rect x="884.5" y="579.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="887.5" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (14 samples, 0.52%)</title><rect x="884.9" y="563.0" width="6.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="887.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.15%)</title><rect x="886.7" y="547.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="886.7" y="531.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.7" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="887.6" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="890.6" y="526.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="888.0" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="891.0" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="888.4" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="891.4" y="558.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.11%)</title><rect x="888.9" y="547.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="891.9" y="558.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.11%)</title><rect x="888.9" y="531.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="891.9" y="542.0"></text>
</g>
<g>
<title>memset (2 samples, 0.07%)</title><rect x="890.2" y="547.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="893.2" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="891.1" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="894.1" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="891.1" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="894.1" y="574.0"></text>
</g>
<g>
<title>tcp_push (69 samples, 2.56%)</title><rect x="891.5" y="579.0" width="30.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="894.5" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (69 samples, 2.56%)</title><rect x="891.5" y="563.0" width="30.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="894.5" y="574.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (69 samples, 2.56%)</title><rect x="891.5" y="547.0" width="30.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="894.5" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (62 samples, 2.30%)</title><rect x="891.9" y="531.0" width="27.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="894.9" y="542.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (60 samples, 2.22%)</title><rect x="892.8" y="515.0" width="26.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.8" y="526.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (60 samples, 2.22%)</title><rect x="892.8" y="499.0" width="26.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="895.8" y="510.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="892.8" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="895.8" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="892.8" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.8" y="478.0"></text>
</g>
<g>
<title>ip_local_out (59 samples, 2.19%)</title><rect x="893.3" y="483.0" width="25.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="896.3" y="494.0">i..</text>
</g>
<g>
<title>ip_output (59 samples, 2.19%)</title><rect x="893.3" y="467.0" width="25.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="896.3" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (58 samples, 2.15%)</title><rect x="893.7" y="451.0" width="25.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="896.7" y="462.0">i..</text>
</g>
<g>
<title>__ip_finish_output (58 samples, 2.15%)</title><rect x="893.7" y="435.0" width="25.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="896.7" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (58 samples, 2.15%)</title><rect x="893.7" y="419.0" width="25.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="896.7" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (53 samples, 1.96%)</title><rect x="894.6" y="403.0" width="23.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="897.6" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (53 samples, 1.96%)</title><rect x="894.6" y="387.0" width="23.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="897.6" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (53 samples, 1.96%)</title><rect x="894.6" y="371.0" width="23.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="897.6" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (52 samples, 1.93%)</title><rect x="894.6" y="355.0" width="22.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="897.6" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (51 samples, 1.89%)</title><rect x="895.0" y="339.0" width="22.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="898.0" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (51 samples, 1.89%)</title><rect x="895.0" y="323.0" width="22.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="898.0" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (51 samples, 1.89%)</title><rect x="895.0" y="307.0" width="22.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.0" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (51 samples, 1.89%)</title><rect x="895.0" y="291.0" width="22.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="898.0" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (51 samples, 1.89%)</title><rect x="895.0" y="275.0" width="22.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="898.0" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (51 samples, 1.89%)</title><rect x="895.0" y="259.0" width="22.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="898.0" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (48 samples, 1.78%)</title><rect x="895.4" y="243.0" width="21.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (48 samples, 1.78%)</title><rect x="895.4" y="227.0" width="21.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="898.4" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (48 samples, 1.78%)</title><rect x="895.4" y="211.0" width="21.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="898.4" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="895.9" y="195.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="898.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (46 samples, 1.70%)</title><rect x="896.3" y="195.0" width="20.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="899.3" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="897.6" y="179.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (42 samples, 1.56%)</title><rect x="898.1" y="179.0" width="18.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="901.1" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.11%)</title><rect x="898.1" y="163.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="901.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (39 samples, 1.44%)</title><rect x="899.4" y="163.0" width="17.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="902.4" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="899.8" y="147.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="902.8" y="158.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.33%)</title><rect x="900.2" y="147.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="903.2" y="158.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="902.0" y="131.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="905.0" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.15%)</title><rect x="902.4" y="131.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.11%)</title><rect x="902.9" y="115.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.9" y="126.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.11%)</title><rect x="902.9" y="99.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="905.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.11%)</title><rect x="902.9" y="83.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="905.9" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="903.7" y="67.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="906.7" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="903.7" y="51.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="906.7" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (26 samples, 0.96%)</title><rect x="904.2" y="147.0" width="11.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="907.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (26 samples, 0.96%)</title><rect x="904.2" y="131.0" width="11.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (26 samples, 0.96%)</title><rect x="904.2" y="115.0" width="11.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="907.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (26 samples, 0.96%)</title><rect x="904.2" y="99.0" width="11.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="907.2" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (26 samples, 0.96%)</title><rect x="904.2" y="83.0" width="11.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="907.2" y="94.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="915.5" y="147.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="918.5" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="916.0" y="147.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="919.0" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.07%)</title><rect x="916.4" y="243.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="919.4" y="254.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="917.3" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="920.3" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.11%)</title><rect x="917.7" y="403.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="920.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.11%)</title><rect x="917.7" y="387.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="920.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.07%)</title><rect x="918.2" y="371.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="921.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.07%)</title><rect x="918.2" y="355.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="921.2" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.07%)</title><rect x="918.2" y="339.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="921.2" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.07%)</title><rect x="918.2" y="323.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="921.2" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.07%)</title><rect x="918.2" y="307.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="921.2" y="318.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.11%)</title><rect x="919.0" y="531.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.0" y="542.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (3 samples, 0.11%)</title><rect x="919.0" y="515.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="922.0" y="526.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.07%)</title><rect x="919.5" y="499.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="922.5" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="920.3" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="923.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="920.3" y="515.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="923.3" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="920.3" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="923.3" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="920.3" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="923.3" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="920.3" y="467.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="923.3" y="478.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (2 samples, 0.07%)</title><rect x="920.8" y="531.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.8" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.07%)</title><rect x="921.7" y="579.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="924.7" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.07%)</title><rect x="921.7" y="563.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="924.7" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="922.5" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="925.5" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="923.0" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="926.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.15%)</title><rect x="923.4" y="819.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="926.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="923.8" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="926.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="923.8" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="926.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="923.8" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="926.8" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="924.3" y="803.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="927.3" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="924.7" y="803.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="927.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (215 samples, 7.96%)</title><rect x="925.2" y="819.0" width="93.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="928.2" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (215 samples, 7.96%)</title><rect x="925.2" y="803.0" width="93.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.2" y="814.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (215 samples, 7.96%)</title><rect x="925.2" y="787.0" width="93.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.2" y="798.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (215 samples, 7.96%)</title><rect x="925.2" y="771.0" width="93.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.2" y="782.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (212 samples, 7.85%)</title><rect x="925.2" y="755.0" width="92.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="928.2" y="766.0">Java_org_ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="925.2" y="739.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="928.2" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="926.0" y="739.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="929.0" y="750.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="926.5" y="739.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="929.5" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="926.9" y="739.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="929.9" y="750.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.04%)</title><rect x="927.3" y="739.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="930.3" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.07%)</title><rect x="927.8" y="739.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="930.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="928.7" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="931.7" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (203 samples, 7.52%)</title><rect x="929.1" y="739.0" width="88.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="932.1" y="750.0">rocksdb_ge..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="929.5" y="723.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="932.5" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="929.5" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="932.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="930.0" y="723.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="933.0" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="930.4" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="933.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (191 samples, 7.07%)</title><rect x="930.8" y="723.0" width="83.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="933.8" y="734.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (188 samples, 6.96%)</title><rect x="930.8" y="707.0" width="82.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="933.8" y="718.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.07%)</title><rect x="930.8" y="691.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="933.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="930.8" y="675.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="933.8" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="930.8" y="659.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="933.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="931.3" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="934.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (186 samples, 6.89%)</title><rect x="931.7" y="691.0" width="81.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="934.7" y="702.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (186 samples, 6.89%)</title><rect x="931.7" y="675.0" width="81.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="934.7" y="686.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.07%)</title><rect x="931.7" y="659.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="934.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.04%)</title><rect x="932.6" y="659.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="935.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (181 samples, 6.70%)</title><rect x="933.0" y="659.0" width="79.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="936.0" y="670.0">rocksdb::..</text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="933.0" y="643.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="936.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.07%)</title><rect x="933.5" y="643.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="936.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="934.3" y="643.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="937.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="934.3" y="627.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="937.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="934.3" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="937.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (2 samples, 0.07%)</title><rect x="934.8" y="643.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="937.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (26 samples, 0.96%)</title><rect x="935.6" y="643.0" width="11.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="938.6" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="936.1" y="627.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="939.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="936.5" y="627.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="939.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (23 samples, 0.85%)</title><rect x="937.0" y="627.0" width="10.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="940.0" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (23 samples, 0.85%)</title><rect x="937.0" y="611.0" width="10.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="940.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (22 samples, 0.81%)</title><rect x="937.0" y="595.0" width="9.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="940.0" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="940.0" y="579.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="943.0" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="940.9" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="943.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.19%)</title><rect x="941.3" y="579.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="944.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.26%)</title><rect x="943.5" y="579.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="946.5" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="943.9" y="563.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="946.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="945.3" y="563.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="948.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="946.6" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="949.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="947.0" y="643.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="950.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="947.0" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="950.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="947.4" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="950.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (1 samples, 0.04%)</title><rect x="947.9" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="950.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="948.3" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="951.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (145 samples, 5.37%)</title><rect x="948.8" y="643.0" width="63.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="951.8" y="654.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.15%)</title><rect x="949.6" y="627.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="952.6" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="950.5" y="611.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="953.5" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="950.5" y="595.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="953.5" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="950.9" y="611.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="953.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (139 samples, 5.15%)</title><rect x="951.4" y="627.0" width="60.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="954.4" y="638.0">rocksd..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="952.3" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="955.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="952.7" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="955.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (125 samples, 4.63%)</title><rect x="953.1" y="611.0" width="54.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="956.1" y="622.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (6 samples, 0.22%)</title><rect x="955.3" y="595.0" width="2.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="958.3" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="957.9" y="595.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="960.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (3 samples, 0.11%)</title><rect x="958.4" y="595.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="961.4" y="606.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="958.8" y="579.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="961.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.04%)</title><rect x="959.2" y="579.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="962.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="959.7" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="962.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="960.1" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="963.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (1 samples, 0.04%)</title><rect x="960.6" y="595.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="963.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (26 samples, 0.96%)</title><rect x="961.0" y="595.0" width="11.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="964.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.04%)</title><rect x="961.0" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="964.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (1 samples, 0.04%)</title><rect x="961.4" y="579.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="964.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (23 samples, 0.85%)</title><rect x="961.9" y="579.0" width="10.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="964.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.04%)</title><rect x="961.9" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="964.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="962.3" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="965.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (21 samples, 0.78%)</title><rect x="962.7" y="563.0" width="9.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="965.7" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="963.6" y="547.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="966.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (17 samples, 0.63%)</title><rect x="964.5" y="547.0" width="7.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="967.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (17 samples, 0.63%)</title><rect x="964.5" y="531.0" width="7.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="967.5" y="542.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.04%)</title><rect x="964.5" y="515.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="967.5" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="964.9" y="515.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="967.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="965.4" y="515.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="968.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="965.4" y="499.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="968.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (1 samples, 0.04%)</title><rect x="965.8" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="968.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (2 samples, 0.07%)</title><rect x="966.2" y="515.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="969.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (11 samples, 0.41%)</title><rect x="967.1" y="515.0" width="4.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="970.1" y="526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="967.5" y="499.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="970.5" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="967.5" y="483.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="970.5" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="967.5" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.5" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="967.5" y="451.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="970.5" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="967.5" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="970.5" y="446.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="967.5" y="419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="970.5" y="430.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="967.5" y="403.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="970.5" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="967.5" y="387.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="970.5" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="967.5" y="371.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="970.5" y="382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="968.0" y="483.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="971.0" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="968.0" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="971.0" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="968.0" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="971.0" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.11%)</title><rect x="968.4" y="499.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="971.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (2 samples, 0.07%)</title><rect x="969.7" y="499.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="972.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="970.6" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="973.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.07%)</title><rect x="971.0" y="499.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="974.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.07%)</title><rect x="971.0" y="483.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="974.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="971.9" y="579.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="974.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (41 samples, 1.52%)</title><rect x="972.4" y="595.0" width="17.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="975.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="974.1" y="579.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="977.1" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="975.0" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="978.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="975.4" y="579.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="978.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (26 samples, 0.96%)</title><rect x="975.9" y="579.0" width="11.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="978.9" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.15%)</title><rect x="977.2" y="563.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="980.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.22%)</title><rect x="978.9" y="563.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="981.9" y="574.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="981.5" y="563.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="984.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (7 samples, 0.26%)</title><rect x="982.0" y="563.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="985.0" y="574.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="984.6" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="987.6" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="984.6" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="987.6" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="984.6" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="987.6" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="984.6" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="987.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="985.0" y="563.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="988.0" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="985.0" y="547.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="988.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="986.3" y="547.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="989.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.26%)</title><rect x="987.2" y="579.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="990.2" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="987.2" y="563.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="990.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="988.1" y="563.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="991.1" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="989.8" y="563.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="992.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (3 samples, 0.11%)</title><rect x="990.3" y="595.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="993.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.11%)</title><rect x="990.3" y="579.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="993.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.07%)</title><rect x="990.3" y="563.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="993.3" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="990.3" y="547.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="993.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="990.3" y="531.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="993.3" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="990.3" y="515.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="993.3" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="990.3" y="499.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="993.3" y="510.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="990.3" y="483.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="993.3" y="494.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="990.3" y="467.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="993.3" y="478.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="990.3" y="451.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="993.3" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="990.3" y="435.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="993.3" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="990.3" y="419.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="993.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="991.1" y="563.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="994.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (2 samples, 0.07%)</title><rect x="991.6" y="595.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="994.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="992.0" y="579.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="995.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="992.0" y="563.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="995.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (33 samples, 1.22%)</title><rect x="992.5" y="595.0" width="14.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="995.5" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.15%)</title><rect x="997.3" y="579.0" width="1.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1000.3" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.15%)</title><rect x="999.0" y="579.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1002.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.22%)</title><rect x="1000.8" y="579.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1003.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="1003.4" y="579.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.04%)</title><rect x="1003.4" y="563.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1006.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.26%)</title><rect x="1003.8" y="579.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.8" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="1004.3" y="563.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1007.3" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.07%)</title><rect x="1006.0" y="563.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1009.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.07%)</title><rect x="1006.9" y="595.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.07%)</title><rect x="1007.8" y="611.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1010.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (2 samples, 0.07%)</title><rect x="1008.6" y="611.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1011.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.04%)</title><rect x="1009.5" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1012.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.07%)</title><rect x="1009.9" y="611.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1012.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (3 samples, 0.11%)</title><rect x="1010.8" y="611.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1013.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.04%)</title><rect x="1012.1" y="659.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1015.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.04%)</title><rect x="1012.6" y="659.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1015.6" y="670.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (3 samples, 0.11%)</title><rect x="1013.0" y="707.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1016.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.04%)</title><rect x="1014.3" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1017.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (7 samples, 0.26%)</title><rect x="1014.7" y="723.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.7" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1014.7" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1017.7" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.04%)</title><rect x="1015.2" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1018.2" y="718.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="1015.6" y="707.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1018.6" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.15%)</title><rect x="1016.1" y="707.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1019.1" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="1016.5" y="691.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1019.5" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.07%)</title><rect x="1016.9" y="691.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1019.9" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1017.4" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1020.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1017.4" y="659.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1020.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1017.8" y="755.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1020.8" y="766.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1017.8" y="739.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1020.8" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="1018.2" y="755.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1021.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.04%)</title><rect x="1018.7" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1021.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="1019.1" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="1019.1" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1022.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1019.1" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.26%)</title><rect x="1019.6" y="867.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="1019.6" y="851.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="1019.6" y="835.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.11%)</title><rect x="1021.3" y="851.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1022.6" y="867.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1025.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="1023.1" y="867.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1026.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="1023.1" y="851.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (19 samples, 0.70%)</title><rect x="1023.9" y="883.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1026.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.67%)</title><rect x="1024.4" y="867.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1027.4" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="1024.8" y="851.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1027.8" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1024.8" y="835.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1027.8" y="846.0"></text>
</g>
<g>
<title>__recv (15 samples, 0.56%)</title><rect x="1025.2" y="851.0" width="6.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1028.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.48%)</title><rect x="1026.1" y="835.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.48%)</title><rect x="1026.1" y="819.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (13 samples, 0.48%)</title><rect x="1026.1" y="803.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1029.1" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (13 samples, 0.48%)</title><rect x="1026.1" y="787.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.1" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.44%)</title><rect x="1026.1" y="771.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1029.1" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.41%)</title><rect x="1026.1" y="755.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1029.1" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.41%)</title><rect x="1026.1" y="739.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1029.1" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1027.0" y="723.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1030.0" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1027.0" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1030.0" y="718.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="1027.0" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1030.0" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.15%)</title><rect x="1027.4" y="723.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1030.4" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.15%)</title><rect x="1027.4" y="707.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1030.4" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.11%)</title><rect x="1027.9" y="691.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1030.9" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.11%)</title><rect x="1027.9" y="675.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1030.9" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.11%)</title><rect x="1027.9" y="659.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1030.9" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.11%)</title><rect x="1029.2" y="723.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1032.2" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="1030.5" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1033.5" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="1030.9" y="755.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1033.9" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1030.9" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1033.9" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="1030.9" y="723.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1033.9" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1031.4" y="771.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1034.4" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1031.4" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1034.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1031.4" y="739.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1034.4" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1031.4" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1034.4" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1031.8" y="851.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1034.8" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=44081] (361 samples, 13.37%)</title><rect x="1032.2" y="947.0" width="157.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1035.2" y="958.0">[NIO Selector #7 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (361 samples, 13.37%)</title><rect x="1032.2" y="931.0" width="157.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1035.2" y="942.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (16 samples, 0.59%)</title><rect x="1032.7" y="915.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1035.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 0.59%)</title><rect x="1032.7" y="899.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.7" y="910.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.07%)</title><rect x="1032.7" y="883.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1035.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 0.52%)</title><rect x="1033.5" y="883.0" width="6.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1036.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.48%)</title><rect x="1034.0" y="867.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1037.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.48%)</title><rect x="1034.0" y="851.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1037.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (13 samples, 0.48%)</title><rect x="1034.0" y="835.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1037.0" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (13 samples, 0.48%)</title><rect x="1034.0" y="819.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.0" y="830.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.48%)</title><rect x="1034.0" y="803.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.0" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.19%)</title><rect x="1034.4" y="787.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1037.4" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.19%)</title><rect x="1034.4" y="771.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.4" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.19%)</title><rect x="1034.4" y="755.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.4" y="766.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.19%)</title><rect x="1034.4" y="739.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.4" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="1036.2" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1039.2" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.26%)</title><rect x="1036.6" y="787.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1039.6" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.26%)</title><rect x="1036.6" y="771.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1039.6" y="782.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.26%)</title><rect x="1036.6" y="755.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1039.6" y="766.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.26%)</title><rect x="1036.6" y="739.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1039.6" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.26%)</title><rect x="1036.6" y="723.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1039.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (344 samples, 12.74%)</title><rect x="1039.7" y="915.0" width="150.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1042.7" y="926.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (342 samples, 12.67%)</title><rect x="1040.5" y="899.0" width="149.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.5" y="910.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (326 samples, 12.07%)</title><rect x="1040.5" y="883.0" width="142.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.5" y="894.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (322 samples, 11.93%)</title><rect x="1041.4" y="867.0" width="140.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.4" y="878.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (322 samples, 11.93%)</title><rect x="1041.4" y="851.0" width="140.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.4" y="862.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (319 samples, 11.81%)</title><rect x="1041.4" y="835.0" width="139.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.4" y="846.0">RequestHandler0_g..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (99 samples, 3.67%)</title><rect x="1042.3" y="819.0" width="43.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.3" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="1043.2" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1046.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="1043.2" y="787.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="1043.2" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.2" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1043.2" y="755.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1046.2" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="1043.6" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1046.6" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1043.6" y="739.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1046.6" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1043.6" y="723.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1046.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (95 samples, 3.52%)</title><rect x="1044.0" y="803.0" width="41.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.0" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.19%)</title><rect x="1044.0" y="787.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="1045.3" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="1045.3" y="755.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.07%)</title><rect x="1045.3" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (90 samples, 3.33%)</title><rect x="1046.2" y="787.0" width="39.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.2" y="798.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (90 samples, 3.33%)</title><rect x="1046.2" y="771.0" width="39.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.2" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (90 samples, 3.33%)</title><rect x="1046.2" y="755.0" width="39.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.2" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (89 samples, 3.30%)</title><rect x="1046.7" y="739.0" width="38.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.7" y="750.0">one..</text>
</g>
<g>
<title>send (89 samples, 3.30%)</title><rect x="1046.7" y="723.0" width="38.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1049.7" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (89 samples, 3.30%)</title><rect x="1046.7" y="707.0" width="38.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1049.7" y="718.0">ent..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="1046.7" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1049.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (88 samples, 3.26%)</title><rect x="1047.1" y="691.0" width="38.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1050.1" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (88 samples, 3.26%)</title><rect x="1047.1" y="675.0" width="38.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1050.1" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (88 samples, 3.26%)</title><rect x="1047.1" y="659.0" width="38.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1050.1" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (88 samples, 3.26%)</title><rect x="1047.1" y="643.0" width="38.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1050.1" y="654.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (88 samples, 3.26%)</title><rect x="1047.1" y="627.0" width="38.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1050.1" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (88 samples, 3.26%)</title><rect x="1047.1" y="611.0" width="38.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1050.1" y="622.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1047.1" y="595.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1050.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (86 samples, 3.19%)</title><rect x="1047.5" y="595.0" width="37.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1050.5" y="606.0">tcp..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="1049.7" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1052.7" y="590.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="1050.1" y="579.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1053.1" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="1050.6" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1053.6" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="1050.6" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1053.6" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.26%)</title><rect x="1051.0" y="579.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1054.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.19%)</title><rect x="1051.9" y="563.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1054.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="1051.9" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1054.9" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="1051.9" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1054.9" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.07%)</title><rect x="1052.3" y="547.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1055.3" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="1053.2" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1056.2" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="1053.2" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1056.2" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="1053.6" y="547.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1056.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (70 samples, 2.59%)</title><rect x="1054.1" y="579.0" width="30.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1057.1" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (70 samples, 2.59%)</title><rect x="1054.1" y="563.0" width="30.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1057.1" y="574.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (70 samples, 2.59%)</title><rect x="1054.1" y="547.0" width="30.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1057.1" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (65 samples, 2.41%)</title><rect x="1054.5" y="531.0" width="28.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1057.5" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (65 samples, 2.41%)</title><rect x="1054.5" y="515.0" width="28.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1057.5" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (64 samples, 2.37%)</title><rect x="1055.0" y="499.0" width="27.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1058.0" y="510.0">_..</text>
</g>
<g>
<title>ip_local_out (64 samples, 2.37%)</title><rect x="1055.0" y="483.0" width="27.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1058.0" y="494.0">i..</text>
</g>
<g>
<title>ip_output (63 samples, 2.33%)</title><rect x="1055.4" y="467.0" width="27.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1058.4" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (62 samples, 2.30%)</title><rect x="1055.8" y="451.0" width="27.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1058.8" y="462.0">i..</text>
</g>
<g>
<title>__ip_finish_output (62 samples, 2.30%)</title><rect x="1055.8" y="435.0" width="27.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1058.8" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (62 samples, 2.30%)</title><rect x="1055.8" y="419.0" width="27.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1058.8" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (51 samples, 1.89%)</title><rect x="1057.6" y="403.0" width="22.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1060.6" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (51 samples, 1.89%)</title><rect x="1057.6" y="387.0" width="22.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1060.6" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (51 samples, 1.89%)</title><rect x="1057.6" y="371.0" width="22.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1060.6" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (51 samples, 1.89%)</title><rect x="1057.6" y="355.0" width="22.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1060.6" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (47 samples, 1.74%)</title><rect x="1059.3" y="339.0" width="20.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1062.3" y="350.0"></text>
</g>
<g>
<title>process_backlog (47 samples, 1.74%)</title><rect x="1059.3" y="323.0" width="20.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1062.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (47 samples, 1.74%)</title><rect x="1059.3" y="307.0" width="20.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1062.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (47 samples, 1.74%)</title><rect x="1059.3" y="291.0" width="20.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1062.3" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.07%)</title><rect x="1059.8" y="275.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1062.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv (44 samples, 1.63%)</title><rect x="1060.6" y="275.0" width="19.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1063.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (44 samples, 1.63%)</title><rect x="1060.6" y="259.0" width="19.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1063.6" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (44 samples, 1.63%)</title><rect x="1060.6" y="243.0" width="19.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1063.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (44 samples, 1.63%)</title><rect x="1060.6" y="227.0" width="19.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1063.6" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (44 samples, 1.63%)</title><rect x="1060.6" y="211.0" width="19.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1063.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (44 samples, 1.63%)</title><rect x="1060.6" y="195.0" width="19.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1063.6" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="1061.5" y="179.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1064.5" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="1062.4" y="179.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1065.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (39 samples, 1.44%)</title><rect x="1062.8" y="179.0" width="17.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1065.8" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.04%)</title><rect x="1062.8" y="163.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1065.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 1.41%)</title><rect x="1063.3" y="163.0" width="16.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1066.3" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="1063.3" y="147.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1066.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="1063.3" y="131.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1066.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="1063.3" y="115.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1066.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="1063.3" y="99.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1066.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1063.3" y="83.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1066.3" y="94.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.33%)</title><rect x="1063.7" y="147.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.15%)</title><rect x="1064.1" y="131.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1067.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="1064.6" y="115.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1067.6" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="1064.6" y="99.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1067.6" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="1064.6" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1067.6" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1065.0" y="83.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1068.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="1065.0" y="67.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1068.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="1065.0" y="51.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1068.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="1065.4" y="115.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1068.4" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.11%)</title><rect x="1065.9" y="131.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1068.9" y="142.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="1067.2" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1070.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (25 samples, 0.93%)</title><rect x="1067.6" y="147.0" width="11.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1070.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (25 samples, 0.93%)</title><rect x="1067.6" y="131.0" width="11.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (25 samples, 0.93%)</title><rect x="1067.6" y="115.0" width="11.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1070.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 0.93%)</title><rect x="1067.6" y="99.0" width="11.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1070.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (25 samples, 0.93%)</title><rect x="1067.6" y="83.0" width="11.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1070.6" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="1078.6" y="147.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1081.6" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.07%)</title><rect x="1079.0" y="147.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1082.0" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.07%)</title><rect x="1079.0" y="131.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1082.0" y="142.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.07%)</title><rect x="1079.0" y="115.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1082.0" y="126.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.07%)</title><rect x="1079.0" y="99.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1082.0" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.26%)</title><rect x="1079.9" y="403.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1082.9" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.26%)</title><rect x="1079.9" y="387.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1082.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="1081.6" y="371.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1084.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.11%)</title><rect x="1081.6" y="355.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1084.6" y="366.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.11%)</title><rect x="1081.6" y="339.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1084.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.11%)</title><rect x="1081.6" y="323.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1084.6" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.11%)</title><rect x="1081.6" y="307.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1084.6" y="318.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1082.9" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1085.9" y="542.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="1083.4" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1086.4" y="542.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.04%)</title><rect x="1083.8" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1086.8" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="1084.2" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1087.2" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="1084.7" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1087.7" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="1084.7" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1087.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1084.7" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1087.7" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="1085.1" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1088.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="1085.5" y="819.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1085.5" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1088.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1085.5" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="1086.0" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1089.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1086.0" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1086.0" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1086.0" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.get (216 samples, 8.00%)</title><rect x="1086.4" y="819.0" width="94.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1089.4" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (216 samples, 8.00%)</title><rect x="1086.4" y="803.0" width="94.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.4" y="814.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (216 samples, 8.00%)</title><rect x="1086.4" y="787.0" width="94.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1089.4" y="798.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (216 samples, 8.00%)</title><rect x="1086.4" y="771.0" width="94.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.4" y="782.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (211 samples, 7.81%)</title><rect x="1087.3" y="755.0" width="92.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1090.3" y="766.0">Java_org_ro..</text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="1087.3" y="739.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1090.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1087.7" y="739.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1090.7" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (208 samples, 7.70%)</title><rect x="1088.2" y="739.0" width="90.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1091.2" y="750.0">rocksdb_ge..</text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.15%)</title><rect x="1088.2" y="723.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1091.2" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.07%)</title><rect x="1089.0" y="707.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1092.0" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="1089.9" y="723.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1092.9" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="1089.9" y="707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1092.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (200 samples, 7.41%)</title><rect x="1090.4" y="723.0" width="87.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1093.4" y="734.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (199 samples, 7.37%)</title><rect x="1090.4" y="707.0" width="86.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1093.4" y="718.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (4 samples, 0.15%)</title><rect x="1090.4" y="691.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1093.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.07%)</title><rect x="1090.4" y="675.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1093.4" y="686.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.04%)</title><rect x="1090.4" y="659.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1093.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1090.4" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1093.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1090.4" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1093.4" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1090.4" y="611.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1093.4" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1090.4" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1093.4" y="606.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="1090.4" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1093.4" y="590.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="1090.4" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1093.4" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1090.4" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1093.4" y="558.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1090.4" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1093.4" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1090.4" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1093.4" y="526.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1090.8" y="659.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1093.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (2 samples, 0.07%)</title><rect x="1091.2" y="675.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1094.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (195 samples, 7.22%)</title><rect x="1092.1" y="691.0" width="85.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1095.1" y="702.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (195 samples, 7.22%)</title><rect x="1092.1" y="675.0" width="85.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1095.1" y="686.0">rocksdb::D..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.07%)</title><rect x="1092.1" y="659.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1095.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="1093.0" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1096.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (191 samples, 7.07%)</title><rect x="1093.4" y="659.0" width="83.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1096.4" y="670.0">rocksdb::..</text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="1093.4" y="643.0" width="1.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1096.4" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1094.7" y="627.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1097.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1094.7" y="611.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1097.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1094.7" y="595.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1097.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.11%)</title><rect x="1095.2" y="643.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1098.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.07%)</title><rect x="1095.6" y="627.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1098.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1096.5" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1099.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1096.5" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1099.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="1096.5" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1099.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="1096.5" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1099.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="1096.9" y="643.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1099.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (32 samples, 1.19%)</title><rect x="1097.3" y="643.0" width="14.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.3" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="1097.3" y="627.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1100.3" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1098.2" y="627.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1101.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (29 samples, 1.07%)</title><rect x="1098.7" y="627.0" width="12.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1101.7" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (28 samples, 1.04%)</title><rect x="1099.1" y="611.0" width="12.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1102.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (26 samples, 0.96%)</title><rect x="1099.1" y="595.0" width="11.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1102.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.11%)</title><rect x="1102.6" y="579.0" width="1.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1105.6" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1103.9" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1106.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="1104.3" y="579.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1107.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (12 samples, 0.44%)</title><rect x="1105.2" y="579.0" width="5.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.2" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.19%)</title><rect x="1105.7" y="563.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1108.7" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1107.8" y="563.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1110.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="1108.3" y="563.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1111.3" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="1110.0" y="563.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1113.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.07%)</title><rect x="1110.5" y="595.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1113.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (1 samples, 0.04%)</title><rect x="1111.3" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1114.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="1111.8" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1114.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.07%)</title><rect x="1112.2" y="643.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1115.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (145 samples, 5.37%)</title><rect x="1113.1" y="643.0" width="63.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1116.1" y="654.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (7 samples, 0.26%)</title><rect x="1115.3" y="627.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1118.3" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="1116.6" y="611.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1119.6" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="1117.0" y="611.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1120.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1117.9" y="611.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1120.9" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="1118.3" y="627.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1121.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (1 samples, 0.04%)</title><rect x="1119.2" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::FileIndexer::GetNextLevelIndex(unsigned long, unsigned long, int, int, int*, int*) const (1 samples, 0.04%)</title><rect x="1119.6" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1122.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="1120.1" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1123.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="1120.1" y="611.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1123.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (127 samples, 4.70%)</title><rect x="1120.5" y="627.0" width="55.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.5" y="638.0">rocks..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="1120.9" y="611.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (2 samples, 0.07%)</title><rect x="1121.4" y="611.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1124.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (115 samples, 4.26%)</title><rect x="1122.3" y="611.0" width="50.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.3" y="622.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.11%)</title><rect x="1122.7" y="595.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1125.7" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1124.0" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1127.0" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1124.4" y="595.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1127.4" y="606.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="1124.9" y="595.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1127.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (3 samples, 0.11%)</title><rect x="1125.3" y="595.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1128.3" y="606.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.11%)</title><rect x="1125.3" y="579.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1128.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (31 samples, 1.15%)</title><rect x="1126.6" y="595.0" width="13.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1129.6" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1126.6" y="579.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1129.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (30 samples, 1.11%)</title><rect x="1127.1" y="579.0" width="13.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1130.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (30 samples, 1.11%)</title><rect x="1127.1" y="563.0" width="13.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1130.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.04%)</title><rect x="1127.5" y="547.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1130.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (5 samples, 0.19%)</title><rect x="1127.9" y="547.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1130.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="1128.4" y="531.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1131.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (2 samples, 0.07%)</title><rect x="1129.3" y="531.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomAccessFile::Read(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::Slice*, char*, rocksdb::IODebugContext*) const (1 samples, 0.04%)</title><rect x="1129.7" y="515.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (22 samples, 0.81%)</title><rect x="1130.1" y="547.0" width="9.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1133.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (21 samples, 0.78%)</title><rect x="1130.6" y="531.0" width="9.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1133.6" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1131.0" y="515.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.0" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1131.4" y="515.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1134.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="1131.9" y="515.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.9" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1131.9" y="499.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1134.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1132.3" y="515.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1135.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (16 samples, 0.59%)</title><rect x="1132.7" y="515.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1135.7" y="526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.15%)</title><rect x="1132.7" y="499.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1135.7" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="1132.7" y="483.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1135.7" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="1132.7" y="467.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1135.7" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.15%)</title><rect x="1132.7" y="451.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1135.7" y="462.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.11%)</title><rect x="1132.7" y="435.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1135.7" y="446.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.11%)</title><rect x="1132.7" y="419.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1135.7" y="430.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.11%)</title><rect x="1132.7" y="403.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1135.7" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.11%)</title><rect x="1132.7" y="387.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1135.7" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.11%)</title><rect x="1132.7" y="371.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1135.7" y="382.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1134.1" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1137.1" y="446.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.04%)</title><rect x="1134.5" y="499.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1137.5" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.11%)</title><rect x="1134.9" y="499.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1137.9" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1136.2" y="499.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1139.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (2 samples, 0.07%)</title><rect x="1136.7" y="499.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.19%)</title><rect x="1137.6" y="499.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.19%)</title><rect x="1137.6" y="483.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="1139.7" y="547.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1142.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (41 samples, 1.52%)</title><rect x="1140.2" y="595.0" width="17.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1143.2" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1141.5" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="1141.9" y="579.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1144.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (28 samples, 1.04%)</title><rect x="1142.8" y="579.0" width="12.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.8" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="1144.1" y="563.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1147.1" y="574.0"></text>
</g>
<g>
<title>memcpy (3 samples, 0.11%)</title><rect x="1145.9" y="563.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1148.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (7 samples, 0.26%)</title><rect x="1147.2" y="563.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (11 samples, 0.41%)</title><rect x="1150.2" y="563.0" width="4.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.07%)</title><rect x="1150.7" y="547.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1153.7" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="1151.5" y="547.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1154.5" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.19%)</title><rect x="1152.9" y="547.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1155.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.07%)</title><rect x="1155.0" y="579.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="1155.9" y="579.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.9" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="1156.8" y="563.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1159.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="1157.2" y="563.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1160.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (6 samples, 0.22%)</title><rect x="1158.1" y="595.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (5 samples, 0.19%)</title><rect x="1158.5" y="579.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.07%)</title><rect x="1158.5" y="563.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.5" y="574.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.04%)</title><rect x="1158.5" y="547.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1161.5" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1159.0" y="547.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1162.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="1159.4" y="563.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.07%)</title><rect x="1159.8" y="563.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="1160.7" y="595.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="1160.7" y="579.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (23 samples, 0.85%)</title><rect x="1161.2" y="595.0" width="10.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.2" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (1 samples, 0.04%)</title><rect x="1164.7" y="579.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1167.7" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="1165.1" y="579.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1168.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.19%)</title><rect x="1166.4" y="579.0" width="2.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1169.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) [clone .plt] (1 samples, 0.04%)</title><rect x="1168.6" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="1169.0" y="579.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="1169.0" y="563.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="1169.5" y="579.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.5" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1169.9" y="563.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="1170.3" y="563.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1173.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="1171.2" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1171.6" y="595.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="1172.1" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.04%)</title><rect x="1172.5" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="1173.0" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (1 samples, 0.04%)</title><rect x="1173.4" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (2 samples, 0.07%)</title><rect x="1173.8" y="611.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="1174.7" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.04%)</title><rect x="1175.1" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="1175.6" y="611.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1176.0" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1179.0" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1176.0" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1179.0" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1176.0" y="595.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (1 samples, 0.04%)</title><rect x="1176.5" y="643.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="1176.9" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.9" y="670.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1177.3" y="707.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (3 samples, 0.11%)</title><rect x="1177.8" y="723.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.8" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.11%)</title><rect x="1177.8" y="707.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1180.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1178.2" y="691.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.2" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1178.6" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.6" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1178.6" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.6" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1178.6" y="659.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.6" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="1178.6" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.6" y="654.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="1179.1" y="739.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1179.5" y="755.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1182.5" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="1179.5" y="739.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1182.5" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="1179.9" y="755.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1182.9" y="766.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="1180.4" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.11%)</title><rect x="1180.8" y="835.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.11%)</title><rect x="1180.8" y="819.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1180.8" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="1181.3" y="803.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="1181.3" y="787.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.07%)</title><rect x="1181.3" y="771.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="1182.1" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1182.1" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1182.6" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.59%)</title><rect x="1183.0" y="883.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1186.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.59%)</title><rect x="1183.0" y="867.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1186.0" y="878.0"></text>
</g>
<g>
<title>__recv (16 samples, 0.59%)</title><rect x="1183.0" y="851.0" width="7.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1186.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.52%)</title><rect x="1183.9" y="835.0" width="6.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1186.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.52%)</title><rect x="1183.9" y="819.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (14 samples, 0.52%)</title><rect x="1183.9" y="803.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1186.9" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (14 samples, 0.52%)</title><rect x="1183.9" y="787.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1186.9" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.52%)</title><rect x="1183.9" y="771.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.9" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1183.9" y="755.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1186.9" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 0.48%)</title><rect x="1184.3" y="755.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1187.3" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="1184.3" y="739.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.44%)</title><rect x="1184.8" y="739.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1187.8" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1186.1" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1189.1" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1186.1" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1189.1" y="718.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1186.1" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1189.1" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="1186.5" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1186.5" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1189.5" y="718.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="1186.5" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.15%)</title><rect x="1186.9" y="723.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1189.9" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.11%)</title><rect x="1187.4" y="707.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1190.4" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="1188.3" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1191.3" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="1188.3" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.3" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="1188.3" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.3" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="1188.7" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.07%)</title><rect x="1189.1" y="723.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1189.6" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1192.6" y="718.0"></text>
</g>
</g>
</svg>
