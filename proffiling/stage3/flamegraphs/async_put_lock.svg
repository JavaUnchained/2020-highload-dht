<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (39,013 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=44734] (2,467 samples, 6.32%)</title><rect x="10.0" y="323.0" width="74.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="334.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,467 samples, 6.32%)</title><rect x="10.0" y="307.0" width="74.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="318.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,467 samples, 6.32%)</title><rect x="10.0" y="291.0" width="74.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="302.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpSession (1,557 samples, 3.99%)</title><rect x="10.0" y="275.0" width="47.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="286.0">one...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (910 samples, 2.33%)</title><rect x="57.1" y="275.0" width="27.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.1" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (910 samples, 2.33%)</title><rect x="57.1" y="259.0" width="27.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.1" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (910 samples, 2.33%)</title><rect x="57.1" y="243.0" width="27.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.1" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (910 samples, 2.33%)</title><rect x="57.1" y="227.0" width="27.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.1" y="238.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (910 samples, 2.33%)</title><rect x="57.1" y="211.0" width="27.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.1" y="222.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (910 samples, 2.33%)</title><rect x="57.1" y="195.0" width="27.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.1" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (910 samples, 2.33%)</title><rect x="57.1" y="179.0" width="27.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.1" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (910 samples, 2.33%)</title><rect x="57.1" y="163.0" width="27.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.1" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (910 samples, 2.33%)</title><rect x="57.1" y="147.0" width="27.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.1" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (910 samples, 2.33%)</title><rect x="57.1" y="131.0" width="27.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.1" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (910 samples, 2.33%)</title><rect x="57.1" y="115.0" width="27.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.1" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (910 samples, 2.33%)</title><rect x="57.1" y="99.0" width="27.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.1" y="110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (910 samples, 2.33%)</title><rect x="57.1" y="83.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.1" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (910 samples, 2.33%)</title><rect x="57.1" y="67.0" width="27.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.1" y="78.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (910 samples, 2.33%)</title><rect x="57.1" y="51.0" width="27.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="62.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (910 samples, 2.33%)</title><rect x="57.1" y="35.0" width="27.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="60.1" y="46.0">j..</text>
</g>
<g>
<title>[NIO Selector #1 tid=44735] (2,524 samples, 6.47%)</title><rect x="84.6" y="323.0" width="76.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="87.6" y="334.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,524 samples, 6.47%)</title><rect x="84.6" y="307.0" width="76.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.6" y="318.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,524 samples, 6.47%)</title><rect x="84.6" y="291.0" width="76.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.6" y="302.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpSession (1,601 samples, 4.10%)</title><rect x="84.6" y="275.0" width="48.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="87.6" y="286.0">one...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (923 samples, 2.37%)</title><rect x="133.0" y="275.0" width="28.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.0" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (923 samples, 2.37%)</title><rect x="133.0" y="259.0" width="28.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.0" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (923 samples, 2.37%)</title><rect x="133.0" y="243.0" width="28.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.0" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (923 samples, 2.37%)</title><rect x="133.0" y="227.0" width="28.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.0" y="238.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (923 samples, 2.37%)</title><rect x="133.0" y="211.0" width="28.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.0" y="222.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (923 samples, 2.37%)</title><rect x="133.0" y="195.0" width="28.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.0" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (923 samples, 2.37%)</title><rect x="133.0" y="179.0" width="28.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.0" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (923 samples, 2.37%)</title><rect x="133.0" y="163.0" width="28.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.0" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (923 samples, 2.37%)</title><rect x="133.0" y="147.0" width="28.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.0" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (923 samples, 2.37%)</title><rect x="133.0" y="131.0" width="28.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.0" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (923 samples, 2.37%)</title><rect x="133.0" y="115.0" width="28.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.0" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (923 samples, 2.37%)</title><rect x="133.0" y="99.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.0" y="110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (923 samples, 2.37%)</title><rect x="133.0" y="83.0" width="28.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.0" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (923 samples, 2.37%)</title><rect x="133.0" y="67.0" width="28.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.0" y="78.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (923 samples, 2.37%)</title><rect x="133.0" y="51.0" width="28.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.0" y="62.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (923 samples, 2.37%)</title><rect x="133.0" y="35.0" width="28.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.0" y="46.0">j..</text>
</g>
<g>
<title>[NIO Selector #2 tid=44736] (1,949 samples, 5.00%)</title><rect x="161.0" y="323.0" width="58.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="164.0" y="334.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,949 samples, 5.00%)</title><rect x="161.0" y="307.0" width="58.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.0" y="318.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,949 samples, 5.00%)</title><rect x="161.0" y="291.0" width="58.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.0" y="302.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.HttpSession (1,210 samples, 3.10%)</title><rect x="161.0" y="275.0" width="36.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="164.0" y="286.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (739 samples, 1.89%)</title><rect x="197.6" y="275.0" width="22.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.6" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (739 samples, 1.89%)</title><rect x="197.6" y="259.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.6" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (739 samples, 1.89%)</title><rect x="197.6" y="243.0" width="22.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.6" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (739 samples, 1.89%)</title><rect x="197.6" y="227.0" width="22.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.6" y="238.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (739 samples, 1.89%)</title><rect x="197.6" y="211.0" width="22.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.6" y="222.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (739 samples, 1.89%)</title><rect x="197.6" y="195.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.6" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (739 samples, 1.89%)</title><rect x="197.6" y="179.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.6" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (739 samples, 1.89%)</title><rect x="197.6" y="163.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.6" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (739 samples, 1.89%)</title><rect x="197.6" y="147.0" width="22.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.6" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (739 samples, 1.89%)</title><rect x="197.6" y="131.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.6" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (739 samples, 1.89%)</title><rect x="197.6" y="115.0" width="22.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.6" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (739 samples, 1.89%)</title><rect x="197.6" y="99.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.6" y="110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (739 samples, 1.89%)</title><rect x="197.6" y="83.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.6" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (739 samples, 1.89%)</title><rect x="197.6" y="67.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="200.6" y="78.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (739 samples, 1.89%)</title><rect x="197.6" y="51.0" width="22.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.6" y="62.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (739 samples, 1.89%)</title><rect x="197.6" y="35.0" width="22.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="200.6" y="46.0">j..</text>
</g>
<g>
<title>[NIO Selector #3 tid=44737] (2,240 samples, 5.74%)</title><rect x="219.9" y="323.0" width="67.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="222.9" y="334.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,240 samples, 5.74%)</title><rect x="219.9" y="307.0" width="67.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.9" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,240 samples, 5.74%)</title><rect x="219.9" y="291.0" width="67.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.9" y="302.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.HttpSession (1,412 samples, 3.62%)</title><rect x="219.9" y="275.0" width="42.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="222.9" y="286.0">one...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (828 samples, 2.12%)</title><rect x="262.6" y="275.0" width="25.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.6" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (828 samples, 2.12%)</title><rect x="262.6" y="259.0" width="25.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.6" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (828 samples, 2.12%)</title><rect x="262.6" y="243.0" width="25.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.6" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (828 samples, 2.12%)</title><rect x="262.6" y="227.0" width="25.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.6" y="238.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (828 samples, 2.12%)</title><rect x="262.6" y="211.0" width="25.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.6" y="222.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (828 samples, 2.12%)</title><rect x="262.6" y="195.0" width="25.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.6" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (828 samples, 2.12%)</title><rect x="262.6" y="179.0" width="25.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.6" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (828 samples, 2.12%)</title><rect x="262.6" y="163.0" width="25.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.6" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (828 samples, 2.12%)</title><rect x="262.6" y="147.0" width="25.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.6" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (828 samples, 2.12%)</title><rect x="262.6" y="131.0" width="25.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.6" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (828 samples, 2.12%)</title><rect x="262.6" y="115.0" width="25.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.6" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (828 samples, 2.12%)</title><rect x="262.6" y="99.0" width="25.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.6" y="110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (828 samples, 2.12%)</title><rect x="262.6" y="83.0" width="25.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.6" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (828 samples, 2.12%)</title><rect x="262.6" y="67.0" width="25.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.6" y="78.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (828 samples, 2.12%)</title><rect x="262.6" y="51.0" width="25.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.6" y="62.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (828 samples, 2.12%)</title><rect x="262.6" y="35.0" width="25.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="265.6" y="46.0">j..</text>
</g>
<g>
<title>[NIO Selector #4 tid=44738] (2,190 samples, 5.61%)</title><rect x="287.7" y="323.0" width="66.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="290.7" y="334.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,190 samples, 5.61%)</title><rect x="287.7" y="307.0" width="66.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.7" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,190 samples, 5.61%)</title><rect x="287.7" y="291.0" width="66.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.7" y="302.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.HttpSession (1,364 samples, 3.50%)</title><rect x="287.7" y="275.0" width="41.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="290.7" y="286.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (826 samples, 2.12%)</title><rect x="328.9" y="275.0" width="25.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.9" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (826 samples, 2.12%)</title><rect x="328.9" y="259.0" width="25.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.9" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (826 samples, 2.12%)</title><rect x="328.9" y="243.0" width="25.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.9" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (826 samples, 2.12%)</title><rect x="328.9" y="227.0" width="25.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.9" y="238.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (826 samples, 2.12%)</title><rect x="328.9" y="211.0" width="25.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.9" y="222.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (826 samples, 2.12%)</title><rect x="328.9" y="195.0" width="25.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.9" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (826 samples, 2.12%)</title><rect x="328.9" y="179.0" width="25.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.9" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (826 samples, 2.12%)</title><rect x="328.9" y="163.0" width="25.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.9" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (826 samples, 2.12%)</title><rect x="328.9" y="147.0" width="25.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.9" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (826 samples, 2.12%)</title><rect x="328.9" y="131.0" width="25.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.9" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (826 samples, 2.12%)</title><rect x="328.9" y="115.0" width="25.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.9" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (826 samples, 2.12%)</title><rect x="328.9" y="99.0" width="25.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.9" y="110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (826 samples, 2.12%)</title><rect x="328.9" y="83.0" width="25.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.9" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (826 samples, 2.12%)</title><rect x="328.9" y="67.0" width="25.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.9" y="78.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (826 samples, 2.12%)</title><rect x="328.9" y="51.0" width="25.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.9" y="62.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (826 samples, 2.12%)</title><rect x="328.9" y="35.0" width="25.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="331.9" y="46.0">j..</text>
</g>
<g>
<title>[NIO Selector #5 tid=44739] (2,052 samples, 5.26%)</title><rect x="353.9" y="323.0" width="62.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="356.9" y="334.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,052 samples, 5.26%)</title><rect x="353.9" y="307.0" width="62.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.9" y="318.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,052 samples, 5.26%)</title><rect x="353.9" y="291.0" width="62.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.9" y="302.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.HttpSession (1,276 samples, 3.27%)</title><rect x="353.9" y="275.0" width="38.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="356.9" y="286.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (776 samples, 1.99%)</title><rect x="392.5" y="275.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.5" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (776 samples, 1.99%)</title><rect x="392.5" y="259.0" width="23.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.5" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (776 samples, 1.99%)</title><rect x="392.5" y="243.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.5" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (776 samples, 1.99%)</title><rect x="392.5" y="227.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.5" y="238.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (776 samples, 1.99%)</title><rect x="392.5" y="211.0" width="23.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.5" y="222.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (776 samples, 1.99%)</title><rect x="392.5" y="195.0" width="23.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.5" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (776 samples, 1.99%)</title><rect x="392.5" y="179.0" width="23.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.5" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (776 samples, 1.99%)</title><rect x="392.5" y="163.0" width="23.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.5" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (776 samples, 1.99%)</title><rect x="392.5" y="147.0" width="23.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="395.5" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (776 samples, 1.99%)</title><rect x="392.5" y="131.0" width="23.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.5" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (776 samples, 1.99%)</title><rect x="392.5" y="115.0" width="23.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.5" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (776 samples, 1.99%)</title><rect x="392.5" y="99.0" width="23.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.5" y="110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (776 samples, 1.99%)</title><rect x="392.5" y="83.0" width="23.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.5" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (776 samples, 1.99%)</title><rect x="392.5" y="67.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.5" y="78.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (776 samples, 1.99%)</title><rect x="392.5" y="51.0" width="23.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.5" y="62.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (776 samples, 1.99%)</title><rect x="392.5" y="35.0" width="23.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="395.5" y="46.0">j..</text>
</g>
<g>
<title>[NIO Selector #6 tid=44740] (2,292 samples, 5.87%)</title><rect x="416.0" y="323.0" width="69.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="419.0" y="334.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,292 samples, 5.87%)</title><rect x="416.0" y="307.0" width="69.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.0" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,292 samples, 5.87%)</title><rect x="416.0" y="291.0" width="69.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.0" y="302.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.HttpSession (1,410 samples, 3.61%)</title><rect x="416.0" y="275.0" width="42.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="419.0" y="286.0">one...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (882 samples, 2.26%)</title><rect x="458.6" y="275.0" width="26.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.6" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (882 samples, 2.26%)</title><rect x="458.6" y="259.0" width="26.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.6" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (882 samples, 2.26%)</title><rect x="458.6" y="243.0" width="26.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.6" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (882 samples, 2.26%)</title><rect x="458.6" y="227.0" width="26.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.6" y="238.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (882 samples, 2.26%)</title><rect x="458.6" y="211.0" width="26.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.6" y="222.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (882 samples, 2.26%)</title><rect x="458.6" y="195.0" width="26.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.6" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (882 samples, 2.26%)</title><rect x="458.6" y="179.0" width="26.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.6" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (882 samples, 2.26%)</title><rect x="458.6" y="163.0" width="26.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.6" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (882 samples, 2.26%)</title><rect x="458.6" y="147.0" width="26.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.6" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (882 samples, 2.26%)</title><rect x="458.6" y="131.0" width="26.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.6" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (882 samples, 2.26%)</title><rect x="458.6" y="115.0" width="26.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.6" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (882 samples, 2.26%)</title><rect x="458.6" y="99.0" width="26.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.6" y="110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (882 samples, 2.26%)</title><rect x="458.6" y="83.0" width="26.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.6" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (882 samples, 2.26%)</title><rect x="458.6" y="67.0" width="26.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.6" y="78.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (882 samples, 2.26%)</title><rect x="458.6" y="51.0" width="26.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.6" y="62.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (882 samples, 2.26%)</title><rect x="458.6" y="35.0" width="26.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="461.6" y="46.0">j..</text>
</g>
<g>
<title>[NIO Selector #7 tid=44741] (2,158 samples, 5.53%)</title><rect x="485.3" y="323.0" width="65.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="488.3" y="334.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,158 samples, 5.53%)</title><rect x="485.3" y="307.0" width="65.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.3" y="318.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,158 samples, 5.53%)</title><rect x="485.3" y="291.0" width="65.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.3" y="302.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.HttpSession (1,303 samples, 3.34%)</title><rect x="485.3" y="275.0" width="39.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="488.3" y="286.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (855 samples, 2.19%)</title><rect x="524.7" y="275.0" width="25.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.7" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (855 samples, 2.19%)</title><rect x="524.7" y="259.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.7" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (855 samples, 2.19%)</title><rect x="524.7" y="243.0" width="25.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.7" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (855 samples, 2.19%)</title><rect x="524.7" y="227.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.7" y="238.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (855 samples, 2.19%)</title><rect x="524.7" y="211.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.7" y="222.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (855 samples, 2.19%)</title><rect x="524.7" y="195.0" width="25.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.7" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (855 samples, 2.19%)</title><rect x="524.7" y="179.0" width="25.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.7" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (855 samples, 2.19%)</title><rect x="524.7" y="163.0" width="25.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.7" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (855 samples, 2.19%)</title><rect x="524.7" y="147.0" width="25.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.7" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (855 samples, 2.19%)</title><rect x="524.7" y="131.0" width="25.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.7" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (855 samples, 2.19%)</title><rect x="524.7" y="115.0" width="25.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.7" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (855 samples, 2.19%)</title><rect x="524.7" y="99.0" width="25.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.7" y="110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (855 samples, 2.19%)</title><rect x="524.7" y="83.0" width="25.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.7" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (855 samples, 2.19%)</title><rect x="524.7" y="67.0" width="25.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.7" y="78.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (855 samples, 2.19%)</title><rect x="524.7" y="51.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.7" y="62.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (855 samples, 2.19%)</title><rect x="524.7" y="35.0" width="25.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="527.7" y="46.0">j..</text>
</g>
<g>
<title>[async_worker-0 tid=44750] (2,720 samples, 6.97%)</title><rect x="550.6" y="323.0" width="82.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="553.6" y="334.0">[async_wo..</text>
</g>
<g>
<title>java/lang/Thread.run (2,720 samples, 6.97%)</title><rect x="550.6" y="307.0" width="82.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.6" y="318.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,720 samples, 6.97%)</title><rect x="550.6" y="291.0" width="82.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.6" y="302.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,720 samples, 6.97%)</title><rect x="550.6" y="275.0" width="82.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.6" y="286.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,718 samples, 6.97%)</title><rect x="550.6" y="259.0" width="82.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.6" y="270.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,718 samples, 6.97%)</title><rect x="550.6" y="243.0" width="82.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.6" y="254.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (122 samples, 0.31%)</title><rect x="550.6" y="227.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (122 samples, 0.31%)</title><rect x="550.6" y="211.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (122 samples, 0.31%)</title><rect x="550.6" y="195.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (122 samples, 0.31%)</title><rect x="550.6" y="179.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="553.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (122 samples, 0.31%)</title><rect x="550.6" y="163.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (122 samples, 0.31%)</title><rect x="550.6" y="147.0" width="3.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="553.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,596 samples, 6.65%)</title><rect x="554.3" y="227.0" width="78.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.3" y="238.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,596 samples, 6.65%)</title><rect x="554.3" y="211.0" width="78.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.3" y="222.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,596 samples, 6.65%)</title><rect x="554.3" y="195.0" width="78.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.3" y="206.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,596 samples, 6.65%)</title><rect x="554.3" y="179.0" width="78.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.3" y="190.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,596 samples, 6.65%)</title><rect x="554.3" y="163.0" width="78.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.3" y="174.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,596 samples, 6.65%)</title><rect x="554.3" y="147.0" width="78.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.3" y="158.0">jdk/inter..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,596 samples, 6.65%)</title><rect x="554.3" y="131.0" width="78.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="557.3" y="142.0">java.util..</text>
</g>
<g>
<title>[async_worker-1 tid=44755] (2,696 samples, 6.91%)</title><rect x="632.8" y="323.0" width="81.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="635.8" y="334.0">[async_wo..</text>
</g>
<g>
<title>java/lang/Thread.run (2,696 samples, 6.91%)</title><rect x="632.8" y="307.0" width="81.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.8" y="318.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,696 samples, 6.91%)</title><rect x="632.8" y="291.0" width="81.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.8" y="302.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,696 samples, 6.91%)</title><rect x="632.8" y="275.0" width="81.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.8" y="286.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,693 samples, 6.90%)</title><rect x="632.9" y="259.0" width="81.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.9" y="270.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,693 samples, 6.90%)</title><rect x="632.9" y="243.0" width="81.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.9" y="254.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (111 samples, 0.28%)</title><rect x="632.9" y="227.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (111 samples, 0.28%)</title><rect x="632.9" y="211.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (111 samples, 0.28%)</title><rect x="632.9" y="195.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (111 samples, 0.28%)</title><rect x="632.9" y="179.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (111 samples, 0.28%)</title><rect x="632.9" y="163.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (111 samples, 0.28%)</title><rect x="632.9" y="147.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="635.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,582 samples, 6.62%)</title><rect x="636.3" y="227.0" width="78.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.3" y="238.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,582 samples, 6.62%)</title><rect x="636.3" y="211.0" width="78.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.3" y="222.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,582 samples, 6.62%)</title><rect x="636.3" y="195.0" width="78.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.3" y="206.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,582 samples, 6.62%)</title><rect x="636.3" y="179.0" width="78.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.3" y="190.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,582 samples, 6.62%)</title><rect x="636.3" y="163.0" width="78.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.3" y="174.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,582 samples, 6.62%)</title><rect x="636.3" y="147.0" width="78.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.3" y="158.0">jdk/inter..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,582 samples, 6.62%)</title><rect x="636.3" y="131.0" width="78.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="639.3" y="142.0">java.util..</text>
</g>
<g>
<title>[async_worker-2 tid=44753] (2,873 samples, 7.36%)</title><rect x="714.4" y="323.0" width="86.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="717.4" y="334.0">[async_wor..</text>
</g>
<g>
<title>java/lang/Thread.run (2,873 samples, 7.36%)</title><rect x="714.4" y="307.0" width="86.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.4" y="318.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,873 samples, 7.36%)</title><rect x="714.4" y="291.0" width="86.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.4" y="302.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,873 samples, 7.36%)</title><rect x="714.4" y="275.0" width="86.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.4" y="286.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,871 samples, 7.36%)</title><rect x="714.4" y="259.0" width="86.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.4" y="270.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,871 samples, 7.36%)</title><rect x="714.4" y="243.0" width="86.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.4" y="254.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (118 samples, 0.30%)</title><rect x="714.4" y="227.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (118 samples, 0.30%)</title><rect x="714.4" y="211.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (118 samples, 0.30%)</title><rect x="714.4" y="195.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (118 samples, 0.30%)</title><rect x="714.4" y="179.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (118 samples, 0.30%)</title><rect x="714.4" y="163.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.4" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (118 samples, 0.30%)</title><rect x="714.4" y="147.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="717.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,753 samples, 7.06%)</title><rect x="718.0" y="227.0" width="83.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.0" y="238.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,753 samples, 7.06%)</title><rect x="718.0" y="211.0" width="83.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.0" y="222.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,753 samples, 7.06%)</title><rect x="718.0" y="195.0" width="83.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.0" y="206.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,753 samples, 7.06%)</title><rect x="718.0" y="179.0" width="83.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.0" y="190.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,753 samples, 7.06%)</title><rect x="718.0" y="163.0" width="83.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.0" y="174.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,753 samples, 7.06%)</title><rect x="718.0" y="147.0" width="83.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.0" y="158.0">jdk/inter..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,753 samples, 7.06%)</title><rect x="718.0" y="131.0" width="83.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="721.0" y="142.0">java.util..</text>
</g>
<g>
<title>[async_worker-3 tid=44754] (2,403 samples, 6.16%)</title><rect x="801.3" y="323.0" width="72.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="804.3" y="334.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (2,403 samples, 6.16%)</title><rect x="801.3" y="307.0" width="72.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.3" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,403 samples, 6.16%)</title><rect x="801.3" y="291.0" width="72.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.3" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,403 samples, 6.16%)</title><rect x="801.3" y="275.0" width="72.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.3" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,402 samples, 6.16%)</title><rect x="801.3" y="259.0" width="72.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.3" y="270.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,402 samples, 6.16%)</title><rect x="801.3" y="243.0" width="72.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.3" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (106 samples, 0.27%)</title><rect x="801.3" y="227.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (106 samples, 0.27%)</title><rect x="801.3" y="211.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (106 samples, 0.27%)</title><rect x="801.3" y="195.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (106 samples, 0.27%)</title><rect x="801.3" y="179.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (106 samples, 0.27%)</title><rect x="801.3" y="163.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="804.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (106 samples, 0.27%)</title><rect x="801.3" y="147.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="804.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,296 samples, 5.89%)</title><rect x="804.5" y="227.0" width="69.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.5" y="238.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,296 samples, 5.89%)</title><rect x="804.5" y="211.0" width="69.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.5" y="222.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,296 samples, 5.89%)</title><rect x="804.5" y="195.0" width="69.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.5" y="206.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,296 samples, 5.89%)</title><rect x="804.5" y="179.0" width="69.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.5" y="190.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,296 samples, 5.89%)</title><rect x="804.5" y="163.0" width="69.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.5" y="174.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,296 samples, 5.89%)</title><rect x="804.5" y="147.0" width="69.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.5" y="158.0">jdk/int..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,296 samples, 5.89%)</title><rect x="804.5" y="131.0" width="69.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="807.5" y="142.0">java.ut..</text>
</g>
<g>
<title>[async_worker-4 tid=44752] (2,563 samples, 6.57%)</title><rect x="874.0" y="323.0" width="77.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="877.0" y="334.0">[async_wo..</text>
</g>
<g>
<title>java/lang/Thread.run (2,563 samples, 6.57%)</title><rect x="874.0" y="307.0" width="77.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.0" y="318.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,563 samples, 6.57%)</title><rect x="874.0" y="291.0" width="77.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.0" y="302.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,563 samples, 6.57%)</title><rect x="874.0" y="275.0" width="77.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.0" y="286.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,563 samples, 6.57%)</title><rect x="874.0" y="259.0" width="77.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.0" y="270.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,563 samples, 6.57%)</title><rect x="874.0" y="243.0" width="77.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.0" y="254.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (115 samples, 0.29%)</title><rect x="874.0" y="227.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (115 samples, 0.29%)</title><rect x="874.0" y="211.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (115 samples, 0.29%)</title><rect x="874.0" y="195.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (115 samples, 0.29%)</title><rect x="874.0" y="179.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (115 samples, 0.29%)</title><rect x="874.0" y="163.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.0" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (115 samples, 0.29%)</title><rect x="874.0" y="147.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="877.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,448 samples, 6.27%)</title><rect x="877.4" y="227.0" width="74.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="880.4" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,448 samples, 6.27%)</title><rect x="877.4" y="211.0" width="74.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.4" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,448 samples, 6.27%)</title><rect x="877.4" y="195.0" width="74.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.4" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,448 samples, 6.27%)</title><rect x="877.4" y="179.0" width="74.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.4" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,448 samples, 6.27%)</title><rect x="877.4" y="163.0" width="74.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="880.4" y="174.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,448 samples, 6.27%)</title><rect x="877.4" y="147.0" width="74.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.4" y="158.0">jdk/inte..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,448 samples, 6.27%)</title><rect x="877.4" y="131.0" width="74.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="880.4" y="142.0">java.uti..</text>
</g>
<g>
<title>[async_worker-5 tid=44751] (2,617 samples, 6.71%)</title><rect x="951.5" y="323.0" width="79.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="954.5" y="334.0">[async_wo..</text>
</g>
<g>
<title>java/lang/Thread.run (2,617 samples, 6.71%)</title><rect x="951.5" y="307.0" width="79.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.5" y="318.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,617 samples, 6.71%)</title><rect x="951.5" y="291.0" width="79.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.5" y="302.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,617 samples, 6.71%)</title><rect x="951.5" y="275.0" width="79.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.5" y="286.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,614 samples, 6.70%)</title><rect x="951.6" y="259.0" width="79.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.6" y="270.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,614 samples, 6.70%)</title><rect x="951.6" y="243.0" width="79.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.6" y="254.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (107 samples, 0.27%)</title><rect x="951.6" y="227.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (107 samples, 0.27%)</title><rect x="951.6" y="211.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (107 samples, 0.27%)</title><rect x="951.6" y="195.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (107 samples, 0.27%)</title><rect x="951.6" y="179.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="954.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (107 samples, 0.27%)</title><rect x="951.6" y="163.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (107 samples, 0.27%)</title><rect x="951.6" y="147.0" width="3.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="954.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,507 samples, 6.43%)</title><rect x="954.8" y="227.0" width="75.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.8" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,507 samples, 6.43%)</title><rect x="954.8" y="211.0" width="75.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.8" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,507 samples, 6.43%)</title><rect x="954.8" y="195.0" width="75.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.8" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,507 samples, 6.43%)</title><rect x="954.8" y="179.0" width="75.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.8" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,507 samples, 6.43%)</title><rect x="954.8" y="163.0" width="75.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.8" y="174.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,507 samples, 6.43%)</title><rect x="954.8" y="147.0" width="75.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.8" y="158.0">jdk/inte..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,507 samples, 6.43%)</title><rect x="954.8" y="131.0" width="75.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="957.8" y="142.0">java.uti..</text>
</g>
<g>
<title>[async_worker-6 tid=44756] (2,537 samples, 6.50%)</title><rect x="1030.6" y="323.0" width="76.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1033.6" y="334.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (2,537 samples, 6.50%)</title><rect x="1030.6" y="307.0" width="76.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.6" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,537 samples, 6.50%)</title><rect x="1030.6" y="291.0" width="76.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1033.6" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,537 samples, 6.50%)</title><rect x="1030.6" y="275.0" width="76.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.6" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,535 samples, 6.50%)</title><rect x="1030.7" y="259.0" width="76.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.7" y="270.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,535 samples, 6.50%)</title><rect x="1030.7" y="243.0" width="76.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.7" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (102 samples, 0.26%)</title><rect x="1030.7" y="227.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (102 samples, 0.26%)</title><rect x="1030.7" y="211.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (102 samples, 0.26%)</title><rect x="1030.7" y="195.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (102 samples, 0.26%)</title><rect x="1030.7" y="179.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (102 samples, 0.26%)</title><rect x="1030.7" y="163.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.7" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (102 samples, 0.26%)</title><rect x="1030.7" y="147.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1033.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,433 samples, 6.24%)</title><rect x="1033.8" y="227.0" width="73.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1036.8" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,433 samples, 6.24%)</title><rect x="1033.8" y="211.0" width="73.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1036.8" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,433 samples, 6.24%)</title><rect x="1033.8" y="195.0" width="73.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.8" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,433 samples, 6.24%)</title><rect x="1033.8" y="179.0" width="73.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1036.8" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,433 samples, 6.24%)</title><rect x="1033.8" y="163.0" width="73.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.8" y="174.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,433 samples, 6.24%)</title><rect x="1033.8" y="147.0" width="73.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1036.8" y="158.0">jdk/inte..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,433 samples, 6.24%)</title><rect x="1033.8" y="131.0" width="73.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1036.8" y="142.0">java.uti..</text>
</g>
<g>
<title>[async_worker-7 tid=44757] (2,732 samples, 7.00%)</title><rect x="1107.4" y="323.0" width="82.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1110.4" y="334.0">[async_wo..</text>
</g>
<g>
<title>java/lang/Thread.run (2,732 samples, 7.00%)</title><rect x="1107.4" y="307.0" width="82.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1110.4" y="318.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,732 samples, 7.00%)</title><rect x="1107.4" y="291.0" width="82.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1110.4" y="302.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,732 samples, 7.00%)</title><rect x="1107.4" y="275.0" width="82.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.4" y="286.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,730 samples, 7.00%)</title><rect x="1107.4" y="259.0" width="82.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.4" y="270.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,730 samples, 7.00%)</title><rect x="1107.4" y="243.0" width="82.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.4" y="254.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (112 samples, 0.29%)</title><rect x="1107.4" y="227.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (112 samples, 0.29%)</title><rect x="1107.4" y="211.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1110.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (112 samples, 0.29%)</title><rect x="1107.4" y="195.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (112 samples, 0.29%)</title><rect x="1107.4" y="179.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (112 samples, 0.29%)</title><rect x="1107.4" y="163.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.4" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (112 samples, 0.29%)</title><rect x="1107.4" y="147.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1110.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,618 samples, 6.71%)</title><rect x="1110.8" y="227.0" width="79.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1113.8" y="238.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,618 samples, 6.71%)</title><rect x="1110.8" y="211.0" width="79.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.8" y="222.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,618 samples, 6.71%)</title><rect x="1110.8" y="195.0" width="79.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.8" y="206.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,618 samples, 6.71%)</title><rect x="1110.8" y="179.0" width="79.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.8" y="190.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,618 samples, 6.71%)</title><rect x="1110.8" y="163.0" width="79.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.8" y="174.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,618 samples, 6.71%)</title><rect x="1110.8" y="147.0" width="79.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.8" y="158.0">jdk/inter..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,618 samples, 6.71%)</title><rect x="1110.8" y="131.0" width="79.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1113.8" y="142.0">java.util..</text>
</g>
</g>
</svg>
