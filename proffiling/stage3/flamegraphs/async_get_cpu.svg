<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (2,390 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=44734] (87 samples, 3.64%)</title><rect x="10.0" y="947.0" width="43.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="958.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (87 samples, 3.64%)</title><rect x="10.0" y="931.0" width="43.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="942.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.08%)</title><rect x="10.5" y="915.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.08%)</title><rect x="10.5" y="899.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.08%)</title><rect x="10.5" y="883.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 1.30%)</title><rect x="11.5" y="915.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (31 samples, 1.30%)</title><rect x="11.5" y="899.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.5" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="12.0" y="883.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="15.0" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="12.0" y="867.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="15.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="12.0" y="851.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="15.0" y="862.0"></text>
</g>
<g>
<title>epoll_wait (29 samples, 1.21%)</title><rect x="12.5" y="883.0" width="14.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="15.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 1.21%)</title><rect x="12.5" y="867.0" width="14.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="15.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 1.21%)</title><rect x="12.5" y="851.0" width="14.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="15.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (28 samples, 1.17%)</title><rect x="13.0" y="835.0" width="13.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="16.0" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (28 samples, 1.17%)</title><rect x="13.0" y="819.0" width="13.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="16.0" y="830.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.13%)</title><rect x="13.5" y="803.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.5" y="814.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.13%)</title><rect x="13.5" y="787.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.5" y="798.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.13%)</title><rect x="13.5" y="771.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="16.5" y="782.0"></text>
</g>
<g>
<title>ep_poll (23 samples, 0.96%)</title><rect x="14.9" y="803.0" width="11.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.9" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.42%)</title><rect x="14.9" y="787.0" width="5.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="17.9" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.38%)</title><rect x="15.4" y="771.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.4" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.29%)</title><rect x="15.9" y="755.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.29%)</title><rect x="15.9" y="739.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="18.9" y="750.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.08%)</title><rect x="17.9" y="723.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="20.9" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="18.9" y="723.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="21.9" y="734.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="19.4" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="22.4" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="19.9" y="787.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="22.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.50%)</title><rect x="20.4" y="787.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="23.4" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.50%)</title><rect x="20.4" y="771.0" width="5.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="23.4" y="782.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.50%)</title><rect x="20.4" y="755.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.4" y="766.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.50%)</title><rect x="20.4" y="739.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="23.4" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.46%)</title><rect x="20.9" y="723.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="23.9" y="734.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="26.3" y="803.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="29.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (52 samples, 2.18%)</title><rect x="26.8" y="915.0" width="25.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.8" y="926.0">o..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="26.8" y="899.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="29.8" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="26.8" y="883.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="29.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (51 samples, 2.13%)</title><rect x="27.3" y="899.0" width="25.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.3" y="910.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24 samples, 1.00%)</title><rect x="27.3" y="883.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (19 samples, 0.79%)</title><rect x="28.3" y="867.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (19 samples, 0.79%)</title><rect x="28.3" y="851.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.3" y="862.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (18 samples, 0.75%)</title><rect x="28.3" y="835.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.13%)</title><rect x="28.3" y="819.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="28.8" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="28.8" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.8" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="29.3" y="803.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="32.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (15 samples, 0.63%)</title><rect x="29.7" y="819.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (15 samples, 0.63%)</title><rect x="29.7" y="803.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.63%)</title><rect x="29.7" y="787.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 0.63%)</title><rect x="29.7" y="771.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.21%)</title><rect x="29.7" y="755.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.21%)</title><rect x="29.7" y="739.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.21%)</title><rect x="29.7" y="723.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.21%)</title><rect x="29.7" y="707.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="29.7" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="29.7" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.17%)</title><rect x="30.2" y="691.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.13%)</title><rect x="30.7" y="675.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.13%)</title><rect x="30.7" y="659.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="33.7" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.13%)</title><rect x="30.7" y="643.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="33.7" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="31.2" y="627.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="34.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="31.2" y="611.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.2" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="31.2" y="595.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="34.2" y="606.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="31.2" y="579.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.2" y="590.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.08%)</title><rect x="31.2" y="563.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="34.2" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.08%)</title><rect x="31.2" y="547.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="34.2" y="558.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.08%)</title><rect x="31.2" y="531.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.2" y="542.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.08%)</title><rect x="31.2" y="515.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="34.2" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.08%)</title><rect x="31.2" y="499.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.42%)</title><rect x="32.2" y="755.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.42%)</title><rect x="32.2" y="739.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.42%)</title><rect x="32.2" y="723.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.38%)</title><rect x="32.7" y="707.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.38%)</title><rect x="32.7" y="691.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.38%)</title><rect x="32.7" y="675.0" width="4.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="35.7" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.38%)</title><rect x="32.7" y="659.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="35.7" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.38%)</title><rect x="32.7" y="643.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.7" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.38%)</title><rect x="32.7" y="627.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.7" y="638.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.38%)</title><rect x="32.7" y="611.0" width="4.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.7" y="622.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.38%)</title><rect x="32.7" y="595.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.7" y="606.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.38%)</title><rect x="32.7" y="579.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="35.7" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.38%)</title><rect x="32.7" y="563.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.7" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.38%)</title><rect x="32.7" y="547.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="37.2" y="835.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="37.2" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="37.2" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.08%)</title><rect x="37.6" y="867.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="38.1" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="38.6" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (27 samples, 1.13%)</title><rect x="39.1" y="883.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (27 samples, 1.13%)</title><rect x="39.1" y="867.0" width="13.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.25%)</title><rect x="39.1" y="851.0" width="3.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="42.1" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="39.1" y="835.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="42.1" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.21%)</title><rect x="39.6" y="835.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="42.6" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.13%)</title><rect x="40.6" y="819.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="43.6" y="830.0"></text>
</g>
<g>
<title>__recv (21 samples, 0.88%)</title><rect x="42.1" y="851.0" width="10.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="45.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.79%)</title><rect x="43.1" y="835.0" width="9.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.79%)</title><rect x="43.1" y="819.0" width="9.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="46.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (19 samples, 0.79%)</title><rect x="43.1" y="803.0" width="9.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.1" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (19 samples, 0.79%)</title><rect x="43.1" y="787.0" width="9.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="46.1" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.75%)</title><rect x="43.1" y="771.0" width="8.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="46.1" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="43.1" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="46.1" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (17 samples, 0.71%)</title><rect x="43.6" y="755.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="46.6" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (17 samples, 0.71%)</title><rect x="43.6" y="739.0" width="8.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.6" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="47.0" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.0" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="47.0" y="707.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="50.0" y="718.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="47.0" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.0" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="47.5" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="50.5" y="734.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.08%)</title><rect x="48.0" y="723.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="51.0" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="48.0" y="707.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.0" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="48.5" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.5" y="718.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="48.5" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="51.5" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="49.0" y="723.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="52.0" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.04%)</title><rect x="49.0" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="52.0" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="49.0" y="691.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="52.0" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="49.0" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="52.0" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.08%)</title><rect x="49.5" y="723.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="52.5" y="734.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="50.0" y="707.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="53.0" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.08%)</title><rect x="50.5" y="723.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="53.5" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.08%)</title><rect x="50.5" y="707.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="53.5" y="718.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="50.5" y="691.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="53.5" y="702.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.08%)</title><rect x="50.5" y="675.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="53.5" y="686.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.08%)</title><rect x="50.5" y="659.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="53.5" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="51.5" y="723.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="54.5" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="52.0" y="771.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="55.0" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="52.0" y="755.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="55.0" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="52.0" y="739.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="55.0" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="52.0" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="55.0" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="52.5" y="915.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="55.5" y="926.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=44735] (81 samples, 3.39%)</title><rect x="53.0" y="947.0" width="39.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="56.0" y="958.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (81 samples, 3.39%)</title><rect x="53.0" y="931.0" width="39.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.0" y="942.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (34 samples, 1.42%)</title><rect x="53.0" y="915.0" width="16.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.04%)</title><rect x="53.0" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="53.0" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (33 samples, 1.38%)</title><rect x="53.4" y="899.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.4" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.08%)</title><rect x="54.4" y="883.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="57.4" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.08%)</title><rect x="55.4" y="883.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="58.4" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="55.9" y="867.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="58.9" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="55.9" y="851.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="58.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (27 samples, 1.13%)</title><rect x="56.4" y="883.0" width="13.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="59.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 1.05%)</title><rect x="57.4" y="867.0" width="12.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="60.4" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="57.4" y="851.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.4" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 1.00%)</title><rect x="57.9" y="851.0" width="11.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.9" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (22 samples, 0.92%)</title><rect x="58.9" y="835.0" width="10.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="61.9" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (22 samples, 0.92%)</title><rect x="58.9" y="819.0" width="10.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="61.9" y="830.0"></text>
</g>
<g>
<title>ep_poll (22 samples, 0.92%)</title><rect x="58.9" y="803.0" width="10.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="61.9" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.25%)</title><rect x="58.9" y="787.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.9" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.17%)</title><rect x="58.9" y="771.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.9" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.17%)</title><rect x="58.9" y="755.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="61.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.17%)</title><rect x="58.9" y="739.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="61.9" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="60.4" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="63.4" y="734.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.08%)</title><rect x="60.9" y="771.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="63.9" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="61.8" y="787.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.8" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (15 samples, 0.63%)</title><rect x="62.3" y="787.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (15 samples, 0.63%)</title><rect x="62.3" y="771.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="65.3" y="782.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.63%)</title><rect x="62.3" y="755.0" width="7.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="65.3" y="766.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.63%)</title><rect x="62.3" y="739.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="65.3" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.63%)</title><rect x="62.3" y="723.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="65.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (47 samples, 1.97%)</title><rect x="69.7" y="915.0" width="23.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.7" y="926.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (44 samples, 1.84%)</title><rect x="70.7" y="899.0" width="21.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.7" y="910.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (25 samples, 1.05%)</title><rect x="70.7" y="883.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 0.75%)</title><rect x="72.7" y="867.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 0.75%)</title><rect x="72.7" y="851.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.7" y="862.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (17 samples, 0.71%)</title><rect x="72.7" y="835.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.13%)</title><rect x="72.7" y="819.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="73.7" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="73.7" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="73.7" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="73.7" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (14 samples, 0.59%)</title><rect x="74.2" y="819.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="74.2" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="74.2" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (1 samples, 0.04%)</title><rect x="74.2" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (13 samples, 0.54%)</title><rect x="74.7" y="803.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.54%)</title><rect x="74.7" y="787.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (11 samples, 0.46%)</title><rect x="75.7" y="771.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.08%)</title><rect x="75.7" y="755.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.08%)</title><rect x="75.7" y="739.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.08%)</title><rect x="75.7" y="723.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="76.2" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="76.2" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="76.2" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="76.2" y="659.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="79.2" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="76.2" y="643.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="79.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="76.2" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="76.2" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="79.2" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="76.2" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="79.2" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="76.2" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="79.2" y="590.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="76.2" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.2" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="76.2" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="79.2" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="76.2" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.2" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="76.2" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="79.2" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="76.2" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="79.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.38%)</title><rect x="76.7" y="755.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.38%)</title><rect x="76.7" y="739.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.38%)</title><rect x="76.7" y="723.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.29%)</title><rect x="77.6" y="707.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.29%)</title><rect x="77.6" y="691.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.6" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.29%)</title><rect x="77.6" y="675.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="80.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.29%)</title><rect x="77.6" y="659.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="80.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.29%)</title><rect x="77.6" y="643.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="80.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.29%)</title><rect x="77.6" y="627.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.6" y="638.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.29%)</title><rect x="77.6" y="611.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="80.6" y="622.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.29%)</title><rect x="77.6" y="595.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="80.6" y="606.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.29%)</title><rect x="77.6" y="579.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.6" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.29%)</title><rect x="77.6" y="563.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="80.6" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.29%)</title><rect x="77.6" y="547.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="80.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="81.1" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="81.1" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="81.1" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.13%)</title><rect x="81.6" y="867.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="82.1" y="851.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="82.1" y="835.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (19 samples, 0.79%)</title><rect x="83.1" y="883.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 0.79%)</title><rect x="83.1" y="867.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.17%)</title><rect x="83.6" y="851.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="86.6" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="83.6" y="835.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="86.6" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="84.1" y="835.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="87.1" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="84.6" y="835.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="87.6" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="85.0" y="819.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="88.0" y="830.0"></text>
</g>
<g>
<title>__recv (13 samples, 0.54%)</title><rect x="85.5" y="851.0" width="6.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="88.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.50%)</title><rect x="86.0" y="835.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.50%)</title><rect x="86.0" y="819.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="89.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (12 samples, 0.50%)</title><rect x="86.0" y="803.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="89.0" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (12 samples, 0.50%)</title><rect x="86.0" y="787.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="89.0" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (11 samples, 0.46%)</title><rect x="86.0" y="771.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="89.0" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.46%)</title><rect x="86.0" y="755.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="89.0" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="86.0" y="739.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="89.0" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.42%)</title><rect x="86.5" y="739.0" width="5.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.5" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="86.5" y="723.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="89.5" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="86.5" y="707.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="89.5" y="718.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="86.5" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="89.5" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="87.0" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.0" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.08%)</title><rect x="87.5" y="723.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.5" y="734.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="87.5" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="90.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="88.0" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.0" y="718.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="88.0" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.0" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="88.5" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="91.5" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="88.5" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.5" y="718.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="88.5" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.5" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.13%)</title><rect x="89.0" y="723.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.0" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.13%)</title><rect x="89.0" y="707.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.0" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.08%)</title><rect x="89.5" y="691.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="92.5" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="89.5" y="675.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.5" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="90.0" y="675.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="93.0" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="90.0" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="93.0" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="90.5" y="723.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="93.5" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="90.5" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="93.5" y="718.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="90.5" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.5" y="702.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="90.5" y="675.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="93.5" y="686.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="90.5" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="93.5" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="91.0" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.0" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="91.5" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.5" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="91.5" y="755.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="94.5" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="91.5" y="739.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.5" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="91.5" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="94.5" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="92.0" y="851.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="95.0" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="92.5" y="899.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="95.5" y="910.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="92.5" y="883.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="95.5" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="92.5" y="867.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="95.5" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=44736] (67 samples, 2.80%)</title><rect x="92.9" y="947.0" width="33.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="95.9" y="958.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (67 samples, 2.80%)</title><rect x="92.9" y="931.0" width="33.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.9" y="942.0">on..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="92.9" y="915.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="95.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 0.96%)</title><rect x="93.4" y="915.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (23 samples, 0.96%)</title><rect x="93.4" y="899.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.4" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="93.4" y="883.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="96.4" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.08%)</title><rect x="93.9" y="883.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="96.9" y="894.0"></text>
</g>
<g>
<title>epoll_wait (20 samples, 0.84%)</title><rect x="94.9" y="883.0" width="9.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="97.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.79%)</title><rect x="95.4" y="867.0" width="9.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="98.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.79%)</title><rect x="95.4" y="851.0" width="9.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (19 samples, 0.79%)</title><rect x="95.4" y="835.0" width="9.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.4" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (19 samples, 0.79%)</title><rect x="95.4" y="819.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="98.4" y="830.0"></text>
</g>
<g>
<title>ep_poll (18 samples, 0.75%)</title><rect x="95.4" y="803.0" width="8.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.4" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.21%)</title><rect x="95.9" y="787.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="98.9" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.17%)</title><rect x="96.4" y="771.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.4" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.08%)</title><rect x="97.4" y="755.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="100.4" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="97.4" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="100.4" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="97.9" y="739.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="100.9" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.50%)</title><rect x="98.4" y="787.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.4" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.50%)</title><rect x="98.4" y="771.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="101.4" y="782.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.50%)</title><rect x="98.4" y="755.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="101.4" y="766.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.50%)</title><rect x="98.4" y="739.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="101.4" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.50%)</title><rect x="98.4" y="723.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="101.4" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="103.8" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="106.8" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="103.8" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="106.8" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="103.8" y="675.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="106.8" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="103.8" y="659.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.8" y="670.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="104.3" y="803.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="107.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (43 samples, 1.80%)</title><rect x="104.8" y="915.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.8" y="926.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (42 samples, 1.76%)</title><rect x="105.3" y="899.0" width="20.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 0.67%)</title><rect x="105.3" y="883.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9 samples, 0.38%)</title><rect x="106.3" y="867.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9 samples, 0.38%)</title><rect x="106.3" y="851.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.3" y="862.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (9 samples, 0.38%)</title><rect x="106.3" y="835.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="106.3" y="819.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (7 samples, 0.29%)</title><rect x="107.3" y="819.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (7 samples, 0.29%)</title><rect x="107.3" y="803.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.29%)</title><rect x="107.3" y="787.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.17%)</title><rect x="108.7" y="771.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.17%)</title><rect x="108.7" y="755.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.17%)</title><rect x="108.7" y="739.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.17%)</title><rect x="108.7" y="723.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.13%)</title><rect x="109.2" y="707.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.13%)</title><rect x="109.2" y="691.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.2" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="109.2" y="675.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="112.2" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="109.2" y="659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="112.2" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.08%)</title><rect x="109.7" y="675.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="112.7" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="109.7" y="659.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="112.7" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="109.7" y="643.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.7" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="109.7" y="627.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="112.7" y="638.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="109.7" y="611.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.7" y="622.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.08%)</title><rect x="109.7" y="595.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="112.7" y="606.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.08%)</title><rect x="109.7" y="579.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.7" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.08%)</title><rect x="109.7" y="563.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.7" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="109.7" y="547.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="112.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.08%)</title><rect x="110.7" y="867.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="110.7" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="110.7" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="111.2" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="111.7" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="112.2" y="867.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="112.2" y="851.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (26 samples, 1.09%)</title><rect x="113.2" y="883.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 0.96%)</title><rect x="113.2" y="867.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.2" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.17%)</title><rect x="113.7" y="851.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="116.7" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="113.7" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="116.7" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="114.2" y="835.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="117.2" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="115.2" y="835.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="118.2" y="846.0"></text>
</g>
<g>
<title>__recv (18 samples, 0.75%)</title><rect x="115.7" y="851.0" width="8.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="118.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.67%)</title><rect x="116.6" y="835.0" width="7.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="119.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.67%)</title><rect x="116.6" y="819.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.6" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.63%)</title><rect x="117.1" y="803.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="120.1" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (14 samples, 0.59%)</title><rect x="117.1" y="787.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="120.1" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.59%)</title><rect x="117.1" y="771.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="120.1" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 0.54%)</title><rect x="117.1" y="755.0" width="6.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="120.1" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.54%)</title><rect x="117.1" y="739.0" width="6.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="120.1" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.25%)</title><rect x="117.1" y="723.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="120.1" y="734.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="117.1" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="120.1" y="718.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.21%)</title><rect x="117.6" y="707.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="120.6" y="718.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="117.6" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="120.6" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.13%)</title><rect x="118.1" y="691.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="121.1" y="702.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.13%)</title><rect x="118.1" y="675.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.1" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="119.6" y="691.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="122.6" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.17%)</title><rect x="120.1" y="723.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="123.1" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.17%)</title><rect x="120.1" y="707.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="123.1" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.08%)</title><rect x="121.1" y="691.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="124.1" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="121.1" y="675.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="124.1" y="686.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="121.6" y="675.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="124.6" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.08%)</title><rect x="122.1" y="723.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="125.1" y="734.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="122.6" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="125.6" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="123.1" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="126.1" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="123.6" y="755.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="126.6" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="123.6" y="739.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="126.6" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="123.6" y="723.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="126.6" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="124.1" y="787.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="127.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.13%)</title><rect x="124.5" y="867.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.5" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=44737] (72 samples, 3.01%)</title><rect x="126.0" y="947.0" width="35.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="129.0" y="958.0">[NI..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.04%)</title><rect x="126.0" y="931.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="129.0" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="126.0" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="129.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.04%)</title><rect x="126.0" y="899.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="129.0" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="126.0" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="129.0" y="894.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.04%)</title><rect x="126.0" y="867.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="129.0" y="878.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="126.0" y="851.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="129.0" y="862.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (71 samples, 2.97%)</title><rect x="126.5" y="931.0" width="35.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.5" y="942.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 0.96%)</title><rect x="127.0" y="915.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (23 samples, 0.96%)</title><rect x="127.0" y="899.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.0" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="127.5" y="883.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="130.5" y="894.0"></text>
</g>
<g>
<title>epoll_wait (21 samples, 0.88%)</title><rect x="128.0" y="883.0" width="10.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="131.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.84%)</title><rect x="128.5" y="867.0" width="9.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="131.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.84%)</title><rect x="128.5" y="851.0" width="9.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="131.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (19 samples, 0.79%)</title><rect x="129.0" y="835.0" width="9.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="132.0" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (19 samples, 0.79%)</title><rect x="129.0" y="819.0" width="9.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="132.0" y="830.0"></text>
</g>
<g>
<title>ep_poll (18 samples, 0.75%)</title><rect x="129.5" y="803.0" width="8.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="132.5" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.13%)</title><rect x="130.0" y="787.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="133.0" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.08%)</title><rect x="130.5" y="771.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="133.5" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.04%)</title><rect x="131.0" y="755.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.0" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="131.0" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="134.0" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (14 samples, 0.59%)</title><rect x="131.5" y="787.0" width="6.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="134.5" y="798.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="131.5" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="134.5" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (13 samples, 0.54%)</title><rect x="131.9" y="771.0" width="6.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.9" y="782.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.54%)</title><rect x="131.9" y="755.0" width="6.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="134.9" y="766.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.54%)</title><rect x="131.9" y="739.0" width="6.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="134.9" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.54%)</title><rect x="131.9" y="723.0" width="6.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="134.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (45 samples, 1.88%)</title><rect x="138.4" y="915.0" width="22.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.4" y="926.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (45 samples, 1.88%)</title><rect x="138.4" y="899.0" width="22.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.4" y="910.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27 samples, 1.13%)</title><rect x="138.4" y="883.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="141.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 0.50%)</title><rect x="139.8" y="867.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 0.50%)</title><rect x="139.8" y="851.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.8" y="862.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (10 samples, 0.42%)</title><rect x="139.8" y="835.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="139.8" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="139.8" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="139.8" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="139.8" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (9 samples, 0.38%)</title><rect x="140.3" y="819.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (9 samples, 0.38%)</title><rect x="140.3" y="803.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.38%)</title><rect x="140.3" y="787.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.25%)</title><rect x="141.8" y="771.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="141.8" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="141.8" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="141.8" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="141.8" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="141.8" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="141.8" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="141.8" y="659.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="144.8" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="141.8" y="643.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="144.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="141.8" y="627.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="144.8" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="141.8" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.8" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="141.8" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="144.8" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="141.8" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.8" y="590.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="141.8" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.8" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="141.8" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.8" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="141.8" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.8" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="141.8" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="144.8" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="141.8" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="144.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.21%)</title><rect x="142.3" y="755.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.21%)</title><rect x="142.3" y="739.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.21%)</title><rect x="142.3" y="723.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.21%)</title><rect x="142.3" y="707.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.21%)</title><rect x="142.3" y="691.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.3" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="142.3" y="675.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="145.3" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="142.3" y="659.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="145.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.17%)</title><rect x="142.8" y="675.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="145.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.17%)</title><rect x="142.8" y="659.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="145.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.17%)</title><rect x="142.8" y="643.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="145.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.17%)</title><rect x="142.8" y="627.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="145.8" y="638.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.17%)</title><rect x="142.8" y="611.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="145.8" y="622.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.17%)</title><rect x="142.8" y="595.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="145.8" y="606.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="142.8" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="145.8" y="590.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.13%)</title><rect x="143.3" y="579.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="146.3" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.13%)</title><rect x="143.3" y="563.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="146.3" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.13%)</title><rect x="143.3" y="547.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="146.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.08%)</title><rect x="144.8" y="835.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.08%)</title><rect x="144.8" y="819.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.08%)</title><rect x="144.8" y="803.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.25%)</title><rect x="145.8" y="867.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="145.8" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.8" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="145.8" y="835.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="148.8" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.04%)</title><rect x="145.8" y="819.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="148.8" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="145.8" y="803.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="148.8" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="145.8" y="787.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="148.8" y="798.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="145.8" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="148.8" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="145.8" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="148.8" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="145.8" y="739.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="148.8" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="145.8" y="723.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="148.8" y="734.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.04%)</title><rect x="145.8" y="707.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="148.8" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.04%)</title><rect x="145.8" y="691.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="148.8" y="702.0"></text>
</g>
<g>
<title>G1Policy::should_allocate_mutator_region() const (1 samples, 0.04%)</title><rect x="145.8" y="675.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="148.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.17%)</title><rect x="146.3" y="851.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.17%)</title><rect x="146.3" y="835.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="148.2" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.17%)</title><rect x="148.7" y="867.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="150.7" y="867.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="151.2" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 0.75%)</title><rect x="151.7" y="883.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.75%)</title><rect x="151.7" y="867.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.7" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.08%)</title><rect x="151.7" y="851.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="154.7" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="151.7" y="835.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="154.7" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="152.2" y="835.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="155.2" y="846.0"></text>
</g>
<g>
<title>__recv (16 samples, 0.67%)</title><rect x="152.7" y="851.0" width="7.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="155.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.67%)</title><rect x="152.7" y="835.0" width="7.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.67%)</title><rect x="152.7" y="819.0" width="7.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="155.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.67%)</title><rect x="152.7" y="803.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.7" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 0.67%)</title><rect x="152.7" y="787.0" width="7.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="155.7" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.63%)</title><rect x="152.7" y="771.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="155.7" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.46%)</title><rect x="153.2" y="755.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="156.2" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.46%)</title><rect x="153.2" y="739.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="156.2" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="154.7" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="157.7" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="154.7" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="157.7" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="154.7" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.7" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="154.7" y="675.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="157.7" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="155.2" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="158.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="155.2" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="158.2" y="718.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="155.2" y="691.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="158.2" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.25%)</title><rect x="155.6" y="723.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="158.6" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.25%)</title><rect x="155.6" y="707.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="158.6" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.17%)</title><rect x="156.6" y="691.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="159.6" y="702.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.17%)</title><rect x="156.6" y="675.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="159.6" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.13%)</title><rect x="158.6" y="755.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="161.6" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.08%)</title><rect x="159.1" y="739.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="162.1" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.08%)</title><rect x="159.1" y="723.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="162.1" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="160.1" y="771.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="163.1" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="160.1" y="755.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="163.1" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="160.6" y="915.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="163.6" y="926.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="161.1" y="899.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="164.1" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="161.1" y="883.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="164.1" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=44738] (78 samples, 3.26%)</title><rect x="161.6" y="947.0" width="38.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="164.6" y="958.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (78 samples, 3.26%)</title><rect x="161.6" y="931.0" width="38.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.6" y="942.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 0.96%)</title><rect x="161.6" y="915.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (23 samples, 0.96%)</title><rect x="161.6" y="899.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.6" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="162.1" y="883.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="165.1" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="162.6" y="883.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="165.6" y="894.0"></text>
</g>
<g>
<title>epoll_wait (20 samples, 0.84%)</title><rect x="163.1" y="883.0" width="9.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="166.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.84%)</title><rect x="163.1" y="867.0" width="9.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="166.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.84%)</title><rect x="163.1" y="851.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="166.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (19 samples, 0.79%)</title><rect x="163.5" y="835.0" width="9.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="166.5" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (19 samples, 0.79%)</title><rect x="163.5" y="819.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="166.5" y="830.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="163.5" y="803.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="166.5" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="163.5" y="787.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="166.5" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="163.5" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="166.5" y="782.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 0.71%)</title><rect x="164.0" y="803.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="167.0" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.13%)</title><rect x="164.5" y="787.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="167.5" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.08%)</title><rect x="165.0" y="771.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="168.0" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.08%)</title><rect x="165.0" y="755.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="168.0" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="165.5" y="739.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="168.5" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="166.0" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="169.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.50%)</title><rect x="166.5" y="787.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="169.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.50%)</title><rect x="166.5" y="771.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="169.5" y="782.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.50%)</title><rect x="166.5" y="755.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="169.5" y="766.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.50%)</title><rect x="166.5" y="739.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="169.5" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.50%)</title><rect x="166.5" y="723.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="169.5" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="172.4" y="803.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="175.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (54 samples, 2.26%)</title><rect x="172.9" y="915.0" width="26.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.9" y="926.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (52 samples, 2.18%)</title><rect x="173.9" y="899.0" width="25.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.9" y="910.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 0.88%)</title><rect x="173.9" y="883.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14 samples, 0.59%)</title><rect x="173.9" y="867.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14 samples, 0.59%)</title><rect x="173.9" y="851.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.9" y="862.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (11 samples, 0.46%)</title><rect x="173.9" y="835.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.17%)</title><rect x="173.9" y="819.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.9" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="175.4" y="803.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="178.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (7 samples, 0.29%)</title><rect x="175.9" y="819.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (7 samples, 0.29%)</title><rect x="175.9" y="803.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.29%)</title><rect x="175.9" y="787.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.25%)</title><rect x="176.4" y="771.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.25%)</title><rect x="176.4" y="755.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.25%)</title><rect x="176.4" y="739.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.25%)</title><rect x="176.4" y="723.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.21%)</title><rect x="176.9" y="707.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.21%)</title><rect x="176.9" y="691.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.9" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="176.9" y="675.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="179.9" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="177.4" y="659.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="180.4" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.13%)</title><rect x="177.9" y="675.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="180.9" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="177.9" y="659.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="177.9" y="643.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="180.9" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.13%)</title><rect x="177.9" y="627.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="180.9" y="638.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.13%)</title><rect x="177.9" y="611.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="180.9" y="622.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.13%)</title><rect x="177.9" y="595.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="180.9" y="606.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.13%)</title><rect x="177.9" y="579.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="180.9" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.13%)</title><rect x="177.9" y="563.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="180.9" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.13%)</title><rect x="177.9" y="547.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="180.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.13%)</title><rect x="179.3" y="835.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.13%)</title><rect x="179.3" y="819.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.13%)</title><rect x="179.3" y="803.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.3" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="180.3" y="787.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="183.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.29%)</title><rect x="180.8" y="867.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.08%)</title><rect x="181.3" y="851.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="181.3" y="835.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="181.3" y="819.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.08%)</title><rect x="181.3" y="803.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="182.3" y="851.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="182.3" y="835.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="183.8" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (31 samples, 1.30%)</title><rect x="184.3" y="883.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (25 samples, 1.05%)</title><rect x="184.8" y="867.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.8" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.25%)</title><rect x="185.8" y="851.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="188.8" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.21%)</title><rect x="186.3" y="835.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="189.3" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="188.2" y="819.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="191.2" y="830.0"></text>
</g>
<g>
<title>__recv (17 samples, 0.71%)</title><rect x="188.7" y="851.0" width="8.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="191.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.67%)</title><rect x="189.2" y="835.0" width="7.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="192.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.67%)</title><rect x="189.2" y="819.0" width="7.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="192.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.67%)</title><rect x="189.2" y="803.0" width="7.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.2" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.63%)</title><rect x="189.2" y="787.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.2" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.59%)</title><rect x="189.2" y="771.0" width="6.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="192.2" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 0.54%)</title><rect x="189.2" y="755.0" width="6.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="192.2" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="189.2" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="192.2" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.50%)</title><rect x="189.7" y="739.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="192.7" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.08%)</title><rect x="191.2" y="723.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="194.2" y="734.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="191.2" y="707.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="194.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="191.7" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="194.7" y="718.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="191.7" y="691.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="194.7" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.17%)</title><rect x="192.2" y="723.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="195.2" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.17%)</title><rect x="192.2" y="707.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="195.2" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.13%)</title><rect x="192.7" y="691.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="195.7" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="192.7" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="195.7" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.08%)</title><rect x="193.2" y="675.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.2" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.08%)</title><rect x="193.2" y="659.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="196.2" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.08%)</title><rect x="194.2" y="723.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="197.2" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.08%)</title><rect x="194.2" y="707.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="197.2" y="718.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="194.7" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="197.7" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="195.1" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="198.1" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="195.6" y="755.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="198.6" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="195.6" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="198.6" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="195.6" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="198.6" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="196.1" y="771.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="199.1" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="196.1" y="755.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="199.1" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="196.1" y="739.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="199.1" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="196.1" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="199.1" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="196.6" y="787.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="199.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (5 samples, 0.21%)</title><rect x="197.1" y="867.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.1" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="199.6" y="915.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="202.6" y="926.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=44739] (77 samples, 3.22%)</title><rect x="200.1" y="947.0" width="38.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="203.1" y="958.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 3.22%)</title><rect x="200.1" y="931.0" width="38.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.1" y="942.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 1.51%)</title><rect x="200.1" y="915.0" width="17.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (36 samples, 1.51%)</title><rect x="200.1" y="899.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.1" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="200.1" y="883.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="203.1" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.08%)</title><rect x="200.6" y="883.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="203.6" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.08%)</title><rect x="201.6" y="883.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="204.6" y="894.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 1.30%)</title><rect x="202.6" y="883.0" width="15.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="205.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 1.17%)</title><rect x="204.0" y="867.0" width="13.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="207.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 1.17%)</title><rect x="204.0" y="851.0" width="13.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="207.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (26 samples, 1.09%)</title><rect x="205.0" y="835.0" width="12.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="208.0" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (26 samples, 1.09%)</title><rect x="205.0" y="819.0" width="12.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="208.0" y="830.0"></text>
</g>
<g>
<title>ep_poll (25 samples, 1.05%)</title><rect x="205.5" y="803.0" width="12.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="208.5" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.42%)</title><rect x="206.0" y="787.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="209.0" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.29%)</title><rect x="207.5" y="771.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="210.5" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.29%)</title><rect x="207.5" y="755.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="210.5" y="766.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.25%)</title><rect x="208.0" y="739.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="211.0" y="750.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.08%)</title><rect x="209.5" y="723.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.5" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="210.5" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="213.5" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (14 samples, 0.59%)</title><rect x="210.9" y="787.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="213.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (14 samples, 0.59%)</title><rect x="210.9" y="771.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="213.9" y="782.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.59%)</title><rect x="210.9" y="755.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="213.9" y="766.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.59%)</title><rect x="210.9" y="739.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="213.9" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.50%)</title><rect x="211.9" y="723.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (41 samples, 1.72%)</title><rect x="217.9" y="915.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (40 samples, 1.67%)</title><rect x="218.4" y="899.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 0.79%)</title><rect x="218.4" y="883.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (13 samples, 0.54%)</title><rect x="219.8" y="867.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13 samples, 0.54%)</title><rect x="219.8" y="851.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.8" y="862.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (12 samples, 0.50%)</title><rect x="219.8" y="835.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="219.8" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.8" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="219.8" y="803.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="222.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (11 samples, 0.46%)</title><rect x="220.3" y="819.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (11 samples, 0.46%)</title><rect x="220.3" y="803.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.46%)</title><rect x="220.3" y="787.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.42%)</title><rect x="220.8" y="771.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="220.8" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="220.8" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="220.8" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="220.8" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="220.8" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="220.8" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.8" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="220.8" y="659.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="223.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.38%)</title><rect x="221.3" y="755.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.38%)</title><rect x="221.3" y="739.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.38%)</title><rect x="221.3" y="723.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.29%)</title><rect x="222.3" y="707.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.29%)</title><rect x="222.3" y="691.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.3" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="222.3" y="675.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="225.3" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="222.8" y="659.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="225.8" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.21%)</title><rect x="223.3" y="675.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="226.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.21%)</title><rect x="223.3" y="659.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="226.3" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.21%)</title><rect x="223.3" y="643.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="226.3" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.21%)</title><rect x="223.3" y="627.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="226.3" y="638.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.21%)</title><rect x="223.3" y="611.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="226.3" y="622.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.21%)</title><rect x="223.3" y="595.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="226.3" y="606.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.21%)</title><rect x="223.3" y="579.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="226.3" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.21%)</title><rect x="223.3" y="563.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="226.3" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.21%)</title><rect x="223.3" y="547.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="226.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="225.8" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="225.8" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="225.8" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.08%)</title><rect x="226.3" y="867.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="229.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="226.3" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="226.3" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (1 samples, 0.04%)</title><rect x="226.7" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="227.2" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="227.2" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (21 samples, 0.88%)</title><rect x="227.7" y="883.0" width="10.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.75%)</title><rect x="227.7" y="867.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.7" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.25%)</title><rect x="227.7" y="851.0" width="3.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="230.7" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="227.7" y="835.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="230.7" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.08%)</title><rect x="228.2" y="835.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="231.2" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.13%)</title><rect x="229.2" y="835.0" width="1.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="232.2" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="229.7" y="819.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="232.7" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="230.2" y="819.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="233.2" y="830.0"></text>
</g>
<g>
<title>__recv (12 samples, 0.50%)</title><rect x="230.7" y="851.0" width="5.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="233.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.50%)</title><rect x="230.7" y="835.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="233.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.50%)</title><rect x="230.7" y="819.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="233.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 0.42%)</title><rect x="231.7" y="803.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="234.7" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.42%)</title><rect x="231.7" y="787.0" width="4.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="234.7" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="231.7" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="234.7" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 0.29%)</title><rect x="232.2" y="771.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="235.2" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 0.29%)</title><rect x="232.2" y="755.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="235.2" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.29%)</title><rect x="232.2" y="739.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="235.2" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="233.7" y="723.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="236.7" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="233.7" y="707.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.7" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.08%)</title><rect x="233.7" y="691.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="236.7" y="702.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.08%)</title><rect x="233.7" y="675.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="236.7" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="234.6" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="237.6" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.04%)</title><rect x="234.6" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="237.6" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="235.1" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.1" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="235.6" y="771.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="238.6" y="782.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="235.6" y="755.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="238.6" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="235.6" y="739.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="238.6" y="750.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="235.6" y="723.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="238.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.13%)</title><rect x="236.6" y="867.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.6" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=44740] (82 samples, 3.43%)</title><rect x="238.1" y="947.0" width="40.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="241.1" y="958.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (82 samples, 3.43%)</title><rect x="238.1" y="931.0" width="40.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.1" y="942.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.13%)</title><rect x="238.1" y="915.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.13%)</title><rect x="238.1" y="899.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.13%)</title><rect x="238.1" y="883.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (35 samples, 1.46%)</title><rect x="239.6" y="915.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (35 samples, 1.46%)</title><rect x="239.6" y="899.0" width="17.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.6" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="239.6" y="883.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="242.6" y="894.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.13%)</title><rect x="240.1" y="883.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="243.1" y="894.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 1.30%)</title><rect x="241.6" y="883.0" width="15.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="244.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 1.09%)</title><rect x="244.0" y="867.0" width="12.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 1.09%)</title><rect x="244.0" y="851.0" width="12.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="247.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (26 samples, 1.09%)</title><rect x="244.0" y="835.0" width="12.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.0" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (26 samples, 1.09%)</title><rect x="244.0" y="819.0" width="12.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="247.0" y="830.0"></text>
</g>
<g>
<title>ep_poll (26 samples, 1.09%)</title><rect x="244.0" y="803.0" width="12.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="247.0" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.33%)</title><rect x="244.0" y="787.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="247.0" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.25%)</title><rect x="244.5" y="771.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="247.5" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.25%)</title><rect x="244.5" y="755.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="247.5" y="766.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.21%)</title><rect x="245.0" y="739.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="248.0" y="750.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.17%)</title><rect x="245.5" y="723.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="248.5" y="734.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="247.5" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="250.5" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="248.0" y="787.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="251.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (17 samples, 0.71%)</title><rect x="248.5" y="787.0" width="8.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="251.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (17 samples, 0.71%)</title><rect x="248.5" y="771.0" width="8.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="251.5" y="782.0"></text>
</g>
<g>
<title>schedule (17 samples, 0.71%)</title><rect x="248.5" y="755.0" width="8.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="251.5" y="766.0"></text>
</g>
<g>
<title>__schedule (17 samples, 0.71%)</title><rect x="248.5" y="739.0" width="8.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="251.5" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.63%)</title><rect x="249.5" y="723.0" width="7.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="252.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (43 samples, 1.80%)</title><rect x="256.9" y="915.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.9" y="926.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (40 samples, 1.67%)</title><rect x="258.3" y="899.0" width="19.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 0.79%)</title><rect x="258.3" y="883.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14 samples, 0.59%)</title><rect x="258.3" y="867.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14 samples, 0.59%)</title><rect x="258.3" y="851.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.3" y="862.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (12 samples, 0.50%)</title><rect x="258.3" y="835.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="261.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.13%)</title><rect x="258.3" y="819.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.3" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="258.8" y="803.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="261.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="259.3" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="259.3" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="259.3" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="259.3" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (9 samples, 0.38%)</title><rect x="259.8" y="819.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (9 samples, 0.38%)</title><rect x="259.8" y="803.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="262.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.38%)</title><rect x="259.8" y="787.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.21%)</title><rect x="261.8" y="771.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.04%)</title><rect x="261.8" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="261.8" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="261.8" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.04%)</title><rect x="261.8" y="707.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.04%)</title><rect x="261.8" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.17%)</title><rect x="262.3" y="755.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.17%)</title><rect x="262.3" y="739.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.17%)</title><rect x="262.3" y="723.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.13%)</title><rect x="262.8" y="707.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.13%)</title><rect x="262.8" y="691.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.8" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="262.8" y="675.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="265.8" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.08%)</title><rect x="263.3" y="675.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="266.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="263.3" y="659.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="266.3" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="263.3" y="643.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="266.3" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="263.3" y="627.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="266.3" y="638.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="263.3" y="611.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.3" y="622.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.08%)</title><rect x="263.3" y="595.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="266.3" y="606.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.08%)</title><rect x="263.3" y="579.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="266.3" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.08%)</title><rect x="263.3" y="563.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="266.3" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="263.3" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="266.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.08%)</title><rect x="264.3" y="835.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.08%)</title><rect x="264.3" y="819.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.08%)</title><rect x="264.3" y="803.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.21%)</title><rect x="265.3" y="867.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="265.7" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="265.7" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="265.7" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="265.7" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="265.7" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="266.2" y="851.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="266.7" y="835.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (21 samples, 0.88%)</title><rect x="267.7" y="883.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (20 samples, 0.84%)</title><rect x="268.2" y="867.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.2" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.08%)</title><rect x="268.2" y="851.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="271.2" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="268.2" y="835.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="271.2" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="268.7" y="835.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="271.7" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="268.7" y="819.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="271.7" y="830.0"></text>
</g>
<g>
<title>__recv (18 samples, 0.75%)</title><rect x="269.2" y="851.0" width="8.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="272.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.75%)</title><rect x="269.2" y="835.0" width="8.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="272.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.75%)</title><rect x="269.2" y="819.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.67%)</title><rect x="269.7" y="803.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.7" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 0.67%)</title><rect x="269.7" y="787.0" width="7.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="272.7" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (16 samples, 0.67%)</title><rect x="269.7" y="771.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="272.7" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (16 samples, 0.67%)</title><rect x="269.7" y="755.0" width="7.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.7" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.67%)</title><rect x="269.7" y="739.0" width="7.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="272.7" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.25%)</title><rect x="270.7" y="723.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="273.7" y="734.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="270.7" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="273.7" y="718.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.21%)</title><rect x="271.2" y="707.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="274.2" y="718.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="271.2" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="274.2" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.17%)</title><rect x="271.7" y="691.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="274.7" y="702.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.13%)</title><rect x="272.2" y="675.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="275.2" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="273.6" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="276.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="273.6" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="276.6" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.21%)</title><rect x="274.1" y="723.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.1" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.21%)</title><rect x="274.1" y="707.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="277.1" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.13%)</title><rect x="275.1" y="691.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="278.1" y="702.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.13%)</title><rect x="275.1" y="675.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="278.1" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="276.1" y="659.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="279.1" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="276.6" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="279.6" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="277.1" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="280.1" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="277.1" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="280.1" y="718.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="277.1" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="280.1" y="702.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="277.1" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.1" y="686.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="277.1" y="659.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="280.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="277.6" y="803.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="280.6" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="277.6" y="787.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.6" y="798.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="277.6" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="280.6" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="277.6" y="755.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="280.6" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="278.1" y="915.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="281.1" y="926.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="278.1" y="899.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="281.1" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="278.1" y="883.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="281.1" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=44741] (72 samples, 3.01%)</title><rect x="278.6" y="947.0" width="35.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="281.6" y="958.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (72 samples, 3.01%)</title><rect x="278.6" y="931.0" width="35.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.6" y="942.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.04%)</title><rect x="279.1" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.04%)</title><rect x="279.1" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="279.1" y="883.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 0.88%)</title><rect x="279.6" y="915.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (21 samples, 0.88%)</title><rect x="279.6" y="899.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.6" y="910.0"></text>
</g>
<g>
<title>epoll_wait (20 samples, 0.84%)</title><rect x="280.1" y="883.0" width="9.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="283.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.84%)</title><rect x="280.1" y="867.0" width="9.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="283.1" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="280.1" y="851.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.79%)</title><rect x="280.6" y="851.0" width="9.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="283.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (18 samples, 0.75%)</title><rect x="281.1" y="835.0" width="8.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="284.1" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (17 samples, 0.71%)</title><rect x="281.1" y="819.0" width="8.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="284.1" y="830.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="281.5" y="803.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="284.5" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="281.5" y="787.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="284.5" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="281.5" y="771.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="284.5" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="282.5" y="803.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.5" y="814.0"></text>
</g>
<g>
<title>ep_poll (12 samples, 0.50%)</title><rect x="283.5" y="803.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="286.5" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.21%)</title><rect x="284.0" y="787.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.0" y="798.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="284.0" y="771.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="287.0" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.17%)</title><rect x="284.5" y="771.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="287.5" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.17%)</title><rect x="284.5" y="755.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="287.5" y="766.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.17%)</title><rect x="284.5" y="739.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="287.5" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="286.0" y="723.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="289.0" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="286.5" y="787.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="289.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.21%)</title><rect x="287.0" y="787.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.21%)</title><rect x="287.0" y="771.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="290.0" y="782.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.21%)</title><rect x="287.0" y="755.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="290.0" y="766.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.21%)</title><rect x="287.0" y="739.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.0" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.21%)</title><rect x="287.0" y="723.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="290.0" y="734.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="289.4" y="819.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="292.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (48 samples, 2.01%)</title><rect x="289.9" y="915.0" width="23.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.9" y="926.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (46 samples, 1.92%)</title><rect x="290.9" y="899.0" width="22.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.9" y="910.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 1.21%)</title><rect x="290.9" y="883.0" width="14.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 0.67%)</title><rect x="291.4" y="867.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 0.67%)</title><rect x="291.4" y="851.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.4" y="862.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (13 samples, 0.54%)</title><rect x="291.4" y="835.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.17%)</title><rect x="291.4" y="819.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="291.9" y="803.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="291.9" y="787.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.9" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.08%)</title><rect x="291.9" y="771.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="294.9" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.08%)</title><rect x="291.9" y="755.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="294.9" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.08%)</title><rect x="291.9" y="739.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="294.9" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="291.9" y="723.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="294.9" y="734.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="291.9" y="707.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="294.9" y="718.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.04%)</title><rect x="291.9" y="691.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="294.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="292.4" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="295.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="292.4" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="295.4" y="702.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="292.4" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="295.4" y="686.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.04%)</title><rect x="292.4" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="295.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="292.9" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="292.9" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="292.9" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="292.9" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (9 samples, 0.38%)</title><rect x="293.4" y="819.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="293.4" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="293.4" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="296.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (1 samples, 0.04%)</title><rect x="293.4" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.4" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="293.4" y="755.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="296.4" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="293.4" y="739.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="296.4" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="293.4" y="723.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="296.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.04%)</title><rect x="293.4" y="707.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="296.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (8 samples, 0.33%)</title><rect x="293.9" y="803.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.33%)</title><rect x="293.9" y="787.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.29%)</title><rect x="294.4" y="771.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.08%)</title><rect x="294.4" y="755.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.08%)</title><rect x="294.4" y="739.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.08%)</title><rect x="294.4" y="723.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="297.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.08%)</title><rect x="294.4" y="707.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.08%)</title><rect x="294.4" y="691.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.08%)</title><rect x="294.4" y="675.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.4" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="294.4" y="659.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="297.4" y="670.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="294.4" y="643.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="297.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="294.9" y="659.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="297.9" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="294.9" y="643.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="297.9" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="294.9" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="297.9" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="294.9" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="297.9" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="294.9" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="297.9" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="294.9" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="297.9" y="590.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="294.9" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="297.9" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="294.9" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.9" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="294.9" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="297.9" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="294.9" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="297.9" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="294.9" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="297.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.21%)</title><rect x="295.4" y="755.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.21%)</title><rect x="295.4" y="739.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.21%)</title><rect x="295.4" y="723.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.21%)</title><rect x="295.4" y="707.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.21%)</title><rect x="295.4" y="691.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.4" y="702.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="295.4" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="298.4" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="295.9" y="675.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="298.9" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="295.9" y="659.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="298.9" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.13%)</title><rect x="296.4" y="675.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="299.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="296.4" y="659.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="299.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="296.4" y="643.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="299.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.13%)</title><rect x="296.4" y="627.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="299.4" y="638.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.13%)</title><rect x="296.4" y="611.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="299.4" y="622.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.13%)</title><rect x="296.4" y="595.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="299.4" y="606.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.13%)</title><rect x="296.4" y="579.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="299.4" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.13%)</title><rect x="296.4" y="563.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="299.4" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.13%)</title><rect x="296.4" y="547.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="299.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.13%)</title><rect x="297.8" y="835.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.13%)</title><rect x="297.8" y="819.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.13%)</title><rect x="297.8" y="803.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.29%)</title><rect x="299.3" y="867.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="299.8" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="299.8" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="299.8" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="299.8" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.21%)</title><rect x="300.3" y="851.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.21%)</title><rect x="300.3" y="835.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.13%)</title><rect x="302.8" y="867.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="304.3" y="867.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="304.3" y="851.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 0.71%)</title><rect x="305.2" y="883.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 0.71%)</title><rect x="305.2" y="867.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.2" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.13%)</title><rect x="305.7" y="851.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="308.7" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="306.2" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="309.2" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="306.7" y="835.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="309.7" y="846.0"></text>
</g>
<g>
<title>__recv (13 samples, 0.54%)</title><rect x="307.2" y="851.0" width="6.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="310.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.50%)</title><rect x="307.7" y="835.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="310.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.50%)</title><rect x="307.7" y="819.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="310.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 0.42%)</title><rect x="308.7" y="803.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="311.7" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.42%)</title><rect x="308.7" y="787.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="311.7" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 0.29%)</title><rect x="309.7" y="771.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="312.7" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.21%)</title><rect x="309.7" y="755.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="312.7" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.17%)</title><rect x="310.2" y="739.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.2" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.17%)</title><rect x="310.2" y="723.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="313.2" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.17%)</title><rect x="310.2" y="707.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="313.2" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.08%)</title><rect x="311.2" y="691.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="314.2" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="311.2" y="675.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.2" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="311.7" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.7" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.08%)</title><rect x="312.2" y="755.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="315.2" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.08%)</title><rect x="312.2" y="739.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="315.2" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.08%)</title><rect x="312.2" y="723.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="315.2" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="313.1" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="316.1" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="313.1" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="316.1" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="313.1" y="739.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="316.1" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="313.1" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="316.1" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="313.6" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="316.6" y="926.0"></text>
</g>
<g>
<title>[async_worker-0 tid=44750] (219 samples, 9.16%)</title><rect x="314.1" y="947.0" width="108.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="317.1" y="958.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (219 samples, 9.16%)</title><rect x="314.1" y="931.0" width="108.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.1" y="942.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (219 samples, 9.16%)</title><rect x="314.1" y="915.0" width="108.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.1" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (219 samples, 9.16%)</title><rect x="314.1" y="899.0" width="108.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.1" y="910.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (176 samples, 7.36%)</title><rect x="314.1" y="883.0" width="86.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.1" y="894.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (175 samples, 7.32%)</title><rect x="314.1" y="867.0" width="86.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.1" y="878.0">java/util/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (175 samples, 7.32%)</title><rect x="314.1" y="851.0" width="86.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.1" y="862.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (175 samples, 7.32%)</title><rect x="314.1" y="835.0" width="86.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.1" y="846.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="315.1" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="315.1" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="315.1" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="318.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (92 samples, 3.85%)</title><rect x="315.6" y="819.0" width="45.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.6" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (91 samples, 3.81%)</title><rect x="315.6" y="803.0" width="44.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.6" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="315.6" y="787.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (89 samples, 3.72%)</title><rect x="316.6" y="787.0" width="43.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.6" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (89 samples, 3.72%)</title><rect x="316.6" y="771.0" width="43.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.6" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (89 samples, 3.72%)</title><rect x="316.6" y="755.0" width="43.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.6" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (89 samples, 3.72%)</title><rect x="316.6" y="739.0" width="43.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.6" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="317.1" y="723.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="320.1" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="317.6" y="707.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="320.6" y="718.0"></text>
</g>
<g>
<title>send (86 samples, 3.60%)</title><rect x="318.1" y="723.0" width="42.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="321.1" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 3.60%)</title><rect x="318.1" y="707.0" width="42.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="321.1" y="718.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (86 samples, 3.60%)</title><rect x="318.1" y="691.0" width="42.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.1" y="702.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (86 samples, 3.60%)</title><rect x="318.1" y="675.0" width="42.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="321.1" y="686.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (86 samples, 3.60%)</title><rect x="318.1" y="659.0" width="42.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="321.1" y="670.0">__sy..</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="319.1" y="643.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="322.1" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (81 samples, 3.39%)</title><rect x="319.6" y="643.0" width="40.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.6" y="654.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="319.6" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="322.6" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (80 samples, 3.35%)</title><rect x="320.1" y="627.0" width="39.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.1" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (80 samples, 3.35%)</title><rect x="320.1" y="611.0" width="39.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="323.1" y="622.0">tcp..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="320.1" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="323.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="320.6" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="323.6" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="321.0" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="324.0" y="606.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="321.0" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="324.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (77 samples, 3.22%)</title><rect x="321.5" y="595.0" width="38.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="324.5" y="606.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.21%)</title><rect x="322.5" y="579.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="325.5" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.21%)</title><rect x="322.5" y="563.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="325.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="322.5" y="547.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="325.5" y="558.0"></text>
</g>
<g>
<title>memset (2 samples, 0.08%)</title><rect x="322.5" y="531.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="325.5" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.08%)</title><rect x="323.5" y="547.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="326.5" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.08%)</title><rect x="323.5" y="531.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="326.5" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="324.5" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="327.5" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="325.0" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="328.0" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="325.5" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="328.5" y="590.0"></text>
</g>
<g>
<title>tcp_push (66 samples, 2.76%)</title><rect x="326.0" y="579.0" width="32.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="329.0" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (66 samples, 2.76%)</title><rect x="326.0" y="563.0" width="32.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="329.0" y="574.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (66 samples, 2.76%)</title><rect x="326.0" y="547.0" width="32.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="329.0" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (60 samples, 2.51%)</title><rect x="326.5" y="531.0" width="29.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="329.5" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (59 samples, 2.47%)</title><rect x="326.5" y="515.0" width="29.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="329.5" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (59 samples, 2.47%)</title><rect x="326.5" y="499.0" width="29.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="329.5" y="510.0">__..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="326.5" y="483.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="329.5" y="494.0"></text>
</g>
<g>
<title>ip_local_out (57 samples, 2.38%)</title><rect x="327.0" y="483.0" width="28.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="330.0" y="494.0">ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="327.0" y="467.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="330.0" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="327.0" y="451.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="330.0" y="462.0"></text>
</g>
<g>
<title>ip_output (55 samples, 2.30%)</title><rect x="327.5" y="467.0" width="27.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="330.5" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (55 samples, 2.30%)</title><rect x="327.5" y="451.0" width="27.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="330.5" y="462.0">i..</text>
</g>
<g>
<title>__ip_finish_output (55 samples, 2.30%)</title><rect x="327.5" y="435.0" width="27.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="330.5" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (55 samples, 2.30%)</title><rect x="327.5" y="419.0" width="27.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.5" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 2.09%)</title><rect x="328.5" y="403.0" width="24.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="331.5" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (50 samples, 2.09%)</title><rect x="328.5" y="387.0" width="24.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="331.5" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (50 samples, 2.09%)</title><rect x="328.5" y="371.0" width="24.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="331.5" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (50 samples, 2.09%)</title><rect x="328.5" y="355.0" width="24.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="331.5" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (50 samples, 2.09%)</title><rect x="328.5" y="339.0" width="24.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="331.5" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (49 samples, 2.05%)</title><rect x="328.9" y="323.0" width="24.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.9" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (48 samples, 2.01%)</title><rect x="329.4" y="307.0" width="23.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="332.4" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (48 samples, 2.01%)</title><rect x="329.4" y="291.0" width="23.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="332.4" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (48 samples, 2.01%)</title><rect x="329.4" y="275.0" width="23.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="332.4" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="329.4" y="259.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="332.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (47 samples, 1.97%)</title><rect x="329.9" y="259.0" width="23.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.9" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (47 samples, 1.97%)</title><rect x="329.9" y="243.0" width="23.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.9" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (47 samples, 1.97%)</title><rect x="329.9" y="227.0" width="23.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="332.9" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (47 samples, 1.97%)</title><rect x="329.9" y="211.0" width="23.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="332.9" y="222.0">i..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="329.9" y="195.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (46 samples, 1.92%)</title><rect x="330.4" y="195.0" width="22.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="333.4" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.08%)</title><rect x="330.4" y="179.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="333.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (44 samples, 1.84%)</title><rect x="331.4" y="179.0" width="21.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.4" y="190.0">t..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.08%)</title><rect x="331.4" y="163.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="334.4" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (42 samples, 1.76%)</title><rect x="332.4" y="163.0" width="20.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="335.4" y="174.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.29%)</title><rect x="332.9" y="147.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="335.9" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="332.9" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="335.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.25%)</title><rect x="333.4" y="131.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="336.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="333.9" y="115.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="336.9" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="333.9" y="99.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="336.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="333.9" y="83.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="336.9" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="333.9" y="67.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.9" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="333.9" y="51.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="336.9" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="333.9" y="35.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="336.9" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.08%)</title><rect x="334.4" y="115.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="337.4" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="335.4" y="115.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.4" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="335.9" y="115.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="338.9" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (33 samples, 1.38%)</title><rect x="336.4" y="147.0" width="16.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.4" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (33 samples, 1.38%)</title><rect x="336.4" y="131.0" width="16.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (33 samples, 1.38%)</title><rect x="336.4" y="115.0" width="16.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (33 samples, 1.38%)</title><rect x="336.4" y="99.0" width="16.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.4" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (33 samples, 1.38%)</title><rect x="336.4" y="83.0" width="16.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="339.4" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="352.6" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.6" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.13%)</title><rect x="353.1" y="403.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="356.1" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.13%)</title><rect x="353.1" y="387.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.1" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="353.6" y="371.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="356.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="353.6" y="355.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.6" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="353.6" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="356.6" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="354.1" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="357.1" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="354.1" y="323.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="357.1" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="354.1" y="307.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.1" y="318.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="354.6" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="357.6" y="478.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="355.1" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="358.1" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="355.6" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="358.6" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="355.6" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="358.6" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="356.1" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="359.1" y="542.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="356.1" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="359.1" y="526.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="356.1" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="359.1" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="356.6" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="359.6" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="356.6" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="359.6" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="356.6" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="356.6" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="359.6" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="356.6" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="359.6" y="478.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.04%)</title><rect x="357.1" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="360.1" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.08%)</title><rect x="357.6" y="531.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="360.6" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="358.6" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.6" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="358.6" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="361.6" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="359.1" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="362.1" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="359.6" y="643.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="362.6" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="359.6" y="627.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="362.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="359.6" y="611.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.6" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="359.6" y="595.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="362.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="360.5" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (80 samples, 3.35%)</title><rect x="361.0" y="819.0" width="39.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.0" y="830.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="361.0" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="364.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="361.0" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.0" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="361.0" y="771.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="364.0" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="361.0" y="755.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="364.0" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="361.0" y="739.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="364.0" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="361.0" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="364.0" y="734.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="361.0" y="707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="364.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="361.0" y="691.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="364.0" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="361.0" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="364.0" y="686.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.04%)</title><rect x="361.0" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="364.0" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (78 samples, 3.26%)</title><rect x="361.5" y="803.0" width="38.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.5" y="814.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (78 samples, 3.26%)</title><rect x="361.5" y="787.0" width="38.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.5" y="798.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (78 samples, 3.26%)</title><rect x="361.5" y="771.0" width="38.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="364.5" y="782.0">Jav..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (78 samples, 3.26%)</title><rect x="361.5" y="755.0" width="38.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="364.5" y="766.0">roc..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="361.5" y="739.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="364.5" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="362.0" y="739.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="365.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (72 samples, 3.01%)</title><rect x="362.5" y="739.0" width="35.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="365.5" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (70 samples, 2.93%)</title><rect x="362.5" y="723.0" width="34.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="365.5" y="734.0">ro..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.08%)</title><rect x="362.5" y="707.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="365.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.08%)</title><rect x="362.5" y="691.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="365.5" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="363.0" y="675.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="366.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (68 samples, 2.85%)</title><rect x="363.5" y="707.0" width="33.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="366.5" y="718.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (68 samples, 2.85%)</title><rect x="363.5" y="691.0" width="33.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="366.5" y="702.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="363.5" y="675.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="366.5" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="364.0" y="675.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="367.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (66 samples, 2.76%)</title><rect x="364.5" y="675.0" width="32.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="367.5" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.13%)</title><rect x="365.0" y="659.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="368.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="365.5" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="368.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="366.0" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="369.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="366.0" y="627.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="369.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="366.5" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="369.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.04%)</title><rect x="367.0" y="659.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="370.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.04%)</title><rect x="367.5" y="659.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="370.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (6 samples, 0.25%)</title><rect x="367.9" y="659.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="370.9" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="367.9" y="643.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="370.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (5 samples, 0.21%)</title><rect x="368.4" y="643.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="371.4" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (5 samples, 0.21%)</title><rect x="368.4" y="627.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="371.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (5 samples, 0.21%)</title><rect x="368.4" y="611.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="371.4" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="368.9" y="595.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="371.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="369.4" y="595.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="372.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="369.9" y="595.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="372.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (1 samples, 0.04%)</title><rect x="370.9" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="373.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (2 samples, 0.08%)</title><rect x="371.4" y="659.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="374.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (50 samples, 2.09%)</title><rect x="372.4" y="659.0" width="24.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="375.4" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="372.9" y="643.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="375.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::FileIndexer::GetNextLevelIndex(unsigned long, unsigned long, int, int, int*, int*) const (1 samples, 0.04%)</title><rect x="373.4" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="376.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (3 samples, 0.13%)</title><rect x="373.9" y="643.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="376.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="374.9" y="627.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="377.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (44 samples, 1.84%)</title><rect x="375.4" y="643.0" width="21.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="378.4" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (38 samples, 1.59%)</title><rect x="375.4" y="627.0" width="18.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="378.4" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="375.4" y="611.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="378.4" y="622.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="375.8" y="611.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="378.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="376.3" y="611.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="379.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="376.3" y="595.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="379.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="376.8" y="611.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="379.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (11 samples, 0.46%)</title><rect x="377.3" y="611.0" width="5.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="380.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (10 samples, 0.42%)</title><rect x="377.8" y="595.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="380.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="377.8" y="579.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="380.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (9 samples, 0.38%)</title><rect x="378.3" y="579.0" width="4.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="381.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (9 samples, 0.38%)</title><rect x="378.3" y="563.0" width="4.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="381.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (8 samples, 0.33%)</title><rect x="378.3" y="547.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="381.3" y="558.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.04%)</title><rect x="378.3" y="531.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="381.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.21%)</title><rect x="378.8" y="531.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="381.8" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.13%)</title><rect x="378.8" y="515.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="381.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="378.8" y="499.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="381.8" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="378.8" y="483.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="381.8" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.13%)</title><rect x="378.8" y="467.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="381.8" y="478.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.13%)</title><rect x="378.8" y="451.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="381.8" y="462.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.13%)</title><rect x="378.8" y="435.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="381.8" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="378.8" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="381.8" y="430.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="378.8" y="403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="381.8" y="414.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.08%)</title><rect x="379.3" y="419.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="382.3" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.08%)</title><rect x="379.3" y="403.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.3" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="379.3" y="387.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="382.3" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="380.3" y="515.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="383.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="380.8" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="383.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="380.8" y="499.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="383.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.08%)</title><rect x="381.3" y="531.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="384.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.04%)</title><rect x="382.3" y="547.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="385.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (8 samples, 0.33%)</title><rect x="382.8" y="611.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="385.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (4 samples, 0.17%)</title><rect x="383.3" y="595.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="386.3" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="383.3" y="579.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="386.3" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="383.7" y="579.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="386.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="384.7" y="579.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="387.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="384.7" y="563.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="387.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.13%)</title><rect x="385.2" y="595.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="388.2" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="385.2" y="579.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="388.2" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="385.7" y="579.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="388.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="386.2" y="579.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="389.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (11 samples, 0.46%)</title><rect x="386.7" y="611.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="389.7" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="390.2" y="595.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="393.2" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="391.2" y="595.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="394.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="391.6" y="595.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="394.6" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="391.6" y="579.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="394.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.17%)</title><rect x="392.1" y="611.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="395.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="394.1" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="397.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.04%)</title><rect x="394.6" y="627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="397.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="395.1" y="627.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="398.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (1 samples, 0.04%)</title><rect x="395.6" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="398.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="396.1" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="399.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="396.6" y="627.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="399.6" y="638.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.08%)</title><rect x="397.1" y="723.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="400.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.17%)</title><rect x="398.1" y="739.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="401.1" y="750.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.17%)</title><rect x="398.1" y="723.0" width="1.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="401.1" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.17%)</title><rect x="398.1" y="707.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="401.1" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="399.5" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="402.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="399.5" y="675.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="402.5" y="686.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="399.5" y="659.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="402.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (1 samples, 0.04%)</title><rect x="400.0" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (1 samples, 0.04%)</title><rect x="400.5" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="401.0" y="883.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="401.0" y="867.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="401.0" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (42 samples, 1.76%)</title><rect x="401.5" y="883.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (42 samples, 1.76%)</title><rect x="401.5" y="867.0" width="20.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.59%)</title><rect x="401.5" y="851.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.08%)</title><rect x="401.5" y="835.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.08%)</title><rect x="401.5" y="819.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.08%)</title><rect x="401.5" y="803.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.21%)</title><rect x="402.5" y="835.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.21%)</title><rect x="402.5" y="819.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.21%)</title><rect x="402.5" y="803.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.21%)</title><rect x="402.5" y="787.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.21%)</title><rect x="402.5" y="771.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.5" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="402.5" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="405.5" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.17%)</title><rect x="403.0" y="755.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="406.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.17%)</title><rect x="403.0" y="739.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="406.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.17%)</title><rect x="403.0" y="723.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="406.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.17%)</title><rect x="403.0" y="707.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="406.0" y="718.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.17%)</title><rect x="403.0" y="691.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="406.0" y="702.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.17%)</title><rect x="403.0" y="675.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="406.0" y="686.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.17%)</title><rect x="403.0" y="659.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="406.0" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.17%)</title><rect x="403.0" y="643.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="406.0" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.17%)</title><rect x="403.0" y="627.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="406.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.25%)</title><rect x="405.0" y="835.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.25%)</title><rect x="405.0" y="819.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.21%)</title><rect x="405.0" y="803.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="408.0" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.17%)</title><rect x="405.0" y="787.0" width="2.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="408.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.17%)</title><rect x="405.0" y="771.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="408.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.17%)</title><rect x="405.0" y="755.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="408.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.17%)</title><rect x="405.0" y="739.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="408.0" y="750.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.17%)</title><rect x="405.0" y="723.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="408.0" y="734.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.17%)</title><rect x="405.0" y="707.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="408.0" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.17%)</title><rect x="405.0" y="691.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="408.0" y="702.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.17%)</title><rect x="405.0" y="675.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="408.0" y="686.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.17%)</title><rect x="405.0" y="659.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="408.0" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.17%)</title><rect x="405.0" y="643.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="408.0" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="407.0" y="787.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="410.0" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="407.4" y="803.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="410.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="407.9" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.08%)</title><rect x="408.4" y="851.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.08%)</title><rect x="408.4" y="835.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.08%)</title><rect x="408.4" y="819.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.08%)</title><rect x="408.4" y="803.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.08%)</title><rect x="408.4" y="787.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.08%)</title><rect x="408.4" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.4" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="408.4" y="755.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="411.4" y="766.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="408.4" y="739.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="411.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="408.9" y="755.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="411.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="408.9" y="739.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="411.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (26 samples, 1.09%)</title><rect x="409.4" y="851.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (26 samples, 1.09%)</title><rect x="409.4" y="835.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="412.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (26 samples, 1.09%)</title><rect x="409.4" y="819.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 1.05%)</title><rect x="409.9" y="803.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (25 samples, 1.05%)</title><rect x="409.9" y="787.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.9" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="409.9" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="412.9" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="410.4" y="771.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="413.4" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="410.4" y="755.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="413.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (23 samples, 0.96%)</title><rect x="410.9" y="771.0" width="11.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="413.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.96%)</title><rect x="410.9" y="755.0" width="11.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="413.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.96%)</title><rect x="410.9" y="739.0" width="11.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.96%)</title><rect x="410.9" y="723.0" width="11.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="413.9" y="734.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.96%)</title><rect x="410.9" y="707.0" width="11.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 0.96%)</title><rect x="410.9" y="691.0" width="11.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="413.9" y="702.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.88%)</title><rect x="411.9" y="675.0" width="10.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.9" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.88%)</title><rect x="411.9" y="659.0" width="10.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="414.9" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 0.88%)</title><rect x="411.9" y="643.0" width="10.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.9" y="654.0"></text>
</g>
<g>
<title>[async_worker-1 tid=44755] (222 samples, 9.29%)</title><rect x="422.3" y="947.0" width="109.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="425.3" y="958.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (222 samples, 9.29%)</title><rect x="422.3" y="931.0" width="109.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.3" y="942.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (222 samples, 9.29%)</title><rect x="422.3" y="915.0" width="109.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.3" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (222 samples, 9.29%)</title><rect x="422.3" y="899.0" width="109.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.3" y="910.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (183 samples, 7.66%)</title><rect x="422.3" y="883.0" width="90.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.3" y="894.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (183 samples, 7.66%)</title><rect x="422.3" y="867.0" width="90.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.3" y="878.0">java/util/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (183 samples, 7.66%)</title><rect x="422.3" y="851.0" width="90.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.3" y="862.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (183 samples, 7.66%)</title><rect x="422.3" y="835.0" width="90.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.3" y="846.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (91 samples, 3.81%)</title><rect x="422.8" y="819.0" width="44.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="425.8" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="423.2" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="423.2" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="423.2" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.2" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="423.2" y="755.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="426.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (89 samples, 3.72%)</title><rect x="423.7" y="803.0" width="44.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.7" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="423.7" y="787.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="424.2" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="424.2" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="424.2" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="427.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="424.2" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="424.2" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 3.64%)</title><rect x="424.7" y="787.0" width="43.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.7" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 3.64%)</title><rect x="424.7" y="771.0" width="43.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.7" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (87 samples, 3.64%)</title><rect x="424.7" y="755.0" width="43.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.7" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="424.7" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (86 samples, 3.60%)</title><rect x="425.2" y="739.0" width="42.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.2" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.13%)</title><rect x="425.2" y="723.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="428.2" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="426.2" y="707.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="429.2" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="426.2" y="691.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="429.2" y="702.0"></text>
</g>
<g>
<title>send (83 samples, 3.47%)</title><rect x="426.7" y="723.0" width="41.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="429.7" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 3.39%)</title><rect x="427.7" y="707.0" width="40.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.7" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (81 samples, 3.39%)</title><rect x="427.7" y="691.0" width="40.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="430.7" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (78 samples, 3.26%)</title><rect x="429.2" y="675.0" width="38.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="432.2" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (78 samples, 3.26%)</title><rect x="429.2" y="659.0" width="38.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="432.2" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (76 samples, 3.18%)</title><rect x="429.2" y="643.0" width="37.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.2" y="654.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.08%)</title><rect x="429.2" y="627.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="432.2" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (74 samples, 3.10%)</title><rect x="430.2" y="627.0" width="36.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="433.2" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (73 samples, 3.05%)</title><rect x="430.7" y="611.0" width="36.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="433.7" y="622.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="430.7" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="433.7" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="431.1" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.1" y="606.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="431.1" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="434.1" y="590.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="431.6" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (69 samples, 2.89%)</title><rect x="432.1" y="595.0" width="34.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="435.1" y="606.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.04%)</title><rect x="433.1" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="436.1" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="433.6" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.6" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="433.6" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="436.6" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="434.1" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.1" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="434.1" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.1" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.29%)</title><rect x="434.6" y="579.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.6" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.29%)</title><rect x="434.6" y="563.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.13%)</title><rect x="435.1" y="547.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.08%)</title><rect x="435.1" y="531.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="438.1" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="435.6" y="515.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.6" y="526.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="436.1" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="439.1" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.08%)</title><rect x="436.6" y="547.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.6" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.08%)</title><rect x="436.6" y="531.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.6" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="437.6" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="440.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (54 samples, 2.26%)</title><rect x="438.1" y="579.0" width="26.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="441.1" y="590.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (54 samples, 2.26%)</title><rect x="438.1" y="563.0" width="26.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="441.1" y="574.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (54 samples, 2.26%)</title><rect x="438.1" y="547.0" width="26.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.1" y="558.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (49 samples, 2.05%)</title><rect x="439.5" y="531.0" width="24.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="442.5" y="542.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (48 samples, 2.01%)</title><rect x="439.5" y="515.0" width="23.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="442.5" y="526.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (48 samples, 2.01%)</title><rect x="439.5" y="499.0" width="23.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.5" y="510.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="439.5" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="442.5" y="494.0"></text>
</g>
<g>
<title>ip_local_out (47 samples, 1.97%)</title><rect x="440.0" y="483.0" width="23.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.0" y="494.0">i..</text>
</g>
<g>
<title>ip_output (47 samples, 1.97%)</title><rect x="440.0" y="467.0" width="23.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="443.0" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (47 samples, 1.97%)</title><rect x="440.0" y="451.0" width="23.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.0" y="462.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="440.0" y="435.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.0" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (46 samples, 1.92%)</title><rect x="440.5" y="435.0" width="22.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.5" y="446.0">_..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="440.5" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.5" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (45 samples, 1.88%)</title><rect x="441.0" y="419.0" width="22.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="444.0" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (41 samples, 1.72%)</title><rect x="441.0" y="403.0" width="20.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="444.0" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (41 samples, 1.72%)</title><rect x="441.0" y="387.0" width="20.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="444.0" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (41 samples, 1.72%)</title><rect x="441.0" y="371.0" width="20.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.0" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (41 samples, 1.72%)</title><rect x="441.0" y="355.0" width="20.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.0" y="366.0"></text>
</g>
<g>
<title>net_rx_action (41 samples, 1.72%)</title><rect x="441.0" y="339.0" width="20.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="444.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (41 samples, 1.72%)</title><rect x="441.0" y="323.0" width="20.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (41 samples, 1.72%)</title><rect x="441.0" y="307.0" width="20.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="444.0" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (41 samples, 1.72%)</title><rect x="441.0" y="291.0" width="20.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="444.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="441.0" y="275.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (40 samples, 1.67%)</title><rect x="441.5" y="275.0" width="19.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="444.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (39 samples, 1.63%)</title><rect x="442.0" y="259.0" width="19.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="445.0" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (39 samples, 1.63%)</title><rect x="442.0" y="243.0" width="19.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="445.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (39 samples, 1.63%)</title><rect x="442.0" y="227.0" width="19.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="445.0" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (39 samples, 1.63%)</title><rect x="442.0" y="211.0" width="19.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="445.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (39 samples, 1.63%)</title><rect x="442.0" y="195.0" width="19.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="445.0" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.08%)</title><rect x="442.5" y="179.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="445.5" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="443.5" y="179.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="446.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="444.0" y="179.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="447.0" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="444.0" y="163.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="447.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (34 samples, 1.42%)</title><rect x="444.5" y="179.0" width="16.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="447.5" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (34 samples, 1.42%)</title><rect x="444.5" y="163.0" width="16.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="447.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.08%)</title><rect x="445.5" y="147.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.5" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="445.5" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="448.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="445.5" y="115.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="448.5" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="445.5" y="99.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="448.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="445.5" y="83.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="448.5" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="445.5" y="67.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="448.5" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="445.5" y="51.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="448.5" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="445.5" y="35.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="448.5" y="46.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="446.0" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="449.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (29 samples, 1.21%)</title><rect x="446.5" y="147.0" width="14.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="449.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (29 samples, 1.21%)</title><rect x="446.5" y="131.0" width="14.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 1.21%)</title><rect x="446.5" y="115.0" width="14.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="449.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 1.21%)</title><rect x="446.5" y="99.0" width="14.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 1.21%)</title><rect x="446.5" y="83.0" width="14.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="449.5" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="460.8" y="147.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="463.8" y="158.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="460.8" y="131.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="463.8" y="142.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="460.8" y="115.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.8" y="126.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="460.8" y="99.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="463.8" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.17%)</title><rect x="461.3" y="403.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="464.3" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.17%)</title><rect x="461.3" y="387.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.3" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="462.3" y="371.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="465.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="462.7" y="355.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="462.7" y="339.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="465.7" y="350.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="463.2" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.2" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="463.2" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="466.2" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="463.7" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="466.7" y="542.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="463.7" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="466.7" y="526.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="463.7" y="499.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.7" y="510.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="464.2" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="467.2" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.13%)</title><rect x="464.7" y="579.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="467.7" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="464.7" y="563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="467.7" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.08%)</title><rect x="465.2" y="563.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.2" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="466.2" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="469.2" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="466.7" y="643.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="469.7" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="466.7" y="627.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="469.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="466.7" y="611.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.7" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="466.7" y="595.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (91 samples, 3.81%)</title><rect x="467.7" y="819.0" width="44.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.7" y="830.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (91 samples, 3.81%)</title><rect x="467.7" y="803.0" width="44.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.7" y="814.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (91 samples, 3.81%)</title><rect x="467.7" y="787.0" width="44.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.7" y="798.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (87 samples, 3.64%)</title><rect x="467.7" y="771.0" width="42.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="470.7" y="782.0">Java..</text>
</g>
<g>
<title>cfree (2 samples, 0.08%)</title><rect x="467.7" y="755.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="470.7" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (85 samples, 3.56%)</title><rect x="468.7" y="755.0" width="41.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="471.7" y="766.0">roc..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.08%)</title><rect x="469.2" y="739.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="472.2" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="469.7" y="723.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="472.7" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="470.2" y="739.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="473.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (72 samples, 3.01%)</title><rect x="470.6" y="739.0" width="35.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="473.6" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (72 samples, 3.01%)</title><rect x="470.6" y="723.0" width="35.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="473.6" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.08%)</title><rect x="470.6" y="707.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="473.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="470.6" y="691.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="473.6" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="470.6" y="675.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="473.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="471.1" y="691.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="474.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (70 samples, 2.93%)</title><rect x="471.6" y="707.0" width="34.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="474.6" y="718.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (70 samples, 2.93%)</title><rect x="471.6" y="691.0" width="34.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="474.6" y="702.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.04%)</title><rect x="471.6" y="675.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="474.6" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="472.1" y="675.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="475.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (67 samples, 2.80%)</title><rect x="472.6" y="675.0" width="33.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="475.6" y="686.0">ro..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="473.1" y="659.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="476.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="474.1" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="477.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="474.6" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="477.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (5 samples, 0.21%)</title><rect x="475.1" y="659.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="478.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (5 samples, 0.21%)</title><rect x="475.1" y="643.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="478.1" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (5 samples, 0.21%)</title><rect x="475.1" y="627.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="478.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (5 samples, 0.21%)</title><rect x="475.1" y="611.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="478.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.17%)</title><rect x="475.6" y="595.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="478.6" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="475.6" y="579.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="478.6" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="477.1" y="579.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="480.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (57 samples, 2.38%)</title><rect x="477.6" y="659.0" width="28.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="480.6" y="670.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (2 samples, 0.08%)</title><rect x="479.5" y="643.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="482.5" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="480.0" y="627.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="483.0" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="480.0" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="483.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="480.5" y="643.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="483.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.04%)</title><rect x="481.0" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="484.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="481.5" y="643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="484.5" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="481.5" y="627.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="484.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (48 samples, 2.01%)</title><rect x="482.0" y="643.0" width="23.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="485.0" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (46 samples, 1.92%)</title><rect x="483.0" y="627.0" width="22.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="486.0" y="638.0">r..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="483.5" y="611.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="486.5" y="622.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.08%)</title><rect x="484.0" y="611.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="487.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="485.0" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="488.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="485.5" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="488.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (9 samples, 0.38%)</title><rect x="485.9" y="611.0" width="4.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="488.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (9 samples, 0.38%)</title><rect x="485.9" y="595.0" width="4.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="488.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="485.9" y="579.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="488.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (7 samples, 0.29%)</title><rect x="486.4" y="579.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="489.4" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="486.4" y="563.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="489.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (6 samples, 0.25%)</title><rect x="486.9" y="563.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="489.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (6 samples, 0.25%)</title><rect x="486.9" y="547.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="489.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="486.9" y="531.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="489.9" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="486.9" y="515.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="489.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.21%)</title><rect x="487.4" y="531.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="490.4" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.08%)</title><rect x="487.4" y="515.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="490.4" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="487.4" y="499.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="490.4" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="487.4" y="483.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.4" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="487.4" y="467.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="490.4" y="478.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="487.4" y="451.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="490.4" y="462.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.08%)</title><rect x="487.4" y="435.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="490.4" y="446.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="487.4" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.4" y="430.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="487.9" y="419.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="490.9" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="487.9" y="403.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="490.9" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="487.9" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="490.9" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.13%)</title><rect x="488.4" y="515.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="491.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.13%)</title><rect x="488.4" y="499.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="491.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="489.9" y="579.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="492.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (15 samples, 0.63%)</title><rect x="490.4" y="611.0" width="7.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="493.4" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="491.4" y="595.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="494.4" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="491.9" y="595.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="494.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (10 samples, 0.42%)</title><rect x="492.4" y="595.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="495.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="492.4" y="579.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="495.4" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="492.9" y="579.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="495.9" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="493.4" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="496.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="493.8" y="579.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="496.8" y="590.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="495.3" y="579.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="498.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.13%)</title><rect x="495.8" y="579.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="498.8" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="496.3" y="563.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="499.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="497.3" y="595.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="500.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="497.8" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="500.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="497.8" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="500.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (14 samples, 0.59%)</title><rect x="498.3" y="611.0" width="6.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="501.3" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="501.3" y="595.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="504.3" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="502.2" y="595.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="505.2" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="503.2" y="595.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="506.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="503.7" y="595.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="506.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="504.2" y="595.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="507.2" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="504.2" y="579.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="507.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="505.2" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="508.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.04%)</title><rect x="505.7" y="675.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="508.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (9 samples, 0.38%)</title><rect x="506.2" y="739.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="509.2" y="750.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.25%)</title><rect x="506.2" y="723.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="509.2" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="506.2" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="509.2" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.21%)</title><rect x="506.7" y="707.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="509.7" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.13%)</title><rect x="507.2" y="691.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="510.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.13%)</title><rect x="507.2" y="675.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="510.2" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="507.2" y="659.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="510.2" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.08%)</title><rect x="507.7" y="659.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="510.7" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="508.7" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="511.7" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.13%)</title><rect x="509.2" y="723.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="512.2" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="510.1" y="707.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="513.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="510.6" y="771.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="513.6" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="510.6" y="755.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="513.6" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="511.6" y="771.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="514.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.04%)</title><rect x="512.1" y="771.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="515.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.08%)</title><rect x="512.6" y="883.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.08%)</title><rect x="512.6" y="867.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.08%)</title><rect x="512.6" y="851.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (37 samples, 1.55%)</title><rect x="513.6" y="883.0" width="18.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (37 samples, 1.55%)</title><rect x="513.6" y="867.0" width="18.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (22 samples, 0.92%)</title><rect x="513.6" y="851.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.08%)</title><rect x="513.6" y="835.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.08%)</title><rect x="513.6" y="819.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.08%)</title><rect x="513.6" y="803.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (10 samples, 0.42%)</title><rect x="514.6" y="835.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.42%)</title><rect x="514.6" y="819.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="517.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.42%)</title><rect x="514.6" y="803.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.42%)</title><rect x="514.6" y="787.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.42%)</title><rect x="514.6" y="771.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.6" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="514.6" y="755.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="517.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.38%)</title><rect x="515.1" y="755.0" width="4.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="518.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.38%)</title><rect x="515.1" y="739.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.38%)</title><rect x="515.1" y="723.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="518.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.38%)</title><rect x="515.1" y="707.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="518.1" y="718.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.38%)</title><rect x="515.1" y="691.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="518.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.38%)</title><rect x="515.1" y="675.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="518.1" y="686.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.38%)</title><rect x="515.1" y="659.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="518.1" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.38%)</title><rect x="515.1" y="643.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="518.1" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.38%)</title><rect x="515.1" y="627.0" width="4.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="518.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.42%)</title><rect x="519.5" y="835.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.42%)</title><rect x="519.5" y="819.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.5" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="519.5" y="803.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="522.5" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="519.5" y="787.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="522.5" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="520.0" y="787.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="523.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="520.0" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="523.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="520.0" y="755.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="523.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="520.0" y="739.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="523.0" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="520.0" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="523.0" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="520.0" y="707.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.33%)</title><rect x="520.5" y="803.0" width="4.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="523.5" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.29%)</title><rect x="520.5" y="787.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="523.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.29%)</title><rect x="520.5" y="771.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.29%)</title><rect x="520.5" y="755.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="523.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.29%)</title><rect x="520.5" y="739.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="523.5" y="750.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.29%)</title><rect x="520.5" y="723.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.5" y="734.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.29%)</title><rect x="520.5" y="707.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.5" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.21%)</title><rect x="521.0" y="691.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="524.0" y="702.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.21%)</title><rect x="521.0" y="675.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="524.0" y="686.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.21%)</title><rect x="521.0" y="659.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="524.0" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.21%)</title><rect x="521.0" y="643.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="524.0" y="654.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="523.5" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="526.5" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="524.0" y="787.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="527.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.63%)</title><rect x="524.5" y="851.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.63%)</title><rect x="524.5" y="835.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.63%)</title><rect x="524.5" y="819.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.59%)</title><rect x="525.0" y="803.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.59%)</title><rect x="525.0" y="787.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.0" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.59%)</title><rect x="525.0" y="771.0" width="6.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="528.0" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.59%)</title><rect x="525.0" y="755.0" width="6.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="528.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.59%)</title><rect x="525.0" y="739.0" width="6.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="528.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.59%)</title><rect x="525.0" y="723.0" width="6.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="528.0" y="734.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.59%)</title><rect x="525.0" y="707.0" width="6.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="528.0" y="718.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.59%)</title><rect x="525.0" y="691.0" width="6.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="528.0" y="702.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.59%)</title><rect x="525.0" y="675.0" width="6.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="528.0" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.59%)</title><rect x="525.0" y="659.0" width="6.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="528.0" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.59%)</title><rect x="525.0" y="643.0" width="6.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="528.0" y="654.0"></text>
</g>
<g>
<title>[async_worker-2 tid=44753] (220 samples, 9.21%)</title><rect x="531.9" y="947.0" width="108.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="534.9" y="958.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (220 samples, 9.21%)</title><rect x="531.9" y="931.0" width="108.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.9" y="942.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (220 samples, 9.21%)</title><rect x="531.9" y="915.0" width="108.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.9" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (220 samples, 9.21%)</title><rect x="531.9" y="899.0" width="108.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.9" y="910.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (186 samples, 7.78%)</title><rect x="531.9" y="883.0" width="91.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.9" y="894.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (186 samples, 7.78%)</title><rect x="531.9" y="867.0" width="91.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.9" y="878.0">java/util/c..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (186 samples, 7.78%)</title><rect x="531.9" y="851.0" width="91.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.9" y="862.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="531.9" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="531.9" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="531.9" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="531.9" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (185 samples, 7.74%)</title><rect x="532.4" y="835.0" width="91.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.4" y="846.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (95 samples, 3.97%)</title><rect x="533.8" y="819.0" width="46.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.8" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="534.3" y="803.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="534.3" y="787.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="534.3" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.3" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="534.3" y="755.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="537.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.08%)</title><rect x="534.3" y="739.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="537.3" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.08%)</title><rect x="534.3" y="723.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="537.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (92 samples, 3.85%)</title><rect x="535.3" y="803.0" width="45.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.3" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="535.3" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="535.3" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="535.3" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="535.3" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="535.3" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="535.3" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.3" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="535.3" y="691.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="538.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 3.81%)</title><rect x="535.8" y="787.0" width="44.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.8" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 3.81%)</title><rect x="535.8" y="771.0" width="44.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.8" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (90 samples, 3.77%)</title><rect x="536.3" y="755.0" width="44.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.3" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (89 samples, 3.72%)</title><rect x="536.8" y="739.0" width="43.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.8" y="750.0">one/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="536.8" y="723.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="539.8" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="537.3" y="723.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="540.3" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="537.8" y="707.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="540.8" y="718.0"></text>
</g>
<g>
<title>send (86 samples, 3.60%)</title><rect x="538.3" y="723.0" width="42.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="541.3" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (85 samples, 3.56%)</title><rect x="538.8" y="707.0" width="41.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="541.8" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (85 samples, 3.56%)</title><rect x="538.8" y="691.0" width="41.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="541.8" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (84 samples, 3.51%)</title><rect x="539.3" y="675.0" width="41.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.3" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (84 samples, 3.51%)</title><rect x="539.3" y="659.0" width="41.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="542.3" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (79 samples, 3.31%)</title><rect x="539.3" y="643.0" width="39.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="542.3" y="654.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.08%)</title><rect x="539.3" y="627.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="542.3" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (77 samples, 3.22%)</title><rect x="540.3" y="627.0" width="38.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="543.3" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (77 samples, 3.22%)</title><rect x="540.3" y="611.0" width="38.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.3" y="622.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (77 samples, 3.22%)</title><rect x="540.3" y="595.0" width="38.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="543.3" y="606.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="540.8" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="543.8" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="540.8" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="543.8" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="541.2" y="579.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="544.2" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="541.2" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="544.2" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.17%)</title><rect x="541.7" y="579.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="544.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.17%)</title><rect x="541.7" y="563.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="544.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="541.7" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="541.7" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="544.7" y="542.0"></text>
</g>
<g>
<title>memset (3 samples, 0.13%)</title><rect x="542.2" y="547.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="545.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (69 samples, 2.89%)</title><rect x="543.7" y="579.0" width="34.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="546.7" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (68 samples, 2.85%)</title><rect x="543.7" y="563.0" width="33.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="546.7" y="574.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (68 samples, 2.85%)</title><rect x="543.7" y="547.0" width="33.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="546.7" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (63 samples, 2.64%)</title><rect x="543.7" y="531.0" width="31.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.7" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (58 samples, 2.43%)</title><rect x="545.2" y="515.0" width="28.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.2" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (58 samples, 2.43%)</title><rect x="545.2" y="499.0" width="28.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.2" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (57 samples, 2.38%)</title><rect x="545.2" y="483.0" width="28.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="548.2" y="494.0">ip..</text>
</g>
<g>
<title>ip_output (57 samples, 2.38%)</title><rect x="545.2" y="467.0" width="28.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="548.2" y="478.0">ip..</text>
</g>
<g>
<title>ip_finish_output (57 samples, 2.38%)</title><rect x="545.2" y="451.0" width="28.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="548.2" y="462.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (57 samples, 2.38%)</title><rect x="545.2" y="435.0" width="28.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.2" y="446.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (57 samples, 2.38%)</title><rect x="545.2" y="419.0" width="28.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="548.2" y="430.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (54 samples, 2.26%)</title><rect x="545.7" y="403.0" width="26.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.7" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (54 samples, 2.26%)</title><rect x="545.7" y="387.0" width="26.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="548.7" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (54 samples, 2.26%)</title><rect x="545.7" y="371.0" width="26.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="548.7" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (54 samples, 2.26%)</title><rect x="545.7" y="355.0" width="26.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.7" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (52 samples, 2.18%)</title><rect x="546.2" y="339.0" width="25.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="549.2" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (52 samples, 2.18%)</title><rect x="546.2" y="323.0" width="25.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="549.2" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (51 samples, 2.13%)</title><rect x="546.7" y="307.0" width="25.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="549.7" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (51 samples, 2.13%)</title><rect x="546.7" y="291.0" width="25.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="549.7" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (51 samples, 2.13%)</title><rect x="546.7" y="275.0" width="25.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="549.7" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (51 samples, 2.13%)</title><rect x="546.7" y="259.0" width="25.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="549.7" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (51 samples, 2.13%)</title><rect x="546.7" y="243.0" width="25.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="549.7" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 2.13%)</title><rect x="546.7" y="227.0" width="25.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="549.7" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (51 samples, 2.13%)</title><rect x="546.7" y="211.0" width="25.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="549.7" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (51 samples, 2.13%)</title><rect x="546.7" y="195.0" width="25.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="549.7" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.25%)</title><rect x="548.2" y="179.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="551.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (42 samples, 1.76%)</title><rect x="551.1" y="179.0" width="20.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="554.1" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.08%)</title><rect x="551.1" y="163.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="554.1" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.04%)</title><rect x="552.1" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (39 samples, 1.63%)</title><rect x="552.6" y="163.0" width="19.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.6" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="552.6" y="147.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="555.6" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="552.6" y="131.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.6" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="552.6" y="115.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="555.6" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="552.6" y="99.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="555.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="552.6" y="83.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="555.6" y="94.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.29%)</title><rect x="553.1" y="147.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="556.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.29%)</title><rect x="553.1" y="131.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.29%)</title><rect x="553.1" y="115.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="556.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.13%)</title><rect x="553.1" y="99.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="556.1" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.13%)</title><rect x="553.1" y="83.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="556.1" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.08%)</title><rect x="553.6" y="67.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="556.6" y="78.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.17%)</title><rect x="554.6" y="99.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="557.6" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.17%)</title><rect x="554.6" y="83.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="557.6" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.13%)</title><rect x="555.1" y="67.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="558.1" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.13%)</title><rect x="555.1" y="51.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="558.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="556.1" y="35.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="559.1" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (30 samples, 1.26%)</title><rect x="556.6" y="147.0" width="14.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="559.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (29 samples, 1.21%)</title><rect x="557.0" y="131.0" width="14.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="560.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 1.21%)</title><rect x="557.0" y="115.0" width="14.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 1.21%)</title><rect x="557.0" y="99.0" width="14.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="560.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 1.21%)</title><rect x="557.0" y="83.0" width="14.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="560.0" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="571.4" y="147.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="574.4" y="158.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="571.9" y="339.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="574.9" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.08%)</title><rect x="572.4" y="403.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="575.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.08%)</title><rect x="572.4" y="387.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.4" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="572.4" y="371.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="575.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="572.4" y="355.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="575.4" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="572.4" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="575.4" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="572.8" y="339.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="575.8" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="572.8" y="323.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="575.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="572.8" y="307.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.8" y="318.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="573.3" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.3" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="573.8" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="576.8" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="573.8" y="499.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="576.8" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="574.3" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="577.3" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="574.8" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="577.8" y="542.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="574.8" y="515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="577.8" y="526.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.08%)</title><rect x="575.3" y="531.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.3" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="576.3" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="579.3" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="576.8" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="579.8" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="577.3" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="580.3" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="577.8" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.8" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="577.8" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="580.8" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.21%)</title><rect x="578.3" y="643.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.3" y="654.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.17%)</title><rect x="578.3" y="627.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="581.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.17%)</title><rect x="578.3" y="611.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="581.3" y="622.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.17%)</title><rect x="578.3" y="595.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="581.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="580.3" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (87 samples, 3.64%)</title><rect x="580.7" y="819.0" width="43.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.7" y="830.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (87 samples, 3.64%)</title><rect x="580.7" y="803.0" width="43.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="583.7" y="814.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (87 samples, 3.64%)</title><rect x="580.7" y="787.0" width="43.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.7" y="798.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (86 samples, 3.60%)</title><rect x="581.2" y="771.0" width="42.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="584.2" y="782.0">Java..</text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="581.2" y="755.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="584.2" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="581.7" y="755.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="584.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="582.2" y="755.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="585.2" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (83 samples, 3.47%)</title><rect x="582.7" y="755.0" width="41.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="585.7" y="766.0">roc..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="583.2" y="739.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="586.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (76 samples, 3.18%)</title><rect x="583.7" y="739.0" width="37.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="586.7" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (76 samples, 3.18%)</title><rect x="583.7" y="723.0" width="37.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="586.7" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="583.7" y="707.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="586.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (1 samples, 0.04%)</title><rect x="583.7" y="691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="586.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (74 samples, 3.10%)</title><rect x="584.2" y="707.0" width="36.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="587.2" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (74 samples, 3.10%)</title><rect x="584.2" y="691.0" width="36.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="587.2" y="702.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="584.2" y="675.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="587.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.04%)</title><rect x="584.7" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="587.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (72 samples, 3.01%)</title><rect x="585.2" y="675.0" width="35.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="588.2" y="686.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="585.2" y="659.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="588.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (4 samples, 0.17%)</title><rect x="586.2" y="659.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="589.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="586.7" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="589.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.08%)</title><rect x="587.2" y="643.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="590.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.08%)</title><rect x="587.2" y="627.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="590.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="588.2" y="659.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="591.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="588.2" y="643.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="591.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="588.2" y="627.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="591.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="588.6" y="643.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="591.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (11 samples, 0.46%)</title><rect x="589.1" y="659.0" width="5.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="592.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (9 samples, 0.38%)</title><rect x="589.6" y="643.0" width="4.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="592.6" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (9 samples, 0.38%)</title><rect x="589.6" y="627.0" width="4.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="592.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (9 samples, 0.38%)</title><rect x="589.6" y="611.0" width="4.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="592.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.25%)</title><rect x="591.1" y="595.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="594.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="591.1" y="579.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="594.1" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="591.6" y="579.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="594.6" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="592.6" y="579.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="595.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="594.1" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="597.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="594.6" y="659.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="597.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="594.6" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="597.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="595.1" y="659.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="598.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="595.6" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="598.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (50 samples, 2.09%)</title><rect x="596.1" y="659.0" width="24.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="599.1" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.13%)</title><rect x="597.0" y="643.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="600.0" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="598.0" y="627.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="601.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="598.5" y="643.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="601.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (44 samples, 1.84%)</title><rect x="599.0" y="643.0" width="21.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="602.0" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="599.5" y="627.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="602.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (38 samples, 1.59%)</title><rect x="600.0" y="627.0" width="18.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="603.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="601.5" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="604.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.04%)</title><rect x="601.5" y="595.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="604.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (9 samples, 0.38%)</title><rect x="602.0" y="611.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="605.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (9 samples, 0.38%)</title><rect x="602.0" y="595.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="605.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.04%)</title><rect x="602.0" y="579.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="605.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (8 samples, 0.33%)</title><rect x="602.5" y="579.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="605.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.04%)</title><rect x="602.5" y="563.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="605.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (1 samples, 0.04%)</title><rect x="602.5" y="547.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="605.5" y="558.0"></text>
</g>
<g>
<title>__libc_pread (1 samples, 0.04%)</title><rect x="602.5" y="531.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="605.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="602.5" y="515.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="605.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="602.5" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="605.5" y="510.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.04%)</title><rect x="602.5" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="605.5" y="494.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.04%)</title><rect x="602.5" y="467.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="605.5" y="478.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="602.5" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="605.5" y="462.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.04%)</title><rect x="602.5" y="435.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="605.5" y="446.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.04%)</title><rect x="602.5" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="605.5" y="430.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.04%)</title><rect x="602.5" y="403.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="605.5" y="414.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.04%)</title><rect x="602.5" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="605.5" y="398.0"></text>
</g>
<g>
<title>generic_file_buffered_read (1 samples, 0.04%)</title><rect x="602.5" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="605.5" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.04%)</title><rect x="602.5" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="605.5" y="366.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.04%)</title><rect x="602.5" y="339.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="605.5" y="350.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.04%)</title><rect x="602.5" y="323.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="605.5" y="334.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (7 samples, 0.29%)</title><rect x="603.0" y="563.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="606.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (6 samples, 0.25%)</title><rect x="603.0" y="547.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="606.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="603.0" y="531.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="606.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.17%)</title><rect x="603.5" y="531.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="606.5" y="542.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.04%)</title><rect x="603.5" y="515.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="606.5" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="603.5" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="606.5" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="603.5" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="606.5" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="603.5" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="606.5" y="478.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="603.5" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.5" y="462.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="603.5" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="606.5" y="446.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="603.5" y="419.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="606.5" y="430.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="603.5" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="606.5" y="414.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="603.5" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="606.5" y="398.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="603.5" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="606.5" y="382.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.08%)</title><rect x="603.9" y="515.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="606.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="604.9" y="515.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="607.9" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="604.9" y="499.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="607.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.04%)</title><rect x="605.4" y="531.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="608.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.04%)</title><rect x="605.9" y="547.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="608.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (14 samples, 0.59%)</title><rect x="606.4" y="611.0" width="6.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="609.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (11 samples, 0.46%)</title><rect x="606.9" y="595.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="609.9" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="606.9" y="579.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="609.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="607.4" y="579.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="610.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="608.4" y="579.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="611.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.29%)</title><rect x="608.9" y="579.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="611.9" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="609.9" y="563.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="612.9" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="610.4" y="563.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="613.4" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="610.9" y="563.0" width="1.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="613.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="612.3" y="595.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="615.3" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="612.8" y="579.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="615.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (10 samples, 0.42%)</title><rect x="613.3" y="611.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="616.3" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="616.3" y="595.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="619.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="617.8" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="620.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.04%)</title><rect x="617.8" y="579.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="620.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="618.3" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="621.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.04%)</title><rect x="618.8" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="621.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="619.3" y="627.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="622.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (2 samples, 0.08%)</title><rect x="619.7" y="627.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="622.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="620.7" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="623.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (5 samples, 0.21%)</title><rect x="621.2" y="739.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="624.2" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="621.2" y="723.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="624.2" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.13%)</title><rect x="621.7" y="723.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="624.7" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="622.2" y="707.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="622.2" y="691.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="625.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="622.2" y="675.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="625.2" y="686.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="622.7" y="675.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="625.7" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="623.2" y="723.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="626.2" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="623.2" y="707.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="626.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="623.7" y="883.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="623.7" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="623.7" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (33 samples, 1.38%)</title><rect x="624.2" y="883.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (33 samples, 1.38%)</title><rect x="624.2" y="867.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 0.75%)</title><rect x="624.2" y="851.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (8 samples, 0.33%)</title><rect x="624.2" y="835.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.33%)</title><rect x="624.2" y="819.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.33%)</title><rect x="624.2" y="803.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.33%)</title><rect x="624.2" y="787.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.33%)</title><rect x="624.2" y="771.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.2" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="624.2" y="755.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="627.2" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="624.7" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="627.7" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.25%)</title><rect x="625.2" y="755.0" width="2.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="628.2" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.25%)</title><rect x="625.2" y="739.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="628.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.25%)</title><rect x="625.2" y="723.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="628.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.25%)</title><rect x="625.2" y="707.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="628.2" y="718.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.25%)</title><rect x="625.2" y="691.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="628.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.25%)</title><rect x="625.2" y="675.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="628.2" y="686.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.25%)</title><rect x="625.2" y="659.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="628.2" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.25%)</title><rect x="625.2" y="643.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="628.2" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.25%)</title><rect x="625.2" y="627.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="628.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.42%)</title><rect x="628.1" y="835.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.42%)</title><rect x="628.1" y="819.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.1" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="628.1" y="803.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="631.1" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="628.1" y="787.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="631.1" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="628.6" y="787.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="631.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.33%)</title><rect x="629.1" y="803.0" width="4.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="632.1" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="629.1" y="787.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="632.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.29%)</title><rect x="629.6" y="787.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="632.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.29%)</title><rect x="629.6" y="771.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="632.6" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="629.6" y="755.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="632.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.25%)</title><rect x="630.1" y="755.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="633.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.25%)</title><rect x="630.1" y="739.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="633.1" y="750.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.25%)</title><rect x="630.1" y="723.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="633.1" y="734.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.25%)</title><rect x="630.1" y="707.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="633.1" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.21%)</title><rect x="630.1" y="691.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="633.1" y="702.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.21%)</title><rect x="630.1" y="675.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="633.1" y="686.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.21%)</title><rect x="630.1" y="659.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="633.1" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.21%)</title><rect x="630.1" y="643.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.1" y="654.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.04%)</title><rect x="632.6" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="635.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="633.1" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="633.1" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="633.1" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="633.1" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="633.1" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="633.1" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.1" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="633.1" y="755.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="636.1" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="633.1" y="739.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="636.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="633.1" y="723.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="636.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="633.1" y="707.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="636.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="633.1" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="636.1" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="633.1" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="636.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="633.1" y="659.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="636.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.59%)</title><rect x="633.6" y="851.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.59%)</title><rect x="633.6" y="835.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.59%)</title><rect x="633.6" y="819.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.54%)</title><rect x="634.1" y="803.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.54%)</title><rect x="634.1" y="787.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.54%)</title><rect x="634.1" y="771.0" width="6.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="637.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.54%)</title><rect x="634.1" y="755.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="637.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.54%)</title><rect x="634.1" y="739.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="637.1" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.54%)</title><rect x="634.1" y="723.0" width="6.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="637.1" y="734.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.54%)</title><rect x="634.1" y="707.0" width="6.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.1" y="718.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.54%)</title><rect x="634.1" y="691.0" width="6.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="637.1" y="702.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.54%)</title><rect x="634.1" y="675.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="637.1" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.54%)</title><rect x="634.1" y="659.0" width="6.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="637.1" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.54%)</title><rect x="634.1" y="643.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="637.1" y="654.0"></text>
</g>
<g>
<title>[async_worker-3 tid=44754] (223 samples, 9.33%)</title><rect x="640.5" y="947.0" width="110.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="643.5" y="958.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (223 samples, 9.33%)</title><rect x="640.5" y="931.0" width="110.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.5" y="942.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (223 samples, 9.33%)</title><rect x="640.5" y="915.0" width="110.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.5" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (223 samples, 9.33%)</title><rect x="640.5" y="899.0" width="110.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.5" y="910.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (190 samples, 7.95%)</title><rect x="640.5" y="883.0" width="93.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.5" y="894.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (190 samples, 7.95%)</title><rect x="640.5" y="867.0" width="93.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.5" y="878.0">java/util/c..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (190 samples, 7.95%)</title><rect x="640.5" y="851.0" width="93.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.5" y="862.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (190 samples, 7.95%)</title><rect x="640.5" y="835.0" width="93.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.5" y="846.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="640.5" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="640.5" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="640.5" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.5" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="641.0" y="819.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="644.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (99 samples, 4.14%)</title><rect x="641.5" y="819.0" width="48.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.5" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="643.4" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="643.4" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="643.4" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (92 samples, 3.85%)</title><rect x="643.9" y="803.0" width="45.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.9" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.17%)</title><rect x="643.9" y="787.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="645.4" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="645.4" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="645.4" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="645.4" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="645.4" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.4" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="645.4" y="691.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="648.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 3.68%)</title><rect x="645.9" y="787.0" width="43.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.9" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 3.68%)</title><rect x="645.9" y="771.0" width="43.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.9" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (88 samples, 3.68%)</title><rect x="645.9" y="755.0" width="43.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.9" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (88 samples, 3.68%)</title><rect x="645.9" y="739.0" width="43.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.9" y="750.0">one/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="645.9" y="723.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="648.9" y="734.0"></text>
</g>
<g>
<title>send (87 samples, 3.64%)</title><rect x="646.4" y="723.0" width="43.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="649.4" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 3.60%)</title><rect x="646.9" y="707.0" width="42.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="649.9" y="718.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (86 samples, 3.60%)</title><rect x="646.9" y="691.0" width="42.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="649.9" y="702.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (85 samples, 3.56%)</title><rect x="647.4" y="675.0" width="42.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="650.4" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (85 samples, 3.56%)</title><rect x="647.4" y="659.0" width="42.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="650.4" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (84 samples, 3.51%)</title><rect x="647.4" y="643.0" width="41.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="650.4" y="654.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (83 samples, 3.47%)</title><rect x="647.4" y="627.0" width="41.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="650.4" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (83 samples, 3.47%)</title><rect x="647.4" y="611.0" width="41.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="650.4" y="622.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="647.4" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="650.4" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="647.9" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="650.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (81 samples, 3.39%)</title><rect x="648.4" y="595.0" width="40.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="651.4" y="606.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.25%)</title><rect x="649.4" y="579.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="652.4" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.17%)</title><rect x="649.9" y="563.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.17%)</title><rect x="649.9" y="547.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.9" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="649.9" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="652.9" y="542.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="650.4" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="653.4" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="650.9" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="653.9" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="651.3" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="654.3" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="651.8" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="654.8" y="574.0"></text>
</g>
<g>
<title>tcp_push (69 samples, 2.89%)</title><rect x="652.3" y="579.0" width="34.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="655.3" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (69 samples, 2.89%)</title><rect x="652.3" y="563.0" width="34.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="655.3" y="574.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (69 samples, 2.89%)</title><rect x="652.3" y="547.0" width="34.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="655.3" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (66 samples, 2.76%)</title><rect x="652.3" y="531.0" width="32.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="655.3" y="542.0">__..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="652.8" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.8" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (64 samples, 2.68%)</title><rect x="653.3" y="515.0" width="31.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="656.3" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (64 samples, 2.68%)</title><rect x="653.3" y="499.0" width="31.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="656.3" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (63 samples, 2.64%)</title><rect x="653.3" y="483.0" width="31.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="656.3" y="494.0">ip..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.13%)</title><rect x="653.3" y="467.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="656.3" y="478.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.13%)</title><rect x="653.3" y="451.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="656.3" y="462.0"></text>
</g>
<g>
<title>ip_output (60 samples, 2.51%)</title><rect x="654.8" y="467.0" width="29.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="657.8" y="478.0">ip..</text>
</g>
<g>
<title>ip_finish_output (60 samples, 2.51%)</title><rect x="654.8" y="451.0" width="29.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="657.8" y="462.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="654.8" y="435.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="657.8" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (58 samples, 2.43%)</title><rect x="655.8" y="435.0" width="28.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="658.8" y="446.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (58 samples, 2.43%)</title><rect x="655.8" y="419.0" width="28.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.8" y="430.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (57 samples, 2.38%)</title><rect x="655.8" y="403.0" width="28.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.8" y="414.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (57 samples, 2.38%)</title><rect x="655.8" y="387.0" width="28.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.8" y="398.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (56 samples, 2.34%)</title><rect x="656.3" y="371.0" width="27.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.3" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (56 samples, 2.34%)</title><rect x="656.3" y="355.0" width="27.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="659.3" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (56 samples, 2.34%)</title><rect x="656.3" y="339.0" width="27.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.3" y="350.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="656.3" y="323.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.3" y="334.0"></text>
</g>
<g>
<title>process_backlog (55 samples, 2.30%)</title><rect x="656.8" y="323.0" width="27.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="659.8" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (55 samples, 2.30%)</title><rect x="656.8" y="307.0" width="27.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="659.8" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (55 samples, 2.30%)</title><rect x="656.8" y="291.0" width="27.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="659.8" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (53 samples, 2.22%)</title><rect x="657.3" y="275.0" width="26.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="660.3" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (51 samples, 2.13%)</title><rect x="657.8" y="259.0" width="25.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="660.8" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (51 samples, 2.13%)</title><rect x="657.8" y="243.0" width="25.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="660.8" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 2.13%)</title><rect x="657.8" y="227.0" width="25.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="660.8" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (51 samples, 2.13%)</title><rect x="657.8" y="211.0" width="25.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="660.8" y="222.0">i..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="657.8" y="195.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="660.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="658.3" y="195.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="661.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (49 samples, 2.05%)</title><rect x="658.8" y="195.0" width="24.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="661.8" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="658.8" y="179.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="661.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (48 samples, 2.01%)</title><rect x="659.2" y="179.0" width="23.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="662.2" y="190.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (48 samples, 2.01%)</title><rect x="659.2" y="163.0" width="23.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="662.2" y="174.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="659.2" y="147.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="662.2" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="659.2" y="131.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="662.2" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="659.2" y="115.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="662.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="659.2" y="99.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="662.2" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="659.2" y="83.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="662.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="660.2" y="147.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="663.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.54%)</title><rect x="660.7" y="147.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="663.7" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="661.7" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="664.7" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="662.2" y="131.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="665.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.38%)</title><rect x="662.7" y="131.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="665.7" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.29%)</title><rect x="663.7" y="115.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="666.7" y="126.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.29%)</title><rect x="663.7" y="99.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="666.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.29%)</title><rect x="663.7" y="83.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="666.7" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.08%)</title><rect x="666.2" y="67.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="669.2" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.08%)</title><rect x="666.2" y="51.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="669.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="666.7" y="35.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="669.7" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (30 samples, 1.26%)</title><rect x="667.1" y="147.0" width="14.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="670.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (30 samples, 1.26%)</title><rect x="667.1" y="131.0" width="14.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="670.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (30 samples, 1.26%)</title><rect x="667.1" y="115.0" width="14.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="670.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 1.26%)</title><rect x="667.1" y="99.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="670.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (30 samples, 1.26%)</title><rect x="667.1" y="83.0" width="14.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="670.1" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="682.0" y="147.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="685.0" y="158.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="682.0" y="131.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="685.0" y="142.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="682.0" y="115.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.0" y="126.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="682.0" y="99.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="685.0" y="110.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="682.5" y="147.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="685.5" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="682.9" y="259.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="685.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="683.4" y="275.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="686.4" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.04%)</title><rect x="683.9" y="403.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="686.9" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.04%)</title><rect x="683.9" y="387.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="686.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="683.9" y="371.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="686.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="683.9" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="686.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="683.9" y="339.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="686.9" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="683.9" y="323.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="686.9" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="683.9" y="307.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="686.9" y="318.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="684.4" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="687.4" y="494.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="684.9" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="687.9" y="542.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="685.4" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="688.4" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="685.9" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="688.9" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="685.9" y="515.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="688.9" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="685.9" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="688.9" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="685.9" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="688.9" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="685.9" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="688.9" y="478.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="686.4" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="689.4" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.13%)</title><rect x="686.9" y="579.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="689.9" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.13%)</title><rect x="686.9" y="563.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="689.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="687.9" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.9" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="688.4" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="691.4" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="688.4" y="611.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="691.4" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="688.4" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="691.4" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="688.9" y="643.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="691.9" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="688.9" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="691.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="688.9" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="691.9" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="688.9" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="691.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="689.4" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="689.9" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="689.9" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (89 samples, 3.72%)</title><rect x="690.4" y="819.0" width="43.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.4" y="830.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (89 samples, 3.72%)</title><rect x="690.4" y="803.0" width="43.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.4" y="814.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (89 samples, 3.72%)</title><rect x="690.4" y="787.0" width="43.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.4" y="798.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (86 samples, 3.60%)</title><rect x="690.4" y="771.0" width="42.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="693.4" y="782.0">Java..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="690.4" y="755.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="693.4" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="690.8" y="755.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="693.8" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="691.3" y="755.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="694.3" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="691.8" y="755.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="694.8" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (82 samples, 3.43%)</title><rect x="692.3" y="755.0" width="40.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="695.3" y="766.0">roc..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="692.3" y="739.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="695.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (79 samples, 3.31%)</title><rect x="692.8" y="739.0" width="39.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="695.8" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (77 samples, 3.22%)</title><rect x="692.8" y="723.0" width="38.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="695.8" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="692.8" y="707.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="695.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="692.8" y="691.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="695.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (76 samples, 3.18%)</title><rect x="693.3" y="707.0" width="37.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="696.3" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (76 samples, 3.18%)</title><rect x="693.3" y="691.0" width="37.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="696.3" y="702.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="693.3" y="675.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="696.3" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="693.8" y="675.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="696.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.08%)</title><rect x="694.8" y="675.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="697.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (70 samples, 2.93%)</title><rect x="695.8" y="675.0" width="34.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="698.8" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="695.8" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="698.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.04%)</title><rect x="696.3" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="699.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (9 samples, 0.38%)</title><rect x="696.8" y="659.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="699.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (9 samples, 0.38%)</title><rect x="696.8" y="643.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="699.8" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (8 samples, 0.33%)</title><rect x="696.8" y="627.0" width="3.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="699.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 0.29%)</title><rect x="697.3" y="611.0" width="3.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="700.3" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="698.7" y="595.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="701.7" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="699.2" y="595.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="702.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="699.7" y="595.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="702.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="699.7" y="579.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="702.7" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="700.7" y="627.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="703.7" y="638.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="700.7" y="611.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="703.7" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="700.7" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="703.7" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="700.7" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="703.7" y="590.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="700.7" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.7" y="574.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="700.7" y="547.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.7" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="700.7" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="703.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.04%)</title><rect x="701.2" y="659.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="704.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.08%)</title><rect x="701.7" y="659.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="704.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.08%)</title><rect x="701.7" y="643.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="704.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="702.7" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="705.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (2 samples, 0.08%)</title><rect x="703.2" y="659.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="706.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="704.2" y="659.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="707.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (51 samples, 2.13%)</title><rect x="704.7" y="659.0" width="25.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="707.7" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.13%)</title><rect x="705.7" y="643.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="708.7" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="706.2" y="627.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="709.2" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="706.2" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="709.2" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="706.6" y="627.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="709.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (1 samples, 0.04%)</title><rect x="707.1" y="643.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="710.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="707.6" y="643.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="710.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (44 samples, 1.84%)</title><rect x="708.1" y="643.0" width="21.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="711.1" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="708.1" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="711.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (40 samples, 1.67%)</title><rect x="708.6" y="627.0" width="19.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="711.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (2 samples, 0.08%)</title><rect x="709.1" y="611.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="712.1" y="622.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="709.1" y="595.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="712.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="709.6" y="595.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="712.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (10 samples, 0.42%)</title><rect x="710.1" y="611.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="713.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (7 samples, 0.29%)</title><rect x="710.6" y="595.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="713.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (7 samples, 0.29%)</title><rect x="710.6" y="579.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="713.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (1 samples, 0.04%)</title><rect x="711.1" y="563.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="714.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (5 samples, 0.21%)</title><rect x="711.6" y="563.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="714.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (5 samples, 0.21%)</title><rect x="711.6" y="547.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="714.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="711.6" y="531.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="714.6" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="711.6" y="515.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="714.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.17%)</title><rect x="712.1" y="531.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="715.1" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="712.1" y="515.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="715.1" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="712.1" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="715.1" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="712.1" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.1" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="712.1" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="715.1" y="478.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="712.1" y="451.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="715.1" y="462.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="712.1" y="435.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.1" y="446.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="712.1" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.1" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="712.1" y="403.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="715.1" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="712.1" y="387.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.1" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="712.6" y="515.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="715.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.08%)</title><rect x="713.1" y="515.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="716.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.08%)</title><rect x="713.1" y="499.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="716.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.08%)</title><rect x="714.1" y="595.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="717.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (8 samples, 0.33%)</title><rect x="715.0" y="611.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="718.0" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="715.5" y="595.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="718.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (4 samples, 0.17%)</title><rect x="716.0" y="595.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="719.0" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="716.0" y="579.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="719.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="717.0" y="579.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="720.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="717.5" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="720.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="717.5" y="563.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="720.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="718.0" y="595.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="721.0" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="718.5" y="579.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="721.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="719.0" y="611.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="722.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (17 samples, 0.71%)</title><rect x="719.5" y="611.0" width="8.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="722.5" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="724.9" y="595.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="727.9" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="725.9" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="728.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="726.4" y="595.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="729.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="726.4" y="579.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="729.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="726.9" y="595.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="729.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="727.4" y="579.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="730.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="727.9" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="730.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.08%)</title><rect x="728.4" y="627.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="731.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (1 samples, 0.04%)</title><rect x="729.4" y="627.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="732.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (1 samples, 0.04%)</title><rect x="729.8" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="732.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.04%)</title><rect x="730.3" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="733.3" y="686.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="730.8" y="723.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="733.8" y="734.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="731.3" y="723.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="734.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.08%)</title><rect x="731.8" y="739.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="734.8" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="731.8" y="723.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="734.8" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="731.8" y="707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="734.8" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="732.3" y="723.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="735.3" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="732.3" y="707.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="735.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="732.3" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="735.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="732.3" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="735.3" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="732.3" y="659.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="735.3" y="670.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="732.8" y="771.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="735.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.04%)</title><rect x="733.3" y="771.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="736.3" y="782.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="733.8" y="771.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="736.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (33 samples, 1.38%)</title><rect x="734.3" y="883.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (32 samples, 1.34%)</title><rect x="734.8" y="867.0" width="15.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.59%)</title><rect x="734.8" y="851.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.21%)</title><rect x="734.8" y="835.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.21%)</title><rect x="734.8" y="819.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.17%)</title><rect x="735.3" y="803.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.17%)</title><rect x="735.3" y="787.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.17%)</title><rect x="735.3" y="771.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.17%)</title><rect x="735.3" y="755.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="738.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.17%)</title><rect x="735.3" y="739.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="738.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.17%)</title><rect x="735.3" y="723.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="738.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.17%)</title><rect x="735.3" y="707.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="738.3" y="718.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.17%)</title><rect x="735.3" y="691.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.3" y="702.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.17%)</title><rect x="735.3" y="675.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="738.3" y="686.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.17%)</title><rect x="735.3" y="659.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="738.3" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.17%)</title><rect x="735.3" y="643.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="738.3" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.17%)</title><rect x="735.3" y="627.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="738.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.38%)</title><rect x="737.3" y="835.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.38%)</title><rect x="737.3" y="819.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.3" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="737.7" y="803.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="740.7" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="737.7" y="787.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="740.7" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="737.7" y="771.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="740.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.29%)</title><rect x="738.2" y="803.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="741.2" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.29%)</title><rect x="738.2" y="787.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="741.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.21%)</title><rect x="739.2" y="771.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="742.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.21%)</title><rect x="739.2" y="755.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="742.2" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.21%)</title><rect x="739.2" y="739.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.2" y="750.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.21%)</title><rect x="739.2" y="723.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="742.2" y="734.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.21%)</title><rect x="739.2" y="707.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="742.2" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.13%)</title><rect x="739.2" y="691.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="742.2" y="702.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.13%)</title><rect x="739.2" y="675.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="742.2" y="686.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.13%)</title><rect x="739.2" y="659.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="742.2" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.13%)</title><rect x="739.2" y="643.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.2" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="740.7" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="743.7" y="702.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="741.2" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="744.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.08%)</title><rect x="741.7" y="851.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.08%)</title><rect x="741.7" y="835.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.08%)</title><rect x="741.7" y="819.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.08%)</title><rect x="741.7" y="803.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.08%)</title><rect x="741.7" y="787.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.08%)</title><rect x="741.7" y="771.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.7" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="741.7" y="755.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="744.7" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="741.7" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="744.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="742.2" y="755.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="745.2" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="742.2" y="739.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="745.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.67%)</title><rect x="742.7" y="851.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.67%)</title><rect x="742.7" y="835.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.67%)</title><rect x="742.7" y="819.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.67%)</title><rect x="742.7" y="803.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.67%)</title><rect x="742.7" y="787.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.7" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.67%)</title><rect x="742.7" y="771.0" width="7.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="745.7" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.67%)</title><rect x="742.7" y="755.0" width="7.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="745.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.67%)</title><rect x="742.7" y="739.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="745.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.67%)</title><rect x="742.7" y="723.0" width="7.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="745.7" y="734.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.67%)</title><rect x="742.7" y="707.0" width="7.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.7" y="718.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.67%)</title><rect x="742.7" y="691.0" width="7.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.7" y="702.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.63%)</title><rect x="743.2" y="675.0" width="7.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="746.2" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.63%)</title><rect x="743.2" y="659.0" width="7.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="746.2" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.63%)</title><rect x="743.2" y="643.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="746.2" y="654.0"></text>
</g>
<g>
<title>[async_worker-4 tid=44752] (223 samples, 9.33%)</title><rect x="750.6" y="947.0" width="110.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="753.6" y="958.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (223 samples, 9.33%)</title><rect x="750.6" y="931.0" width="110.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.6" y="942.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (223 samples, 9.33%)</title><rect x="750.6" y="915.0" width="110.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.6" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (223 samples, 9.33%)</title><rect x="750.6" y="899.0" width="110.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.6" y="910.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (192 samples, 8.03%)</title><rect x="750.6" y="883.0" width="94.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.6" y="894.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (192 samples, 8.03%)</title><rect x="750.6" y="867.0" width="94.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.6" y="878.0">java/util/c..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (192 samples, 8.03%)</title><rect x="750.6" y="851.0" width="94.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.6" y="862.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (192 samples, 8.03%)</title><rect x="750.6" y="835.0" width="94.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.6" y="846.0">ru/mail/pol..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="751.1" y="819.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="754.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (91 samples, 3.81%)</title><rect x="751.6" y="819.0" width="44.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.6" y="830.0">one/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="753.1" y="803.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="756.1" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="753.1" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="756.1" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.04%)</title><rect x="753.1" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="756.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (87 samples, 3.64%)</title><rect x="753.5" y="803.0" width="43.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.5" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="753.5" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (86 samples, 3.60%)</title><rect x="754.0" y="787.0" width="42.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.0" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (86 samples, 3.60%)</title><rect x="754.0" y="771.0" width="42.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.0" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (86 samples, 3.60%)</title><rect x="754.0" y="755.0" width="42.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.0" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (84 samples, 3.51%)</title><rect x="755.0" y="739.0" width="41.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="758.0" y="750.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.13%)</title><rect x="755.0" y="723.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="758.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.13%)</title><rect x="755.0" y="707.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="758.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="756.0" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="759.0" y="702.0"></text>
</g>
<g>
<title>send (81 samples, 3.39%)</title><rect x="756.5" y="723.0" width="40.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="759.5" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 3.35%)</title><rect x="757.0" y="707.0" width="39.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="760.0" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (80 samples, 3.35%)</title><rect x="757.0" y="691.0" width="39.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="760.0" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (80 samples, 3.35%)</title><rect x="757.0" y="675.0" width="39.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="760.0" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (80 samples, 3.35%)</title><rect x="757.0" y="659.0" width="39.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="760.0" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (78 samples, 3.26%)</title><rect x="758.0" y="643.0" width="38.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="761.0" y="654.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="758.0" y="627.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="761.0" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (77 samples, 3.22%)</title><rect x="758.5" y="627.0" width="38.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="761.5" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (77 samples, 3.22%)</title><rect x="758.5" y="611.0" width="38.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="761.5" y="622.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (77 samples, 3.22%)</title><rect x="758.5" y="595.0" width="38.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="761.5" y="606.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.25%)</title><rect x="759.0" y="579.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="762.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.25%)</title><rect x="759.0" y="563.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="762.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.13%)</title><rect x="759.0" y="547.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="762.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.13%)</title><rect x="759.0" y="531.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="762.0" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="760.0" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="763.0" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="760.5" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="763.5" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="761.0" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="764.0" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="761.4" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="764.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (68 samples, 2.85%)</title><rect x="761.9" y="579.0" width="33.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="764.9" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (68 samples, 2.85%)</title><rect x="761.9" y="563.0" width="33.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="764.9" y="574.0">__..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="761.9" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.9" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (67 samples, 2.80%)</title><rect x="762.4" y="547.0" width="33.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="765.4" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (64 samples, 2.68%)</title><rect x="762.9" y="531.0" width="31.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="765.9" y="542.0">__..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="763.4" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="766.4" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (60 samples, 2.51%)</title><rect x="763.9" y="515.0" width="29.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="766.9" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (60 samples, 2.51%)</title><rect x="763.9" y="499.0" width="29.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="766.9" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (60 samples, 2.51%)</title><rect x="763.9" y="483.0" width="29.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="766.9" y="494.0">ip..</text>
</g>
<g>
<title>ip_output (60 samples, 2.51%)</title><rect x="763.9" y="467.0" width="29.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="766.9" y="478.0">ip..</text>
</g>
<g>
<title>ip_finish_output (59 samples, 2.47%)</title><rect x="764.4" y="451.0" width="29.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="767.4" y="462.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (59 samples, 2.47%)</title><rect x="764.4" y="435.0" width="29.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="767.4" y="446.0">__..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="764.4" y="419.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="767.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (58 samples, 2.43%)</title><rect x="764.9" y="419.0" width="28.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="767.9" y="430.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (51 samples, 2.13%)</title><rect x="765.4" y="403.0" width="25.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="768.4" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (51 samples, 2.13%)</title><rect x="765.4" y="387.0" width="25.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="768.4" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (51 samples, 2.13%)</title><rect x="765.4" y="371.0" width="25.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="768.4" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (51 samples, 2.13%)</title><rect x="765.4" y="355.0" width="25.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="768.4" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (51 samples, 2.13%)</title><rect x="765.4" y="339.0" width="25.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="768.4" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (51 samples, 2.13%)</title><rect x="765.4" y="323.0" width="25.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="768.4" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (50 samples, 2.09%)</title><rect x="765.9" y="307.0" width="24.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="768.9" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (50 samples, 2.09%)</title><rect x="765.9" y="291.0" width="24.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="768.9" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.08%)</title><rect x="765.9" y="275.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="768.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (48 samples, 2.01%)</title><rect x="766.9" y="275.0" width="23.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="769.9" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (48 samples, 2.01%)</title><rect x="766.9" y="259.0" width="23.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="769.9" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (48 samples, 2.01%)</title><rect x="766.9" y="243.0" width="23.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="769.9" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (48 samples, 2.01%)</title><rect x="766.9" y="227.0" width="23.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="769.9" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (48 samples, 2.01%)</title><rect x="766.9" y="211.0" width="23.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="769.9" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 2.01%)</title><rect x="766.9" y="195.0" width="23.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="769.9" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.17%)</title><rect x="767.4" y="179.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="770.4" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.08%)</title><rect x="768.4" y="163.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="771.4" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="769.3" y="179.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="772.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (41 samples, 1.72%)</title><rect x="769.8" y="179.0" width="20.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="772.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (41 samples, 1.72%)</title><rect x="769.8" y="163.0" width="20.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="772.8" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="770.8" y="147.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="773.8" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="770.8" y="131.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="773.8" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="770.8" y="115.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="773.8" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="770.8" y="99.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="773.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="770.8" y="83.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="773.8" y="94.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="771.3" y="83.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="774.3" y="94.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="771.3" y="67.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="774.3" y="78.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.42%)</title><rect x="771.8" y="147.0" width="5.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="774.8" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="771.8" y="131.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="774.8" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.33%)</title><rect x="772.3" y="131.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="775.3" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.33%)</title><rect x="772.3" y="115.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="775.3" y="126.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.29%)</title><rect x="772.3" y="99.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="775.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.29%)</title><rect x="772.3" y="83.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="775.3" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="775.3" y="67.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="778.3" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="775.3" y="51.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="778.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="775.3" y="35.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="778.3" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="775.8" y="99.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="778.8" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="776.3" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="779.3" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (24 samples, 1.00%)</title><rect x="776.8" y="147.0" width="11.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="779.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (24 samples, 1.00%)</title><rect x="776.8" y="131.0" width="11.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (24 samples, 1.00%)</title><rect x="776.8" y="115.0" width="11.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="779.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (24 samples, 1.00%)</title><rect x="776.8" y="99.0" width="11.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="779.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 1.00%)</title><rect x="776.8" y="83.0" width="11.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="779.8" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="788.6" y="147.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="791.6" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="789.1" y="147.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="792.1" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="789.6" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="792.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="790.1" y="179.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="793.1" y="190.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.25%)</title><rect x="790.6" y="403.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="793.6" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.25%)</title><rect x="790.6" y="387.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="793.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.17%)</title><rect x="791.6" y="371.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="794.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.13%)</title><rect x="792.1" y="355.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="795.1" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="792.1" y="339.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="795.1" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.08%)</title><rect x="792.6" y="339.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="795.6" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="792.6" y="323.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="795.6" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="793.0" y="323.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="796.0" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="793.0" y="307.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="796.0" y="318.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="793.5" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="796.5" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="794.0" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="797.0" y="526.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="794.5" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="797.5" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="795.0" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="798.0" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="795.0" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="798.0" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="795.0" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="798.0" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="795.0" y="483.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="798.0" y="494.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="795.5" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="798.5" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="796.0" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="799.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="796.0" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="799.0" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="796.0" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="799.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (99 samples, 4.14%)</title><rect x="796.5" y="819.0" width="48.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.5" y="830.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (99 samples, 4.14%)</title><rect x="796.5" y="803.0" width="48.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.5" y="814.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (98 samples, 4.10%)</title><rect x="797.0" y="787.0" width="48.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.0" y="798.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (92 samples, 3.85%)</title><rect x="798.0" y="771.0" width="45.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="801.0" y="782.0">Java..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (92 samples, 3.85%)</title><rect x="798.0" y="755.0" width="45.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="801.0" y="766.0">rock..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="798.0" y="739.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="801.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (85 samples, 3.56%)</title><rect x="798.5" y="739.0" width="41.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="801.5" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (85 samples, 3.56%)</title><rect x="798.5" y="723.0" width="41.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="801.5" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.08%)</title><rect x="799.0" y="707.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="802.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.08%)</title><rect x="799.0" y="691.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="802.0" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="799.0" y="675.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="802.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="799.0" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="802.0" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="799.0" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="802.0" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="799.0" y="627.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="802.0" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="799.0" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="802.0" y="622.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="799.0" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="802.0" y="606.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="799.0" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="802.0" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="799.0" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="802.0" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="799.0" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="802.0" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="799.5" y="675.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="802.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (82 samples, 3.43%)</title><rect x="800.0" y="707.0" width="40.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="803.0" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (81 samples, 3.39%)</title><rect x="800.0" y="691.0" width="39.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="803.0" y="702.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.04%)</title><rect x="800.0" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="803.0" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="800.5" y="675.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="803.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="801.4" y="675.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="804.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="801.9" y="675.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="804.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.04%)</title><rect x="802.4" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="805.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (73 samples, 3.05%)</title><rect x="802.9" y="675.0" width="36.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="805.9" y="686.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="803.4" y="659.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="806.4" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="803.9" y="659.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="806.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.08%)</title><rect x="804.4" y="659.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="807.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="804.4" y="643.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="807.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="804.9" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="807.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="805.4" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="808.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="805.4" y="643.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="808.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="805.4" y="627.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="808.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.04%)</title><rect x="805.9" y="659.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="808.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (13 samples, 0.54%)</title><rect x="806.4" y="659.0" width="6.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="809.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (11 samples, 0.46%)</title><rect x="806.9" y="643.0" width="5.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="809.9" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (11 samples, 0.46%)</title><rect x="806.9" y="627.0" width="5.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="809.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (11 samples, 0.46%)</title><rect x="806.9" y="611.0" width="5.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="809.9" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="808.8" y="595.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="811.8" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="809.8" y="595.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="812.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.13%)</title><rect x="810.8" y="595.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="813.8" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.13%)</title><rect x="810.8" y="579.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="813.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="812.3" y="643.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="815.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (53 samples, 2.22%)</title><rect x="812.8" y="659.0" width="26.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="815.8" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (2 samples, 0.08%)</title><rect x="813.3" y="643.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="816.3" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="813.3" y="627.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="816.3" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="813.8" y="627.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="816.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (50 samples, 2.09%)</title><rect x="814.3" y="643.0" width="24.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="817.3" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="814.3" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="817.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (48 samples, 2.01%)</title><rect x="814.8" y="627.0" width="23.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="817.8" y="638.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="815.8" y="611.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="818.8" y="622.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="816.3" y="611.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="819.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="816.7" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="819.7" y="622.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="816.7" y="595.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="819.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (13 samples, 0.54%)</title><rect x="817.2" y="611.0" width="6.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="820.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (2 samples, 0.08%)</title><rect x="817.7" y="595.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="820.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (1 samples, 0.04%)</title><rect x="818.7" y="595.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="821.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (9 samples, 0.38%)</title><rect x="819.2" y="595.0" width="4.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="822.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (9 samples, 0.38%)</title><rect x="819.2" y="579.0" width="4.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="822.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (1 samples, 0.04%)</title><rect x="819.2" y="563.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="822.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="819.2" y="547.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="822.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (8 samples, 0.33%)</title><rect x="819.7" y="563.0" width="4.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="822.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (7 samples, 0.29%)</title><rect x="819.7" y="547.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="822.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="819.7" y="531.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="822.7" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="819.7" y="515.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="822.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.17%)</title><rect x="820.2" y="531.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="823.2" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.08%)</title><rect x="820.2" y="515.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="823.2" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="820.2" y="499.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="823.2" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="820.2" y="483.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="823.2" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="820.2" y="467.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="823.2" y="478.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="820.2" y="451.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="823.2" y="462.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.08%)</title><rect x="820.2" y="435.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="823.2" y="446.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.08%)</title><rect x="820.2" y="419.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="823.2" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.08%)</title><rect x="820.2" y="403.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="823.2" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="820.2" y="387.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="823.2" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="821.2" y="515.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="824.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="821.7" y="515.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="824.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.08%)</title><rect x="822.2" y="531.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="825.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="823.2" y="547.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="826.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (5 samples, 0.21%)</title><rect x="823.7" y="611.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="826.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (4 samples, 0.17%)</title><rect x="823.7" y="595.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="826.7" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="823.7" y="579.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="826.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="824.2" y="579.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="827.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="824.6" y="579.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="827.6" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="824.6" y="563.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="827.6" y="574.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="825.1" y="563.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="828.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="825.6" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="828.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (2 samples, 0.08%)</title><rect x="826.1" y="611.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="829.1" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="826.6" y="595.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="829.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (19 samples, 0.79%)</title><rect x="827.1" y="611.0" width="9.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="830.1" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="830.6" y="595.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="833.6" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="831.1" y="595.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="834.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="832.1" y="595.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="835.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (2 samples, 0.08%)</title><rect x="833.0" y="595.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="836.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="834.0" y="595.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="837.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.04%)</title><rect x="834.0" y="579.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="837.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.17%)</title><rect x="834.5" y="595.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="837.5" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="835.0" y="579.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="838.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="836.5" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="839.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (1 samples, 0.04%)</title><rect x="837.0" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="840.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="837.5" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="840.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="838.0" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="841.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="838.5" y="627.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="841.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.04%)</title><rect x="839.0" y="675.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="842.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="839.5" y="675.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="842.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.04%)</title><rect x="839.9" y="691.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="842.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (6 samples, 0.25%)</title><rect x="840.4" y="739.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="843.4" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="840.4" y="723.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="843.4" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.17%)</title><rect x="840.9" y="723.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="843.9" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.17%)</title><rect x="840.9" y="707.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="843.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.17%)</title><rect x="840.9" y="691.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="843.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.13%)</title><rect x="840.9" y="675.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="843.9" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="840.9" y="659.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="843.9" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.08%)</title><rect x="841.4" y="659.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="844.4" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="842.4" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="845.4" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="842.9" y="723.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="845.9" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="842.9" y="707.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="845.9" y="718.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.17%)</title><rect x="843.4" y="771.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="846.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (31 samples, 1.30%)</title><rect x="845.4" y="883.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (31 samples, 1.30%)</title><rect x="845.4" y="867.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.59%)</title><rect x="845.4" y="851.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.25%)</title><rect x="845.4" y="835.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.25%)</title><rect x="845.4" y="819.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.25%)</title><rect x="845.4" y="803.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.25%)</title><rect x="845.4" y="787.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.25%)</title><rect x="845.4" y="771.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.4" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.25%)</title><rect x="845.4" y="755.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="848.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.25%)</title><rect x="845.4" y="739.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="848.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="845.4" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="848.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.21%)</title><rect x="845.9" y="723.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="848.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.21%)</title><rect x="845.9" y="707.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="848.9" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.21%)</title><rect x="845.9" y="691.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.9" y="702.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.21%)</title><rect x="845.9" y="675.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="848.9" y="686.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.21%)</title><rect x="845.9" y="659.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="848.9" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.21%)</title><rect x="845.9" y="643.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="848.9" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.21%)</title><rect x="845.9" y="627.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="848.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.33%)</title><rect x="848.3" y="835.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.33%)</title><rect x="848.3" y="819.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.3" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="848.3" y="803.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="851.3" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="848.3" y="787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="851.3" y="798.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="848.3" y="771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="851.3" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="848.8" y="787.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="851.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.25%)</title><rect x="849.3" y="803.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="852.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.21%)</title><rect x="849.3" y="787.0" width="2.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="852.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.21%)</title><rect x="849.3" y="771.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="852.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="849.3" y="755.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="852.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.17%)</title><rect x="849.8" y="755.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="852.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.17%)</title><rect x="849.8" y="739.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="852.8" y="750.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.17%)</title><rect x="849.8" y="723.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="852.8" y="734.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.17%)</title><rect x="849.8" y="707.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="852.8" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.13%)</title><rect x="849.8" y="691.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="852.8" y="702.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.13%)</title><rect x="849.8" y="675.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="852.8" y="686.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.13%)</title><rect x="849.8" y="659.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="852.8" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.13%)</title><rect x="849.8" y="643.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="852.8" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="851.3" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="854.3" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="851.8" y="787.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="854.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.13%)</title><rect x="852.3" y="851.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.13%)</title><rect x="852.3" y="835.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.13%)</title><rect x="852.3" y="819.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.13%)</title><rect x="852.3" y="803.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.13%)</title><rect x="852.3" y="787.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.13%)</title><rect x="852.3" y="771.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.3" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="852.8" y="755.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="855.8" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="852.8" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="855.8" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="852.8" y="723.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="855.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="853.3" y="755.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="856.3" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="853.3" y="739.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="856.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.59%)</title><rect x="853.8" y="851.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.59%)</title><rect x="853.8" y="835.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.59%)</title><rect x="853.8" y="819.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.59%)</title><rect x="853.8" y="803.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.59%)</title><rect x="853.8" y="787.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.8" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.59%)</title><rect x="853.8" y="771.0" width="6.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="856.8" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.59%)</title><rect x="853.8" y="755.0" width="6.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="856.8" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.59%)</title><rect x="853.8" y="739.0" width="6.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="856.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.59%)</title><rect x="853.8" y="723.0" width="6.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.8" y="734.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.59%)</title><rect x="853.8" y="707.0" width="6.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="856.8" y="718.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.54%)</title><rect x="853.8" y="691.0" width="6.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="856.8" y="702.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.54%)</title><rect x="853.8" y="675.0" width="6.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="856.8" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.54%)</title><rect x="853.8" y="659.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="856.8" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.54%)</title><rect x="853.8" y="643.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="856.8" y="654.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="860.2" y="691.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="863.2" y="702.0"></text>
</g>
<g>
<title>[async_worker-5 tid=44751] (221 samples, 9.25%)</title><rect x="860.7" y="947.0" width="109.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="863.7" y="958.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (221 samples, 9.25%)</title><rect x="860.7" y="931.0" width="109.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.7" y="942.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (221 samples, 9.25%)</title><rect x="860.7" y="915.0" width="109.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.7" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (221 samples, 9.25%)</title><rect x="860.7" y="899.0" width="109.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.7" y="910.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (183 samples, 7.66%)</title><rect x="860.7" y="883.0" width="90.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.7" y="894.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (182 samples, 7.62%)</title><rect x="860.7" y="867.0" width="89.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.7" y="878.0">java/util/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (182 samples, 7.62%)</title><rect x="860.7" y="851.0" width="89.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.7" y="862.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (182 samples, 7.62%)</title><rect x="860.7" y="835.0" width="89.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.7" y="846.0">ru/mail/po..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="862.2" y="819.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="865.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (97 samples, 4.06%)</title><rect x="862.7" y="819.0" width="47.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.7" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="862.7" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="862.7" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="862.7" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (95 samples, 3.97%)</title><rect x="863.2" y="803.0" width="46.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.2" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="863.2" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="863.6" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="863.6" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="863.6" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="866.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="863.6" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="863.6" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 3.89%)</title><rect x="864.1" y="787.0" width="46.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.1" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 3.89%)</title><rect x="864.1" y="771.0" width="46.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.1" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (92 samples, 3.85%)</title><rect x="864.6" y="755.0" width="45.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="867.6" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (92 samples, 3.85%)</title><rect x="864.6" y="739.0" width="45.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.6" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="864.6" y="723.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="867.6" y="734.0"></text>
</g>
<g>
<title>send (90 samples, 3.77%)</title><rect x="865.6" y="723.0" width="44.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="868.6" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 3.68%)</title><rect x="866.6" y="707.0" width="43.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.6" y="718.0">entr..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.08%)</title><rect x="866.6" y="691.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="869.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (86 samples, 3.60%)</title><rect x="867.6" y="691.0" width="42.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="870.6" y="702.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (86 samples, 3.60%)</title><rect x="867.6" y="675.0" width="42.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="870.6" y="686.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (84 samples, 3.51%)</title><rect x="867.6" y="659.0" width="41.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.6" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (83 samples, 3.47%)</title><rect x="867.6" y="643.0" width="41.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="870.6" y="654.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (83 samples, 3.47%)</title><rect x="867.6" y="627.0" width="41.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="870.6" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (83 samples, 3.47%)</title><rect x="867.6" y="611.0" width="41.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="870.6" y="622.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="867.6" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="870.6" y="606.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="868.1" y="595.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="871.1" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="868.6" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="871.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (80 samples, 3.35%)</title><rect x="869.1" y="595.0" width="39.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="872.1" y="606.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.08%)</title><rect x="870.1" y="579.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="873.1" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.08%)</title><rect x="870.1" y="563.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="873.1" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.38%)</title><rect x="871.1" y="579.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="874.1" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.38%)</title><rect x="871.1" y="563.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.25%)</title><rect x="871.1" y="547.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="874.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.13%)</title><rect x="871.1" y="531.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="874.1" y="542.0"></text>
</g>
<g>
<title>memset (3 samples, 0.13%)</title><rect x="872.5" y="531.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="875.5" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="874.0" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="877.0" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="874.5" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="877.5" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="874.5" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="877.5" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="875.0" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="878.0" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="875.5" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="878.5" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="875.5" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="878.5" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.08%)</title><rect x="876.0" y="579.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="879.0" y="590.0"></text>
</g>
<g>
<title>tcp_push (64 samples, 2.68%)</title><rect x="877.0" y="579.0" width="31.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="880.0" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (63 samples, 2.64%)</title><rect x="877.0" y="563.0" width="31.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="880.0" y="574.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (63 samples, 2.64%)</title><rect x="877.0" y="547.0" width="31.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="880.0" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (57 samples, 2.38%)</title><rect x="877.0" y="531.0" width="28.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="880.0" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (53 samples, 2.22%)</title><rect x="877.5" y="515.0" width="26.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="880.5" y="526.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (53 samples, 2.22%)</title><rect x="877.5" y="499.0" width="26.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.5" y="510.0">_..</text>
</g>
<g>
<title>ip_local_out (52 samples, 2.18%)</title><rect x="878.0" y="483.0" width="25.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="881.0" y="494.0">i..</text>
</g>
<g>
<title>ip_output (52 samples, 2.18%)</title><rect x="878.0" y="467.0" width="25.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="881.0" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (52 samples, 2.18%)</title><rect x="878.0" y="451.0" width="25.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="881.0" y="462.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="878.0" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="881.0" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (51 samples, 2.13%)</title><rect x="878.5" y="435.0" width="25.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="881.5" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (51 samples, 2.13%)</title><rect x="878.5" y="419.0" width="25.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="881.5" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 1.92%)</title><rect x="879.9" y="403.0" width="22.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="882.9" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (46 samples, 1.92%)</title><rect x="879.9" y="387.0" width="22.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="882.9" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (46 samples, 1.92%)</title><rect x="879.9" y="371.0" width="22.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="882.9" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (45 samples, 1.88%)</title><rect x="879.9" y="355.0" width="22.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="882.9" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (45 samples, 1.88%)</title><rect x="879.9" y="339.0" width="22.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="882.9" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (43 samples, 1.80%)</title><rect x="880.9" y="323.0" width="21.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="883.9" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (43 samples, 1.80%)</title><rect x="880.9" y="307.0" width="21.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="883.9" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (43 samples, 1.80%)</title><rect x="880.9" y="291.0" width="21.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="883.9" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="880.9" y="275.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="883.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (42 samples, 1.76%)</title><rect x="881.4" y="275.0" width="20.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="884.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (42 samples, 1.76%)</title><rect x="881.4" y="259.0" width="20.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="884.4" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (42 samples, 1.76%)</title><rect x="881.4" y="243.0" width="20.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (42 samples, 1.76%)</title><rect x="881.4" y="227.0" width="20.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="884.4" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (42 samples, 1.76%)</title><rect x="881.4" y="211.0" width="20.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="884.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (42 samples, 1.76%)</title><rect x="881.4" y="195.0" width="20.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.4" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.21%)</title><rect x="881.9" y="179.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.9" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="884.4" y="179.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="887.4" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="884.4" y="163.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="887.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (35 samples, 1.46%)</title><rect x="884.9" y="179.0" width="17.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="887.9" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.08%)</title><rect x="884.9" y="163.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="887.9" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (33 samples, 1.38%)</title><rect x="885.9" y="163.0" width="16.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="888.9" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="886.9" y="147.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="889.9" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="886.9" y="131.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="889.9" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="886.9" y="115.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="889.9" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="886.9" y="99.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="889.9" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="887.3" y="83.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="890.3" y="94.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.21%)</title><rect x="887.8" y="147.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="890.8" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.17%)</title><rect x="888.3" y="131.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="891.3" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.13%)</title><rect x="888.3" y="115.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="891.3" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="888.3" y="99.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="891.3" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="888.3" y="83.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="891.3" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="888.8" y="99.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="891.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.08%)</title><rect x="888.8" y="83.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="891.8" y="94.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="889.8" y="115.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="892.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (23 samples, 0.96%)</title><rect x="890.3" y="147.0" width="11.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="893.3" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (23 samples, 0.96%)</title><rect x="890.3" y="131.0" width="11.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="893.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (23 samples, 0.96%)</title><rect x="890.3" y="115.0" width="11.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="893.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 0.96%)</title><rect x="890.3" y="99.0" width="11.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="893.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.96%)</title><rect x="890.3" y="83.0" width="11.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="893.3" y="94.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="901.7" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="904.7" y="158.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="902.2" y="355.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="905.2" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.08%)</title><rect x="902.7" y="403.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="905.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.08%)</title><rect x="902.7" y="387.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="905.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="902.7" y="371.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="905.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="902.7" y="355.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="905.7" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="902.7" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="905.7" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="902.7" y="323.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="905.7" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="902.7" y="307.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="905.7" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="903.1" y="339.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="906.1" y="350.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.08%)</title><rect x="903.6" y="515.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="906.6" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="904.1" y="499.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="907.1" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="904.1" y="483.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="907.1" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="904.6" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="907.6" y="526.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="905.1" y="531.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="908.1" y="542.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.08%)</title><rect x="905.1" y="515.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="908.1" y="526.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.08%)</title><rect x="905.1" y="499.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="908.1" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.08%)</title><rect x="906.1" y="531.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="909.1" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.08%)</title><rect x="906.1" y="515.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="909.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="906.1" y="499.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="909.1" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="906.1" y="483.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="909.1" y="494.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.04%)</title><rect x="907.1" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="910.1" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="907.6" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="910.6" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="908.1" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="911.1" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="908.6" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="911.6" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="908.6" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="911.6" y="638.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="909.1" y="659.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="912.1" y="670.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="909.6" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="912.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="910.1" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (81 samples, 3.39%)</title><rect x="910.6" y="819.0" width="39.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.6" y="830.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (81 samples, 3.39%)</title><rect x="910.6" y="803.0" width="39.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.6" y="814.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (81 samples, 3.39%)</title><rect x="910.6" y="787.0" width="39.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.6" y="798.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (80 samples, 3.35%)</title><rect x="910.6" y="771.0" width="39.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="913.6" y="782.0">Jav..</text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="910.6" y="755.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="913.6" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (79 samples, 3.31%)</title><rect x="911.0" y="755.0" width="39.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="914.0" y="766.0">roc..</text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.08%)</title><rect x="911.0" y="739.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="914.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (72 samples, 3.01%)</title><rect x="912.0" y="739.0" width="35.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="915.0" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (71 samples, 2.97%)</title><rect x="912.0" y="723.0" width="35.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="915.0" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (4 samples, 0.17%)</title><rect x="912.0" y="707.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="915.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (1 samples, 0.04%)</title><rect x="912.0" y="691.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="915.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (3 samples, 0.13%)</title><rect x="912.5" y="691.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="915.5" y="702.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.04%)</title><rect x="913.0" y="675.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="916.0" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="913.5" y="675.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="916.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="913.5" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="916.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="913.5" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="916.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (66 samples, 2.76%)</title><rect x="914.0" y="707.0" width="32.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="917.0" y="718.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (66 samples, 2.76%)</title><rect x="914.0" y="691.0" width="32.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="917.0" y="702.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (63 samples, 2.64%)</title><rect x="914.0" y="675.0" width="31.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="917.0" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.08%)</title><rect x="914.5" y="659.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="917.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="915.0" y="643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="918.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="915.0" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="918.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="915.5" y="659.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="918.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="915.5" y="643.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="918.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="915.5" y="627.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="918.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="916.0" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="919.0" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="916.0" y="611.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="919.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (14 samples, 0.59%)</title><rect x="916.5" y="659.0" width="6.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="919.5" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="917.0" y="643.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="920.0" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="917.5" y="643.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="920.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (11 samples, 0.46%)</title><rect x="918.0" y="643.0" width="5.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="921.0" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (11 samples, 0.46%)</title><rect x="918.0" y="627.0" width="5.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="921.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (10 samples, 0.42%)</title><rect x="918.0" y="611.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="921.0" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="918.9" y="595.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="921.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="919.4" y="595.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="922.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.17%)</title><rect x="920.9" y="595.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="923.9" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.17%)</title><rect x="920.9" y="579.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="923.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="922.9" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="925.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (1 samples, 0.04%)</title><rect x="923.4" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="926.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (43 samples, 1.80%)</title><rect x="923.9" y="659.0" width="21.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="926.9" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="923.9" y="643.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="926.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="924.4" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="927.4" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="924.4" y="627.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="927.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (41 samples, 1.72%)</title><rect x="924.9" y="643.0" width="20.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="927.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="925.4" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="928.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (36 samples, 1.51%)</title><rect x="925.9" y="627.0" width="17.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="928.9" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="926.4" y="611.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="929.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="926.8" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="929.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (9 samples, 0.38%)</title><rect x="927.3" y="611.0" width="4.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="930.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (1 samples, 0.04%)</title><rect x="927.3" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="930.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (8 samples, 0.33%)</title><rect x="927.8" y="595.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="930.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (8 samples, 0.33%)</title><rect x="927.8" y="579.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="930.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.04%)</title><rect x="927.8" y="563.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="930.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (7 samples, 0.29%)</title><rect x="928.3" y="563.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="931.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (7 samples, 0.29%)</title><rect x="928.3" y="547.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="931.3" y="558.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.04%)</title><rect x="928.3" y="531.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="931.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (2 samples, 0.08%)</title><rect x="928.8" y="531.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="931.8" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="928.8" y="515.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="931.8" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="929.3" y="515.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="932.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="929.8" y="531.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="932.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.13%)</title><rect x="930.3" y="531.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="933.3" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="930.3" y="515.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="933.3" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="930.3" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="933.3" y="510.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="930.3" y="483.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="933.3" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="930.8" y="515.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="933.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="931.3" y="515.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="934.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="931.3" y="499.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="934.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (7 samples, 0.29%)</title><rect x="931.8" y="611.0" width="3.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="934.8" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="931.8" y="595.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="934.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (3 samples, 0.13%)</title><rect x="932.3" y="595.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="935.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="932.3" y="579.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="935.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="932.8" y="579.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="935.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="933.8" y="595.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="936.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="934.3" y="595.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="937.3" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="934.3" y="579.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="937.3" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="934.7" y="579.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="937.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (15 samples, 0.63%)</title><rect x="935.2" y="611.0" width="7.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="938.2" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="937.2" y="595.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="940.2" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="937.7" y="595.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="940.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="938.7" y="595.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="941.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="939.7" y="595.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="942.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.21%)</title><rect x="940.2" y="595.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="943.2" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="941.2" y="579.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="944.2" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="942.2" y="579.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="945.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="942.6" y="611.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="945.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="943.1" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="946.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (1 samples, 0.04%)</title><rect x="943.6" y="627.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="946.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (1 samples, 0.04%)</title><rect x="944.1" y="627.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="947.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.04%)</title><rect x="944.6" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="947.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="945.1" y="675.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="948.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.08%)</title><rect x="945.6" y="675.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="948.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.04%)</title><rect x="946.6" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="949.6" y="718.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="947.1" y="723.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="950.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (5 samples, 0.21%)</title><rect x="947.6" y="739.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="950.6" y="750.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.21%)</title><rect x="947.6" y="723.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="950.6" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="947.6" y="707.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="950.6" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.17%)</title><rect x="948.1" y="707.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="951.1" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.17%)</title><rect x="948.1" y="691.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="951.1" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.13%)</title><rect x="948.1" y="675.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="951.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="948.1" y="659.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="951.1" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="948.6" y="659.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="951.6" y="670.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.04%)</title><rect x="949.1" y="659.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="952.1" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="949.6" y="675.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="952.6" y="686.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="950.1" y="771.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="953.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (1 samples, 0.04%)</title><rect x="950.5" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (38 samples, 1.59%)</title><rect x="951.0" y="883.0" width="18.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="954.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (38 samples, 1.59%)</title><rect x="951.0" y="867.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (19 samples, 0.79%)</title><rect x="951.0" y="851.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="954.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.08%)</title><rect x="951.0" y="835.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="954.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.08%)</title><rect x="951.0" y="819.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.08%)</title><rect x="951.0" y="803.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.29%)</title><rect x="952.0" y="835.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.29%)</title><rect x="952.0" y="819.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="955.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.29%)</title><rect x="952.0" y="803.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.29%)</title><rect x="952.0" y="787.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="955.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.29%)</title><rect x="952.0" y="771.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.29%)</title><rect x="952.0" y="755.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="955.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.29%)</title><rect x="952.0" y="739.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="955.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.29%)</title><rect x="952.0" y="723.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="955.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.29%)</title><rect x="952.0" y="707.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="955.0" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.29%)</title><rect x="952.0" y="691.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="955.0" y="702.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.29%)</title><rect x="952.0" y="675.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="955.0" y="686.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.29%)</title><rect x="952.0" y="659.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="955.0" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.29%)</title><rect x="952.0" y="643.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.0" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.29%)</title><rect x="952.0" y="627.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="955.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.42%)</title><rect x="955.5" y="835.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.42%)</title><rect x="955.5" y="819.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.5" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="955.5" y="803.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="958.5" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.08%)</title><rect x="955.5" y="787.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="958.5" y="798.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="956.0" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="959.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.29%)</title><rect x="956.5" y="803.0" width="3.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="959.5" y="814.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.04%)</title><rect x="956.5" y="787.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="959.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.21%)</title><rect x="957.0" y="787.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="960.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.21%)</title><rect x="957.0" y="771.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="960.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.21%)</title><rect x="957.0" y="755.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="960.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.21%)</title><rect x="957.0" y="739.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="960.0" y="750.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.21%)</title><rect x="957.0" y="723.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="960.0" y="734.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.21%)</title><rect x="957.0" y="707.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="960.0" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.21%)</title><rect x="957.0" y="691.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.0" y="702.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.21%)</title><rect x="957.0" y="675.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.0" y="686.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.21%)</title><rect x="957.0" y="659.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="960.0" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.17%)</title><rect x="957.5" y="643.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="960.5" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="959.4" y="787.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="962.4" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="959.9" y="803.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="962.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="960.4" y="851.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="960.4" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="960.4" y="819.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="960.4" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="960.4" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="960.4" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="963.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="960.4" y="755.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="963.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="960.4" y="739.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="963.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="960.4" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="963.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="960.4" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="963.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="960.4" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="963.4" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="960.4" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="963.4" y="686.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="960.4" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="963.4" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="960.4" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="963.4" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="960.4" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="963.4" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="960.4" y="611.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="963.4" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="960.4" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="963.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.75%)</title><rect x="960.9" y="851.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="963.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.75%)</title><rect x="960.9" y="835.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.75%)</title><rect x="960.9" y="819.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.75%)</title><rect x="960.9" y="803.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.75%)</title><rect x="960.9" y="787.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.9" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.75%)</title><rect x="960.9" y="771.0" width="8.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="963.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.75%)</title><rect x="960.9" y="755.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="963.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.75%)</title><rect x="960.9" y="739.0" width="8.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="963.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.75%)</title><rect x="960.9" y="723.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.9" y="734.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.75%)</title><rect x="960.9" y="707.0" width="8.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="963.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.75%)</title><rect x="960.9" y="691.0" width="8.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="963.9" y="702.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.71%)</title><rect x="961.4" y="675.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.4" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.71%)</title><rect x="961.4" y="659.0" width="8.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.4" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.71%)</title><rect x="961.4" y="643.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.4" y="654.0"></text>
</g>
<g>
<title>[async_worker-6 tid=44756] (221 samples, 9.25%)</title><rect x="969.8" y="947.0" width="109.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="972.8" y="958.0">[async_worker..</text>
</g>
<g>
<title>java/lang/Thread.run (221 samples, 9.25%)</title><rect x="969.8" y="931.0" width="109.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.8" y="942.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (221 samples, 9.25%)</title><rect x="969.8" y="915.0" width="109.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="972.8" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (221 samples, 9.25%)</title><rect x="969.8" y="899.0" width="109.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.8" y="910.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (186 samples, 7.78%)</title><rect x="969.8" y="883.0" width="91.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.8" y="894.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (186 samples, 7.78%)</title><rect x="969.8" y="867.0" width="91.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="972.8" y="878.0">java/util/c..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (186 samples, 7.78%)</title><rect x="969.8" y="851.0" width="91.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.8" y="862.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (186 samples, 7.78%)</title><rect x="969.8" y="835.0" width="91.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.8" y="846.0">ru/mail/pol..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="970.8" y="819.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="973.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (94 samples, 3.93%)</title><rect x="971.3" y="819.0" width="46.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="974.3" y="830.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.13%)</title><rect x="971.8" y="803.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.13%)</title><rect x="971.8" y="787.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.13%)</title><rect x="971.8" y="771.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.8" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="972.8" y="755.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="975.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (88 samples, 3.68%)</title><rect x="973.3" y="803.0" width="43.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.3" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="973.3" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="973.3" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="973.3" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="973.3" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="973.3" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="973.3" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 3.64%)</title><rect x="973.7" y="787.0" width="43.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="976.7" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 3.64%)</title><rect x="973.7" y="771.0" width="43.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="976.7" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (87 samples, 3.64%)</title><rect x="973.7" y="755.0" width="43.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.7" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (86 samples, 3.60%)</title><rect x="974.2" y="739.0" width="42.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.2" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.21%)</title><rect x="974.2" y="723.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="977.2" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="974.7" y="707.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="977.7" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.13%)</title><rect x="975.2" y="707.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="978.2" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.08%)</title><rect x="975.2" y="691.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="978.2" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="976.2" y="691.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="979.2" y="702.0"></text>
</g>
<g>
<title>send (81 samples, 3.39%)</title><rect x="976.7" y="723.0" width="40.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="979.7" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 3.35%)</title><rect x="977.2" y="707.0" width="39.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="980.2" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (80 samples, 3.35%)</title><rect x="977.2" y="691.0" width="39.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="980.2" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (79 samples, 3.31%)</title><rect x="977.7" y="675.0" width="39.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="980.7" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (78 samples, 3.26%)</title><rect x="977.7" y="659.0" width="38.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="980.7" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (76 samples, 3.18%)</title><rect x="977.7" y="643.0" width="37.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="980.7" y="654.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="978.2" y="627.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="981.2" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (74 samples, 3.10%)</title><rect x="978.7" y="627.0" width="36.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="981.7" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (74 samples, 3.10%)</title><rect x="978.7" y="611.0" width="36.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="981.7" y="622.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (74 samples, 3.10%)</title><rect x="978.7" y="595.0" width="36.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="981.7" y="606.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.08%)</title><rect x="978.7" y="579.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="981.7" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.08%)</title><rect x="978.7" y="563.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="981.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.38%)</title><rect x="979.7" y="579.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="982.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.38%)</title><rect x="979.7" y="563.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="982.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.21%)</title><rect x="979.7" y="547.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="982.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="979.7" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="982.7" y="542.0"></text>
</g>
<g>
<title>memset (4 samples, 0.17%)</title><rect x="980.2" y="531.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="983.2" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.08%)</title><rect x="982.1" y="547.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="985.1" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="982.6" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="985.6" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="983.1" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.1" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="983.1" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="986.1" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="983.6" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="986.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (62 samples, 2.59%)</title><rect x="984.1" y="579.0" width="30.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="987.1" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (61 samples, 2.55%)</title><rect x="984.1" y="563.0" width="30.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.1" y="574.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (61 samples, 2.55%)</title><rect x="984.1" y="547.0" width="30.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="987.1" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (60 samples, 2.51%)</title><rect x="984.1" y="531.0" width="29.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="987.1" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (56 samples, 2.34%)</title><rect x="984.6" y="515.0" width="27.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.6" y="526.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (56 samples, 2.34%)</title><rect x="984.6" y="499.0" width="27.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="987.6" y="510.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="984.6" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="987.6" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="984.6" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="987.6" y="478.0"></text>
</g>
<g>
<title>ip_local_out (55 samples, 2.30%)</title><rect x="985.1" y="483.0" width="27.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="988.1" y="494.0">i..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="985.1" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="988.1" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="985.1" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="988.1" y="462.0"></text>
</g>
<g>
<title>ip_output (54 samples, 2.26%)</title><rect x="985.6" y="467.0" width="26.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="988.6" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (54 samples, 2.26%)</title><rect x="985.6" y="451.0" width="26.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="988.6" y="462.0">i..</text>
</g>
<g>
<title>__ip_finish_output (54 samples, 2.26%)</title><rect x="985.6" y="435.0" width="26.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="988.6" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (53 samples, 2.22%)</title><rect x="986.1" y="419.0" width="26.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="989.1" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 1.92%)</title><rect x="987.1" y="403.0" width="22.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.1" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (46 samples, 1.92%)</title><rect x="987.1" y="387.0" width="22.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="990.1" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (46 samples, 1.92%)</title><rect x="987.1" y="371.0" width="22.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="990.1" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (46 samples, 1.92%)</title><rect x="987.1" y="355.0" width="22.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="990.1" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (46 samples, 1.92%)</title><rect x="987.1" y="339.0" width="22.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.1" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (46 samples, 1.92%)</title><rect x="987.1" y="323.0" width="22.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="990.1" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (46 samples, 1.92%)</title><rect x="987.1" y="307.0" width="22.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="990.1" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (46 samples, 1.92%)</title><rect x="987.1" y="291.0" width="22.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="990.1" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="987.1" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="990.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv (45 samples, 1.88%)</title><rect x="987.6" y="275.0" width="22.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.6" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (45 samples, 1.88%)</title><rect x="987.6" y="259.0" width="22.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="990.6" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (45 samples, 1.88%)</title><rect x="987.6" y="243.0" width="22.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="990.6" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 1.88%)</title><rect x="987.6" y="227.0" width="22.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.6" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 1.88%)</title><rect x="987.6" y="211.0" width="22.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="990.6" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (44 samples, 1.84%)</title><rect x="988.1" y="195.0" width="21.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="991.1" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="988.1" y="179.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="991.1" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="988.6" y="179.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="991.6" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="988.6" y="163.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="991.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (42 samples, 1.76%)</title><rect x="989.1" y="179.0" width="20.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="992.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (42 samples, 1.76%)</title><rect x="989.1" y="163.0" width="20.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.1" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="989.1" y="147.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.1" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="989.1" y="131.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="992.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="989.1" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.1" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="989.1" y="99.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="989.1" y="83.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="992.1" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.08%)</title><rect x="989.5" y="147.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="992.5" y="158.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.38%)</title><rect x="990.5" y="147.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="993.5" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.29%)</title><rect x="991.5" y="131.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.17%)</title><rect x="993.0" y="115.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="996.0" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="993.0" y="99.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="996.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="993.0" y="83.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="996.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.13%)</title><rect x="993.5" y="99.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.13%)</title><rect x="993.5" y="83.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="996.5" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.08%)</title><rect x="994.0" y="67.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="997.0" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.08%)</title><rect x="994.0" y="51.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="997.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.08%)</title><rect x="994.0" y="35.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="997.0" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (27 samples, 1.13%)</title><rect x="995.0" y="147.0" width="13.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="998.0" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (27 samples, 1.13%)</title><rect x="995.0" y="131.0" width="13.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="998.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (27 samples, 1.13%)</title><rect x="995.0" y="115.0" width="13.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="998.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (27 samples, 1.13%)</title><rect x="995.0" y="99.0" width="13.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="998.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 1.13%)</title><rect x="995.0" y="83.0" width="13.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="998.0" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.08%)</title><rect x="1008.3" y="147.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1011.3" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="1008.3" y="131.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1011.3" y="142.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.08%)</title><rect x="1008.3" y="115.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1011.3" y="126.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.08%)</title><rect x="1008.3" y="99.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1011.3" y="110.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="1009.3" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1012.3" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.21%)</title><rect x="1009.8" y="403.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.21%)</title><rect x="1009.8" y="387.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1012.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.13%)</title><rect x="1010.8" y="371.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1013.8" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="1010.8" y="355.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1013.8" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="1011.3" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1014.3" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="1011.3" y="323.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1014.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="1011.3" y="307.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1014.3" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="1011.8" y="355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1014.8" y="366.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.13%)</title><rect x="1012.3" y="515.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1015.3" y="526.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.13%)</title><rect x="1012.3" y="499.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1015.3" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="1013.7" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1016.7" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="1013.7" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.7" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="1013.7" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1016.7" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="1013.7" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1016.7" y="494.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="1014.2" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1017.2" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="1014.7" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1017.7" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="1015.2" y="643.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1018.2" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="1015.2" y="627.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1018.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="1015.2" y="611.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1018.2" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="1015.2" y="595.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1018.2" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="1016.2" y="659.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1019.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="1016.7" y="803.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1019.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (89 samples, 3.72%)</title><rect x="1017.7" y="819.0" width="43.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.7" y="830.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (89 samples, 3.72%)</title><rect x="1017.7" y="803.0" width="43.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.7" y="814.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (89 samples, 3.72%)</title><rect x="1017.7" y="787.0" width="43.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.7" y="798.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (87 samples, 3.64%)</title><rect x="1018.2" y="771.0" width="42.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1021.2" y="782.0">Java..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="1018.2" y="755.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1021.2" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="1019.2" y="755.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1022.2" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (84 samples, 3.51%)</title><rect x="1019.7" y="755.0" width="41.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1022.7" y="766.0">roc..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1019.7" y="739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1022.7" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="1020.2" y="739.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1023.2" y="750.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="1020.7" y="739.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1023.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (75 samples, 3.14%)</title><rect x="1021.1" y="739.0" width="37.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1024.1" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (74 samples, 3.10%)</title><rect x="1021.1" y="723.0" width="36.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1024.1" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (1 samples, 0.04%)</title><rect x="1021.1" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1024.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="1021.6" y="707.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1024.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="1021.6" y="691.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1024.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (72 samples, 3.01%)</title><rect x="1022.1" y="707.0" width="35.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.1" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (72 samples, 3.01%)</title><rect x="1022.1" y="691.0" width="35.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1025.1" y="702.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1022.1" y="675.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1025.1" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1022.6" y="675.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1025.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="1023.6" y="675.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1026.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.04%)</title><rect x="1024.1" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1027.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="1024.6" y="675.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1027.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (65 samples, 2.72%)</title><rect x="1025.1" y="675.0" width="32.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1028.1" y="686.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1025.1" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1028.1" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1025.6" y="659.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1028.6" y="670.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="1026.6" y="659.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1029.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.13%)</title><rect x="1027.1" y="659.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1030.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.08%)</title><rect x="1027.1" y="643.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1030.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="1027.6" y="627.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1030.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="1028.1" y="643.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1031.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="1028.1" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1031.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1028.6" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1031.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1028.6" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1031.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="1028.6" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1031.6" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1028.6" y="611.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1031.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (7 samples, 0.29%)</title><rect x="1029.0" y="659.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1032.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (7 samples, 0.29%)</title><rect x="1029.0" y="643.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1032.0" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (7 samples, 0.29%)</title><rect x="1029.0" y="627.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1032.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (6 samples, 0.25%)</title><rect x="1029.0" y="611.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1032.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1030.5" y="595.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1033.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1031.5" y="595.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1034.5" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="1031.5" y="579.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1034.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1032.0" y="611.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1035.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.04%)</title><rect x="1032.5" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1035.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="1033.0" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1036.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (1 samples, 0.04%)</title><rect x="1033.5" y="659.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1036.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (1 samples, 0.04%)</title><rect x="1034.0" y="659.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1037.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (45 samples, 1.88%)</title><rect x="1034.5" y="659.0" width="22.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1037.5" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="1036.5" y="643.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1039.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="1036.9" y="643.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1039.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (39 samples, 1.63%)</title><rect x="1037.4" y="643.0" width="19.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1040.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="1037.9" y="627.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1040.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (34 samples, 1.42%)</title><rect x="1038.4" y="627.0" width="16.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="1039.4" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1042.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (6 samples, 0.25%)</title><rect x="1039.9" y="611.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1042.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (6 samples, 0.25%)</title><rect x="1039.9" y="595.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1042.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.04%)</title><rect x="1039.9" y="579.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1042.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (5 samples, 0.21%)</title><rect x="1040.4" y="579.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1043.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (5 samples, 0.21%)</title><rect x="1040.4" y="563.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1043.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (5 samples, 0.21%)</title><rect x="1040.4" y="547.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1043.4" y="558.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (2 samples, 0.08%)</title><rect x="1040.4" y="531.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1043.4" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1041.4" y="531.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1044.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1041.9" y="531.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1044.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="1042.4" y="531.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1045.4" y="542.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1042.4" y="515.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1045.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (9 samples, 0.38%)</title><rect x="1042.9" y="611.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1045.9" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1042.9" y="595.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1045.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (5 samples, 0.21%)</title><rect x="1043.4" y="595.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1046.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="1043.9" y="579.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1046.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1044.4" y="579.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1047.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1045.3" y="579.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1048.3" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="1045.3" y="563.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1048.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="1045.8" y="595.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="1046.3" y="595.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1049.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="1047.3" y="611.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1050.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="1047.8" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (11 samples, 0.46%)</title><rect x="1048.3" y="611.0" width="5.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1051.3" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="1050.3" y="595.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1053.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1051.3" y="595.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1054.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (3 samples, 0.13%)</title><rect x="1051.8" y="595.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1054.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (3 samples, 0.13%)</title><rect x="1051.8" y="579.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1054.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1053.2" y="595.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1056.2" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1053.2" y="579.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1056.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1053.7" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1056.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="1054.2" y="611.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1057.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (1 samples, 0.04%)</title><rect x="1055.2" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1058.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.08%)</title><rect x="1055.7" y="627.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1058.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (1 samples, 0.04%)</title><rect x="1056.7" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1059.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="1057.2" y="675.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1060.2" y="686.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1057.7" y="723.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1060.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (6 samples, 0.25%)</title><rect x="1058.2" y="739.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.2" y="750.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.21%)</title><rect x="1058.2" y="723.0" width="2.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1061.2" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1058.7" y="707.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1061.7" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.13%)</title><rect x="1059.2" y="707.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1062.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.13%)</title><rect x="1059.2" y="691.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1062.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="1059.2" y="675.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1062.2" y="686.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1059.2" y="659.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1062.2" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="1059.7" y="659.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1062.7" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1060.2" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1063.2" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1060.6" y="723.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1063.6" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1060.6" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.6" y="718.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="1061.1" y="771.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1064.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 1.46%)</title><rect x="1061.6" y="883.0" width="17.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (35 samples, 1.46%)</title><rect x="1061.6" y="867.0" width="17.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.59%)</title><rect x="1061.6" y="851.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.08%)</title><rect x="1061.6" y="835.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.08%)</title><rect x="1061.6" y="819.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.08%)</title><rect x="1061.6" y="803.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.04%)</title><rect x="1062.6" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.04%)</title><rect x="1062.6" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1065.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="1062.6" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.46%)</title><rect x="1063.1" y="835.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.46%)</title><rect x="1063.1" y="819.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.1" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="1063.1" y="803.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1066.1" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1063.1" y="787.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1066.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.38%)</title><rect x="1063.6" y="803.0" width="4.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1066.6" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.38%)</title><rect x="1063.6" y="787.0" width="4.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1066.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.38%)</title><rect x="1063.6" y="771.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1066.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.38%)</title><rect x="1063.6" y="755.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1066.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.38%)</title><rect x="1063.6" y="739.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1066.6" y="750.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.38%)</title><rect x="1063.6" y="723.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1066.6" y="734.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.38%)</title><rect x="1063.6" y="707.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1066.6" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.38%)</title><rect x="1063.6" y="691.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1066.6" y="702.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.33%)</title><rect x="1064.1" y="675.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1067.1" y="686.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.33%)</title><rect x="1064.1" y="659.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1067.1" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.33%)</title><rect x="1064.1" y="643.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1067.1" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="1068.1" y="803.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1071.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.08%)</title><rect x="1068.5" y="851.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.08%)</title><rect x="1068.5" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.08%)</title><rect x="1068.5" y="819.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="1069.0" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="1069.0" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="1069.0" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.0" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="1069.0" y="755.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1072.0" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="1069.0" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1072.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.79%)</title><rect x="1069.5" y="851.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1072.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.79%)</title><rect x="1069.5" y="835.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.79%)</title><rect x="1069.5" y="819.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.71%)</title><rect x="1070.5" y="803.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1073.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.71%)</title><rect x="1070.5" y="787.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.5" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="1070.5" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1073.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.67%)</title><rect x="1071.0" y="771.0" width="7.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1074.0" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.67%)</title><rect x="1071.0" y="755.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1074.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.67%)</title><rect x="1071.0" y="739.0" width="7.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1074.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.67%)</title><rect x="1071.0" y="723.0" width="7.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1074.0" y="734.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.67%)</title><rect x="1071.0" y="707.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1074.0" y="718.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.67%)</title><rect x="1071.0" y="691.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1074.0" y="702.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.67%)</title><rect x="1071.0" y="675.0" width="7.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1074.0" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.67%)</title><rect x="1071.0" y="659.0" width="7.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.0" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.67%)</title><rect x="1071.0" y="643.0" width="7.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1074.0" y="654.0"></text>
</g>
<g>
<title>[async_worker-7 tid=44757] (225 samples, 9.41%)</title><rect x="1078.9" y="947.0" width="111.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1081.9" y="958.0">[async_worker..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.04%)</title><rect x="1078.9" y="931.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1081.9" y="942.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.04%)</title><rect x="1078.9" y="915.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1081.9" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (224 samples, 9.37%)</title><rect x="1079.4" y="931.0" width="110.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.4" y="942.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (224 samples, 9.37%)</title><rect x="1079.4" y="915.0" width="110.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.4" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (224 samples, 9.37%)</title><rect x="1079.4" y="899.0" width="110.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1082.4" y="910.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (187 samples, 7.82%)</title><rect x="1079.4" y="883.0" width="92.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.4" y="894.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (187 samples, 7.82%)</title><rect x="1079.4" y="867.0" width="92.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.4" y="878.0">java/util/c..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (187 samples, 7.82%)</title><rect x="1079.4" y="851.0" width="92.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1082.4" y="862.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (187 samples, 7.82%)</title><rect x="1079.4" y="835.0" width="92.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.4" y="846.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (93 samples, 3.89%)</title><rect x="1080.9" y="819.0" width="45.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1083.9" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (90 samples, 3.77%)</title><rect x="1081.4" y="803.0" width="44.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.4" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="1081.4" y="787.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="1081.9" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="1081.9" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="1081.9" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1084.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="1081.9" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="1081.9" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1084.9" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1081.9" y="691.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1084.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 3.68%)</title><rect x="1082.4" y="787.0" width="43.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.4" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 3.68%)</title><rect x="1082.4" y="771.0" width="43.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.4" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (88 samples, 3.68%)</title><rect x="1082.4" y="755.0" width="43.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1085.4" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (88 samples, 3.68%)</title><rect x="1082.4" y="739.0" width="43.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.4" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="1082.9" y="723.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1085.9" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="1082.9" y="707.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1085.9" y="718.0"></text>
</g>
<g>
<title>send (86 samples, 3.60%)</title><rect x="1083.4" y="723.0" width="42.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1086.4" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 3.51%)</title><rect x="1084.3" y="707.0" width="41.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1087.3" y="718.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (84 samples, 3.51%)</title><rect x="1084.3" y="691.0" width="41.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1087.3" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (83 samples, 3.47%)</title><rect x="1084.8" y="675.0" width="41.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1087.8" y="686.0">__x..</text>
</g>
<g>
<title>__sys_sendto (83 samples, 3.47%)</title><rect x="1084.8" y="659.0" width="41.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1087.8" y="670.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (82 samples, 3.43%)</title><rect x="1084.8" y="643.0" width="40.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1087.8" y="654.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (80 samples, 3.35%)</title><rect x="1084.8" y="627.0" width="39.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1087.8" y="638.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (80 samples, 3.35%)</title><rect x="1084.8" y="611.0" width="39.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1087.8" y="622.0">tcp..</text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="1084.8" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1087.8" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="1085.3" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1088.3" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (78 samples, 3.26%)</title><rect x="1085.8" y="595.0" width="38.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1088.8" y="606.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="1087.8" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1090.8" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="1087.8" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1090.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.21%)</title><rect x="1088.3" y="579.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1091.3" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.13%)</title><rect x="1089.3" y="563.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1092.3" y="574.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="1089.8" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1092.8" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="1090.3" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1093.3" y="558.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.13%)</title><rect x="1090.8" y="579.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1093.8" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.08%)</title><rect x="1091.3" y="563.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1094.3" y="574.0"></text>
</g>
<g>
<title>tcp_push (64 samples, 2.68%)</title><rect x="1092.2" y="579.0" width="31.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1095.2" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (64 samples, 2.68%)</title><rect x="1092.2" y="563.0" width="31.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1095.2" y="574.0">__..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1092.2" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1095.2" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (63 samples, 2.64%)</title><rect x="1092.7" y="547.0" width="31.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1095.7" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (61 samples, 2.55%)</title><rect x="1092.7" y="531.0" width="30.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1095.7" y="542.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (59 samples, 2.47%)</title><rect x="1093.2" y="515.0" width="29.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1096.2" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (58 samples, 2.43%)</title><rect x="1093.2" y="499.0" width="28.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1096.2" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (56 samples, 2.34%)</title><rect x="1093.7" y="483.0" width="27.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1096.7" y="494.0">i..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="1093.7" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1096.7" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="1093.7" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1096.7" y="462.0"></text>
</g>
<g>
<title>ip_output (55 samples, 2.30%)</title><rect x="1094.2" y="467.0" width="27.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1097.2" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (55 samples, 2.30%)</title><rect x="1094.2" y="451.0" width="27.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1097.2" y="462.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="1094.2" y="435.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1097.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (54 samples, 2.26%)</title><rect x="1094.7" y="435.0" width="26.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1097.7" y="446.0">_..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="1094.7" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1097.7" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (53 samples, 2.22%)</title><rect x="1095.2" y="419.0" width="26.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1098.2" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (49 samples, 2.05%)</title><rect x="1096.2" y="403.0" width="24.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1099.2" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (49 samples, 2.05%)</title><rect x="1096.2" y="387.0" width="24.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1099.2" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (49 samples, 2.05%)</title><rect x="1096.2" y="371.0" width="24.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1099.2" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (49 samples, 2.05%)</title><rect x="1096.2" y="355.0" width="24.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1099.2" y="366.0">_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="1096.7" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1099.7" y="350.0"></text>
</g>
<g>
<title>net_rx_action (46 samples, 1.92%)</title><rect x="1097.2" y="339.0" width="22.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1100.2" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (46 samples, 1.92%)</title><rect x="1097.2" y="323.0" width="22.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1100.2" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (45 samples, 1.88%)</title><rect x="1097.7" y="307.0" width="22.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1100.7" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (45 samples, 1.88%)</title><rect x="1097.7" y="291.0" width="22.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1100.7" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (45 samples, 1.88%)</title><rect x="1097.7" y="275.0" width="22.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1100.7" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (45 samples, 1.88%)</title><rect x="1097.7" y="259.0" width="22.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1100.7" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (45 samples, 1.88%)</title><rect x="1097.7" y="243.0" width="22.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1100.7" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 1.88%)</title><rect x="1097.7" y="227.0" width="22.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1100.7" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 1.88%)</title><rect x="1097.7" y="211.0" width="22.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1100.7" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (45 samples, 1.88%)</title><rect x="1097.7" y="195.0" width="22.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1100.7" y="206.0">t..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="1098.2" y="179.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1101.2" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="1098.7" y="179.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1101.7" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="1099.2" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1102.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (41 samples, 1.72%)</title><rect x="1099.6" y="179.0" width="20.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1102.6" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (41 samples, 1.72%)</title><rect x="1099.6" y="163.0" width="20.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.6" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="1100.1" y="147.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1103.1" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="1100.1" y="131.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1103.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="1100.1" y="115.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1103.1" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="1100.1" y="99.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1103.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="1100.1" y="83.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1103.1" y="94.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.33%)</title><rect x="1101.1" y="147.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1104.1" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="1101.6" y="131.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1104.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.21%)</title><rect x="1102.1" y="131.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1105.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.17%)</title><rect x="1102.6" y="115.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1105.6" y="126.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.17%)</title><rect x="1102.6" y="99.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1105.6" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.17%)</title><rect x="1102.6" y="83.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1105.6" y="94.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.17%)</title><rect x="1102.6" y="67.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1105.6" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.17%)</title><rect x="1102.6" y="51.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1105.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.17%)</title><rect x="1102.6" y="35.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1105.6" y="46.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="1104.6" y="131.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1107.6" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (29 samples, 1.21%)</title><rect x="1105.1" y="147.0" width="14.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1108.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (29 samples, 1.21%)</title><rect x="1105.1" y="131.0" width="14.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1108.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 1.21%)</title><rect x="1105.1" y="115.0" width="14.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1108.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 1.21%)</title><rect x="1105.1" y="99.0" width="14.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1108.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 1.21%)</title><rect x="1105.1" y="83.0" width="14.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1108.1" y="94.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="1119.4" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1122.4" y="158.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="1119.9" y="339.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1122.9" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.08%)</title><rect x="1120.4" y="403.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1123.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.08%)</title><rect x="1120.4" y="387.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.4" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="1120.4" y="371.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1123.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="1120.4" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1123.4" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="1120.9" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1123.9" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="1121.4" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1124.4" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="1121.9" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1124.9" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="1122.4" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1125.4" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1122.9" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1125.9" y="542.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.04%)</title><rect x="1122.9" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1125.9" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="1123.3" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1126.3" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="1123.3" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1126.3" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="1123.3" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1126.3" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="1123.8" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1126.8" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.08%)</title><rect x="1124.3" y="627.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1127.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.08%)</title><rect x="1124.3" y="611.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1127.3" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.08%)</title><rect x="1124.3" y="595.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1127.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1125.3" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1128.3" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1125.3" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1128.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1125.3" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1128.3" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1125.3" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1128.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="1125.8" y="803.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1126.3" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1126.3" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.04%)</title><rect x="1126.8" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1126.8" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.8" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1126.8" y="787.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1129.8" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.04%)</title><rect x="1126.8" y="771.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.8" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1126.8" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1129.8" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1126.8" y="739.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1129.8" y="750.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1126.8" y="723.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.8" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1126.8" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1129.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.04%)</title><rect x="1126.8" y="691.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1129.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (90 samples, 3.77%)</title><rect x="1127.3" y="819.0" width="44.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.3" y="830.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (90 samples, 3.77%)</title><rect x="1127.3" y="803.0" width="44.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.3" y="814.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (90 samples, 3.77%)</title><rect x="1127.3" y="787.0" width="44.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1130.3" y="798.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (88 samples, 3.68%)</title><rect x="1127.8" y="771.0" width="43.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1130.8" y="782.0">Java..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="1127.8" y="755.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1130.8" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.08%)</title><rect x="1128.3" y="755.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1131.3" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="1129.3" y="755.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1132.3" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (84 samples, 3.51%)</title><rect x="1129.8" y="755.0" width="41.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.8" y="766.0">roc..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.08%)</title><rect x="1129.8" y="739.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1132.8" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1130.8" y="739.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1133.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (77 samples, 3.22%)</title><rect x="1131.2" y="739.0" width="38.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.2" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (77 samples, 3.22%)</title><rect x="1131.2" y="723.0" width="38.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.2" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (1 samples, 0.04%)</title><rect x="1131.2" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="1131.7" y="707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1134.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="1131.7" y="691.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1134.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (74 samples, 3.10%)</title><rect x="1132.2" y="707.0" width="36.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1135.2" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (74 samples, 3.10%)</title><rect x="1132.2" y="691.0" width="36.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1135.2" y="702.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1132.2" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1135.2" y="686.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.04%)</title><rect x="1132.7" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1135.7" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1133.2" y="675.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1136.2" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="1133.7" y="675.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1136.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (69 samples, 2.89%)</title><rect x="1134.2" y="675.0" width="34.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1137.2" y="686.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1134.2" y="659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.2" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1134.7" y="659.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1137.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.13%)</title><rect x="1135.2" y="659.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="1135.2" y="643.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1138.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="1135.7" y="643.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="1135.7" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="1136.2" y="643.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="1136.2" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1139.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="1136.7" y="659.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1136.7" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="1137.2" y="643.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1140.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="1137.7" y="659.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1140.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (9 samples, 0.38%)</title><rect x="1138.2" y="659.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (9 samples, 0.38%)</title><rect x="1138.2" y="643.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.2" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (8 samples, 0.33%)</title><rect x="1138.2" y="627.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1141.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (6 samples, 0.25%)</title><rect x="1138.2" y="611.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.2" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="1139.6" y="595.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1142.6" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1140.1" y="595.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1143.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1140.6" y="595.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1143.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="1141.1" y="611.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.04%)</title><rect x="1142.1" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1145.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.08%)</title><rect x="1142.6" y="659.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="1143.1" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (49 samples, 2.05%)</title><rect x="1143.6" y="659.0" width="24.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1146.6" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="1143.6" y="643.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1146.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (48 samples, 2.01%)</title><rect x="1144.1" y="643.0" width="23.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.1" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (47 samples, 1.97%)</title><rect x="1144.1" y="627.0" width="23.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.1" y="638.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1145.1" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.1" y="622.0"></text>
</g>
<g>
<title>cfree (4 samples, 0.17%)</title><rect x="1145.6" y="611.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1148.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="1147.5" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1150.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (1 samples, 0.04%)</title><rect x="1148.0" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="1148.5" y="611.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (7 samples, 0.29%)</title><rect x="1149.0" y="611.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.04%)</title><rect x="1149.0" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (1 samples, 0.04%)</title><rect x="1149.5" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (5 samples, 0.21%)</title><rect x="1150.0" y="595.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (5 samples, 0.21%)</title><rect x="1150.0" y="579.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (4 samples, 0.17%)</title><rect x="1150.5" y="563.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.08%)</title><rect x="1151.0" y="547.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1151.0" y="531.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1154.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="1151.5" y="531.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.5" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1151.5" y="515.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1154.5" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1151.5" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.5" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1151.5" y="483.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1154.5" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1151.5" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1154.5" y="478.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1151.5" y="451.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1154.5" y="462.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1151.5" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.5" y="446.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="1151.5" y="419.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.5" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1151.5" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1154.5" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1151.5" y="387.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1154.5" y="398.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="1152.0" y="547.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (13 samples, 0.54%)</title><rect x="1152.5" y="611.0" width="6.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1155.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (7 samples, 0.29%)</title><rect x="1154.5" y="595.0" width="3.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.5" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="1154.5" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1157.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 0.25%)</title><rect x="1154.9" y="579.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.9" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.13%)</title><rect x="1154.9" y="563.0" width="1.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1157.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="1156.4" y="563.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1159.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.04%)</title><rect x="1157.9" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1158.4" y="595.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (12 samples, 0.50%)</title><rect x="1158.9" y="611.0" width="5.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.9" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (1 samples, 0.04%)</title><rect x="1161.4" y="595.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1164.4" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="1161.9" y="595.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1164.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1162.8" y="595.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1165.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="1163.3" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.04%)</title><rect x="1163.3" y="579.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="1163.8" y="595.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.8" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1163.8" y="579.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.8" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1164.3" y="579.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1167.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="1164.8" y="611.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.17%)</title><rect x="1165.3" y="611.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="1167.3" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (1 samples, 0.04%)</title><rect x="1167.8" y="659.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="1168.3" y="675.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.04%)</title><rect x="1168.8" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.17%)</title><rect x="1169.3" y="739.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.3" y="750.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.13%)</title><rect x="1169.8" y="723.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1172.8" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.13%)</title><rect x="1169.8" y="707.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="1170.3" y="691.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="1170.3" y="675.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.04%)</title><rect x="1170.3" y="659.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="670.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.04%)</title><rect x="1170.7" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.7" y="670.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="1171.2" y="771.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1174.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.08%)</title><rect x="1171.7" y="883.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.08%)</title><rect x="1171.7" y="867.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1174.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.08%)</title><rect x="1171.7" y="851.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="1172.2" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.04%)</title><rect x="1172.2" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 1.46%)</title><rect x="1172.7" y="883.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (35 samples, 1.46%)</title><rect x="1172.7" y="867.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.63%)</title><rect x="1172.7" y="851.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1175.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.25%)</title><rect x="1172.7" y="835.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.25%)</title><rect x="1172.7" y="819.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1175.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.25%)</title><rect x="1172.7" y="803.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.25%)</title><rect x="1172.7" y="787.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1175.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.25%)</title><rect x="1172.7" y="771.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.25%)</title><rect x="1172.7" y="755.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1175.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.25%)</title><rect x="1172.7" y="739.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1175.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.25%)</title><rect x="1172.7" y="723.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1175.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.25%)</title><rect x="1172.7" y="707.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.7" y="718.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.25%)</title><rect x="1172.7" y="691.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1175.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.25%)</title><rect x="1172.7" y="675.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1175.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.25%)</title><rect x="1172.7" y="659.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1175.7" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.25%)</title><rect x="1172.7" y="643.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1175.7" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.25%)</title><rect x="1172.7" y="627.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1175.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.38%)</title><rect x="1175.7" y="835.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.38%)</title><rect x="1175.7" y="819.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.33%)</title><rect x="1175.7" y="803.0" width="3.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1178.7" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.33%)</title><rect x="1175.7" y="787.0" width="3.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1178.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.33%)</title><rect x="1175.7" y="771.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1178.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.33%)</title><rect x="1175.7" y="755.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1178.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.29%)</title><rect x="1176.2" y="739.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1179.2" y="750.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.29%)</title><rect x="1176.2" y="723.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.2" y="734.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.29%)</title><rect x="1176.2" y="707.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.2" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.29%)</title><rect x="1176.2" y="691.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.2" y="702.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.25%)</title><rect x="1176.7" y="675.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1179.7" y="686.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.25%)</title><rect x="1176.7" y="659.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.7" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.21%)</title><rect x="1177.2" y="643.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1180.2" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="1179.6" y="803.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.08%)</title><rect x="1180.1" y="851.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.08%)</title><rect x="1180.1" y="835.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.08%)</title><rect x="1180.1" y="819.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.08%)</title><rect x="1180.1" y="803.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1183.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.08%)</title><rect x="1180.1" y="787.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.08%)</title><rect x="1180.1" y="771.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.1" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="1180.1" y="755.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1183.1" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1180.1" y="739.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1183.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1180.6" y="755.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1183.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="1180.6" y="739.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1183.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1180.6" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1180.6" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1183.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1180.6" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1183.6" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1180.6" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1183.6" y="686.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="1180.6" y="659.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.6" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="1180.6" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1183.6" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1180.6" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1183.6" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1180.6" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.6" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1180.6" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1183.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.75%)</title><rect x="1181.1" y="851.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1184.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.75%)</title><rect x="1181.1" y="835.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1184.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.75%)</title><rect x="1181.1" y="819.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.75%)</title><rect x="1181.1" y="803.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1184.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.75%)</title><rect x="1181.1" y="787.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1184.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.75%)</title><rect x="1181.1" y="771.0" width="8.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1184.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.71%)</title><rect x="1181.6" y="755.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.71%)</title><rect x="1181.6" y="739.0" width="8.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1184.6" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.71%)</title><rect x="1181.6" y="723.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1184.6" y="734.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.71%)</title><rect x="1181.6" y="707.0" width="8.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.6" y="718.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.71%)</title><rect x="1181.6" y="691.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1184.6" y="702.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.67%)</title><rect x="1182.1" y="675.0" width="7.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1185.1" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.67%)</title><rect x="1182.1" y="659.0" width="7.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1185.1" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.67%)</title><rect x="1182.1" y="643.0" width="7.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1185.1" y="654.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1189.5" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1192.5" y="638.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1189.5" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1192.5" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1189.5" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1192.5" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1189.5" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1192.5" y="590.0"></text>
</g>
</g>
</svg>
