<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="293"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="293"> </text>
<g id="frames">
<g>
<title>all (10,275 samples, 100.00%)</title><rect x="10.0" y="259.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="270.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=44734] (647 samples, 6.30%)</title><rect x="10.0" y="243.0" width="74.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (647 samples, 6.30%)</title><rect x="10.0" y="227.0" width="74.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (647 samples, 6.30%)</title><rect x="10.0" y="211.0" width="74.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (647 samples, 6.30%)</title><rect x="10.0" y="195.0" width="74.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (647 samples, 6.30%)</title><rect x="10.0" y="179.0" width="74.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (218 samples, 2.12%)</title><rect x="10.0" y="163.0" width="25.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (218 samples, 2.12%)</title><rect x="10.0" y="147.0" width="25.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="158.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (161 samples, 1.57%)</title><rect x="10.0" y="131.0" width="18.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (65 samples, 0.63%)</title><rect x="10.0" y="115.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (65 samples, 0.63%)</title><rect x="10.0" y="99.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (65 samples, 0.63%)</title><rect x="10.0" y="83.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.27%)</title><rect x="10.0" y="67.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.36%)</title><rect x="13.2" y="67.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.2" y="78.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.36%)</title><rect x="13.2" y="51.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="16.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (96 samples, 0.93%)</title><rect x="17.5" y="115.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.30%)</title><rect x="17.5" y="99.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.5" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.30%)</title><rect x="17.5" y="83.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (31 samples, 0.30%)</title><rect x="17.5" y="67.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$73 (31 samples, 0.30%)</title><rect x="17.5" y="51.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="20.5" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (65 samples, 0.63%)</title><rect x="21.0" y="99.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (65 samples, 0.63%)</title><rect x="21.0" y="83.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.0" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (39 samples, 0.38%)</title><rect x="21.0" y="67.0" width="4.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="24.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (26 samples, 0.25%)</title><rect x="25.5" y="67.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (26 samples, 0.25%)</title><rect x="25.5" y="51.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (26 samples, 0.25%)</title><rect x="25.5" y="35.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="28.5" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (57 samples, 0.55%)</title><rect x="28.5" y="131.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (57 samples, 0.55%)</title><rect x="28.5" y="115.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 0.55%)</title><rect x="28.5" y="99.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.20%)</title><rect x="28.5" y="83.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="31.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.35%)</title><rect x="30.9" y="83.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.9" y="94.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.35%)</title><rect x="30.9" y="67.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="33.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (299 samples, 2.91%)</title><rect x="35.0" y="163.0" width="34.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.0" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (41 samples, 0.40%)</title><rect x="35.0" y="147.0" width="4.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="38.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (83 samples, 0.81%)</title><rect x="39.7" y="147.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (83 samples, 0.81%)</title><rect x="39.7" y="131.0" width="9.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="42.7" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (175 samples, 1.70%)</title><rect x="49.3" y="147.0" width="20.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (175 samples, 1.70%)</title><rect x="49.3" y="131.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.3" y="142.0"></text>
</g>
<g>
<title>char[] (101 samples, 0.98%)</title><rect x="49.3" y="115.0" width="11.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="52.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.19%)</title><rect x="60.9" y="115.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="63.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (54 samples, 0.53%)</title><rect x="63.2" y="115.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (54 samples, 0.53%)</title><rect x="63.2" y="99.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (54 samples, 0.53%)</title><rect x="63.2" y="83.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.2" y="94.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.53%)</title><rect x="63.2" y="67.0" width="6.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="66.2" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 1.27%)</title><rect x="69.4" y="163.0" width="14.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.4" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (130 samples, 1.27%)</title><rect x="69.4" y="147.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.4" y="158.0"></text>
</g>
<g>
<title>char[] (57 samples, 0.55%)</title><rect x="69.4" y="131.0" width="6.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="72.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.26%)</title><rect x="75.9" y="131.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="78.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.45%)</title><rect x="79.0" y="131.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.45%)</title><rect x="79.0" y="115.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (46 samples, 0.45%)</title><rect x="79.0" y="99.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.0" y="110.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.45%)</title><rect x="79.0" y="83.0" width="5.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="82.0" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=44735] (659 samples, 6.41%)</title><rect x="84.3" y="243.0" width="75.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="87.3" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (659 samples, 6.41%)</title><rect x="84.3" y="227.0" width="75.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.3" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (37 samples, 0.36%)</title><rect x="84.3" y="211.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.3" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (37 samples, 0.36%)</title><rect x="84.3" y="195.0" width="4.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="87.3" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (622 samples, 6.05%)</title><rect x="88.6" y="211.0" width="71.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.6" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (622 samples, 6.05%)</title><rect x="88.6" y="195.0" width="71.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.6" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (622 samples, 6.05%)</title><rect x="88.6" y="179.0" width="71.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.6" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (210 samples, 2.04%)</title><rect x="88.6" y="163.0" width="24.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.6" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (210 samples, 2.04%)</title><rect x="88.6" y="147.0" width="24.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.6" y="158.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (158 samples, 1.54%)</title><rect x="88.6" y="131.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (64 samples, 0.62%)</title><rect x="88.6" y="115.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (64 samples, 0.62%)</title><rect x="88.6" y="99.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.62%)</title><rect x="88.6" y="83.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.34%)</title><rect x="88.6" y="67.0" width="4.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="91.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.28%)</title><rect x="92.6" y="67.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.6" y="78.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.28%)</title><rect x="92.6" y="51.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="95.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (94 samples, 0.91%)</title><rect x="95.9" y="115.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.39%)</title><rect x="95.9" y="99.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.9" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.39%)</title><rect x="95.9" y="83.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (40 samples, 0.39%)</title><rect x="95.9" y="67.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$73 (40 samples, 0.39%)</title><rect x="95.9" y="51.0" width="4.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="98.9" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (54 samples, 0.53%)</title><rect x="100.5" y="99.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (54 samples, 0.53%)</title><rect x="100.5" y="83.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.5" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (36 samples, 0.35%)</title><rect x="100.5" y="67.0" width="4.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="103.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (18 samples, 0.18%)</title><rect x="104.6" y="67.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (18 samples, 0.18%)</title><rect x="104.6" y="51.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (18 samples, 0.18%)</title><rect x="104.6" y="35.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="107.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (52 samples, 0.51%)</title><rect x="106.7" y="131.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.51%)</title><rect x="106.7" y="115.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.51%)</title><rect x="106.7" y="99.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.18%)</title><rect x="106.7" y="83.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="109.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.33%)</title><rect x="108.8" y="83.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.8" y="94.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.33%)</title><rect x="108.8" y="67.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="111.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (287 samples, 2.79%)</title><rect x="112.7" y="163.0" width="32.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.7" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (53 samples, 0.52%)</title><rect x="112.7" y="147.0" width="6.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="115.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (87 samples, 0.85%)</title><rect x="118.8" y="147.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (87 samples, 0.85%)</title><rect x="118.8" y="131.0" width="9.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="121.8" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (147 samples, 1.43%)</title><rect x="128.7" y="147.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.7" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (147 samples, 1.43%)</title><rect x="128.7" y="131.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.7" y="142.0"></text>
</g>
<g>
<title>char[] (69 samples, 0.67%)</title><rect x="128.7" y="115.0" width="8.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="131.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.34%)</title><rect x="136.7" y="115.0" width="4.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="139.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.42%)</title><rect x="140.7" y="115.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.42%)</title><rect x="140.7" y="99.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (43 samples, 0.42%)</title><rect x="140.7" y="83.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.7" y="94.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.42%)</title><rect x="140.7" y="67.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="143.7" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (125 samples, 1.22%)</title><rect x="145.6" y="163.0" width="14.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.6" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (125 samples, 1.22%)</title><rect x="145.6" y="147.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.6" y="158.0"></text>
</g>
<g>
<title>char[] (58 samples, 0.56%)</title><rect x="145.6" y="131.0" width="6.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="148.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.28%)</title><rect x="152.3" y="131.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="155.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.37%)</title><rect x="155.6" y="131.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.37%)</title><rect x="155.6" y="115.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.37%)</title><rect x="155.6" y="99.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.6" y="110.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.37%)</title><rect x="155.6" y="83.0" width="4.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="158.6" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=44736] (650 samples, 6.33%)</title><rect x="160.0" y="243.0" width="74.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="163.0" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (650 samples, 6.33%)</title><rect x="160.0" y="227.0" width="74.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.0" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (41 samples, 0.40%)</title><rect x="160.0" y="211.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.0" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (41 samples, 0.40%)</title><rect x="160.0" y="195.0" width="4.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="163.0" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (609 samples, 5.93%)</title><rect x="164.7" y="211.0" width="69.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.7" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (609 samples, 5.93%)</title><rect x="164.7" y="195.0" width="69.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.7" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (609 samples, 5.93%)</title><rect x="164.7" y="179.0" width="69.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.7" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (215 samples, 2.09%)</title><rect x="164.7" y="163.0" width="24.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.7" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (215 samples, 2.09%)</title><rect x="164.7" y="147.0" width="24.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.7" y="158.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (140 samples, 1.36%)</title><rect x="164.7" y="131.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (52 samples, 0.51%)</title><rect x="164.7" y="115.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.51%)</title><rect x="164.7" y="99.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.51%)</title><rect x="164.7" y="83.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.7" y="94.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.24%)</title><rect x="164.7" y="67.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="167.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.26%)</title><rect x="167.6" y="67.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.6" y="78.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.26%)</title><rect x="167.6" y="51.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="170.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (88 samples, 0.86%)</title><rect x="170.7" y="115.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.33%)</title><rect x="170.7" y="99.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.33%)</title><rect x="170.7" y="83.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (34 samples, 0.33%)</title><rect x="170.7" y="67.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$73 (34 samples, 0.33%)</title><rect x="170.7" y="51.0" width="3.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="173.7" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (54 samples, 0.53%)</title><rect x="174.6" y="99.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (54 samples, 0.53%)</title><rect x="174.6" y="83.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.6" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (33 samples, 0.32%)</title><rect x="174.6" y="67.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="177.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (21 samples, 0.20%)</title><rect x="178.4" y="67.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (21 samples, 0.20%)</title><rect x="178.4" y="51.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (21 samples, 0.20%)</title><rect x="178.4" y="35.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="181.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (75 samples, 0.73%)</title><rect x="180.8" y="131.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (75 samples, 0.73%)</title><rect x="180.8" y="115.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (75 samples, 0.73%)</title><rect x="180.8" y="99.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.28%)</title><rect x="180.8" y="83.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="183.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.45%)</title><rect x="184.1" y="83.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.1" y="94.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.45%)</title><rect x="184.1" y="67.0" width="5.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="187.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (282 samples, 2.74%)</title><rect x="189.4" y="163.0" width="32.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.4" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (40 samples, 0.39%)</title><rect x="189.4" y="147.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="192.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (92 samples, 0.90%)</title><rect x="194.0" y="147.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (92 samples, 0.90%)</title><rect x="194.0" y="131.0" width="10.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="197.0" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (150 samples, 1.46%)</title><rect x="204.5" y="147.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (150 samples, 1.46%)</title><rect x="204.5" y="131.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.5" y="142.0"></text>
</g>
<g>
<title>char[] (80 samples, 0.78%)</title><rect x="204.5" y="115.0" width="9.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="207.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.29%)</title><rect x="213.7" y="115.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="216.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.39%)</title><rect x="217.2" y="115.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.39%)</title><rect x="217.2" y="99.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (40 samples, 0.39%)</title><rect x="217.2" y="83.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.2" y="94.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.39%)</title><rect x="217.2" y="67.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="220.2" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (112 samples, 1.09%)</title><rect x="221.8" y="163.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.8" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (112 samples, 1.09%)</title><rect x="221.8" y="147.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.8" y="158.0"></text>
</g>
<g>
<title>char[] (50 samples, 0.49%)</title><rect x="221.8" y="131.0" width="5.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="224.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.25%)</title><rect x="227.5" y="131.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="230.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.35%)</title><rect x="230.5" y="131.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.35%)</title><rect x="230.5" y="115.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="233.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (36 samples, 0.35%)</title><rect x="230.5" y="99.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.5" y="110.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.35%)</title><rect x="230.5" y="83.0" width="4.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="233.5" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=44737] (660 samples, 6.42%)</title><rect x="234.6" y="243.0" width="75.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="237.6" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (660 samples, 6.42%)</title><rect x="234.6" y="227.0" width="75.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.6" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (660 samples, 6.42%)</title><rect x="234.6" y="211.0" width="75.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.6" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (660 samples, 6.42%)</title><rect x="234.6" y="195.0" width="75.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.6" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (660 samples, 6.42%)</title><rect x="234.6" y="179.0" width="75.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.6" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (222 samples, 2.16%)</title><rect x="234.6" y="163.0" width="25.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.6" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (222 samples, 2.16%)</title><rect x="234.6" y="147.0" width="25.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.6" y="158.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (161 samples, 1.57%)</title><rect x="234.6" y="131.0" width="18.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (62 samples, 0.60%)</title><rect x="234.6" y="115.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.60%)</title><rect x="234.6" y="99.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.60%)</title><rect x="234.6" y="83.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.29%)</title><rect x="234.6" y="67.0" width="3.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="237.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.31%)</title><rect x="238.1" y="67.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.1" y="78.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.31%)</title><rect x="238.1" y="51.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="241.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (99 samples, 0.96%)</title><rect x="241.8" y="115.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.34%)</title><rect x="241.8" y="99.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.8" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.34%)</title><rect x="241.8" y="83.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (35 samples, 0.34%)</title><rect x="241.8" y="67.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$73 (35 samples, 0.34%)</title><rect x="241.8" y="51.0" width="4.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="244.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (64 samples, 0.62%)</title><rect x="245.8" y="99.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (63 samples, 0.61%)</title><rect x="245.8" y="83.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.8" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (41 samples, 0.40%)</title><rect x="245.8" y="67.0" width="4.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="248.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (22 samples, 0.21%)</title><rect x="250.5" y="67.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (22 samples, 0.21%)</title><rect x="250.5" y="51.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="253.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (22 samples, 0.21%)</title><rect x="250.5" y="35.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="253.5" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (61 samples, 0.59%)</title><rect x="253.1" y="131.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (61 samples, 0.59%)</title><rect x="253.1" y="115.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (61 samples, 0.59%)</title><rect x="253.1" y="99.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.19%)</title><rect x="253.1" y="83.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="256.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.40%)</title><rect x="255.4" y="83.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.4" y="94.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.40%)</title><rect x="255.4" y="67.0" width="4.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="258.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (297 samples, 2.89%)</title><rect x="260.1" y="163.0" width="34.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.1" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (39 samples, 0.38%)</title><rect x="260.1" y="147.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="263.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (101 samples, 0.98%)</title><rect x="264.6" y="147.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (101 samples, 0.98%)</title><rect x="264.6" y="131.0" width="11.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="267.6" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (157 samples, 1.53%)</title><rect x="276.2" y="147.0" width="18.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (157 samples, 1.53%)</title><rect x="276.2" y="131.0" width="18.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.2" y="142.0"></text>
</g>
<g>
<title>char[] (75 samples, 0.73%)</title><rect x="276.2" y="115.0" width="8.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="279.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.25%)</title><rect x="284.8" y="115.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="287.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.55%)</title><rect x="287.8" y="115.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.55%)</title><rect x="287.8" y="99.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (56 samples, 0.55%)</title><rect x="287.8" y="83.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.8" y="94.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.55%)</title><rect x="287.8" y="67.0" width="6.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="290.8" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (141 samples, 1.37%)</title><rect x="294.2" y="163.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.2" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (141 samples, 1.37%)</title><rect x="294.2" y="147.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.2" y="158.0"></text>
</g>
<g>
<title>char[] (61 samples, 0.59%)</title><rect x="294.2" y="131.0" width="7.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="297.2" y="142.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.19%)</title><rect x="301.2" y="131.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="304.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (60 samples, 0.58%)</title><rect x="303.5" y="131.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (60 samples, 0.58%)</title><rect x="303.5" y="115.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (60 samples, 0.58%)</title><rect x="303.5" y="99.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.5" y="110.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.58%)</title><rect x="303.5" y="83.0" width="6.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="306.5" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=44738] (657 samples, 6.39%)</title><rect x="310.4" y="243.0" width="75.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="313.4" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (657 samples, 6.39%)</title><rect x="310.4" y="227.0" width="75.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.4" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (28 samples, 0.27%)</title><rect x="310.4" y="211.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.4" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (28 samples, 0.27%)</title><rect x="310.4" y="195.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="313.4" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (629 samples, 6.12%)</title><rect x="313.6" y="211.0" width="72.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.6" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (629 samples, 6.12%)</title><rect x="313.6" y="195.0" width="72.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.6" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (629 samples, 6.12%)</title><rect x="313.6" y="179.0" width="72.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.6" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (196 samples, 1.91%)</title><rect x="313.6" y="163.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.6" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (196 samples, 1.91%)</title><rect x="313.6" y="147.0" width="22.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="316.6" y="158.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (143 samples, 1.39%)</title><rect x="313.6" y="131.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (50 samples, 0.49%)</title><rect x="313.6" y="115.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (50 samples, 0.49%)</title><rect x="313.6" y="99.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.49%)</title><rect x="313.6" y="83.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.24%)</title><rect x="313.6" y="67.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="316.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.24%)</title><rect x="316.5" y="67.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.5" y="78.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.24%)</title><rect x="316.5" y="51.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="319.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (93 samples, 0.91%)</title><rect x="319.4" y="115.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.34%)</title><rect x="319.4" y="99.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.34%)</title><rect x="319.4" y="83.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (35 samples, 0.34%)</title><rect x="319.4" y="67.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$73 (35 samples, 0.34%)</title><rect x="319.4" y="51.0" width="4.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="322.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (58 samples, 0.56%)</title><rect x="323.4" y="99.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (57 samples, 0.55%)</title><rect x="323.4" y="83.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.4" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (38 samples, 0.37%)</title><rect x="323.4" y="67.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="326.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (19 samples, 0.18%)</title><rect x="327.8" y="67.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (19 samples, 0.18%)</title><rect x="327.8" y="51.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (19 samples, 0.18%)</title><rect x="327.8" y="35.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="330.8" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (53 samples, 0.52%)</title><rect x="330.1" y="131.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="333.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.52%)</title><rect x="330.1" y="115.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.52%)</title><rect x="330.1" y="99.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.22%)</title><rect x="330.1" y="83.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="333.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.29%)</title><rect x="332.7" y="83.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="335.7" y="94.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.29%)</title><rect x="332.7" y="67.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="335.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (286 samples, 2.78%)</title><rect x="336.2" y="163.0" width="32.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.2" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (42 samples, 0.41%)</title><rect x="336.2" y="147.0" width="4.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="339.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (104 samples, 1.01%)</title><rect x="341.0" y="147.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (104 samples, 1.01%)</title><rect x="341.0" y="131.0" width="11.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="344.0" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.36%)</title><rect x="352.9" y="147.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.36%)</title><rect x="352.9" y="131.0" width="16.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.9" y="142.0"></text>
</g>
<g>
<title>char[] (69 samples, 0.67%)</title><rect x="352.9" y="115.0" width="7.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="355.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.22%)</title><rect x="360.8" y="115.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="363.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (48 samples, 0.47%)</title><rect x="363.5" y="115.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (48 samples, 0.47%)</title><rect x="363.5" y="99.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (48 samples, 0.47%)</title><rect x="363.5" y="83.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.5" y="94.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.47%)</title><rect x="363.5" y="67.0" width="5.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="366.5" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (147 samples, 1.43%)</title><rect x="369.0" y="163.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (147 samples, 1.43%)</title><rect x="369.0" y="147.0" width="16.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.0" y="158.0"></text>
</g>
<g>
<title>char[] (69 samples, 0.67%)</title><rect x="369.0" y="131.0" width="7.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="372.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.28%)</title><rect x="376.9" y="131.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="379.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (49 samples, 0.48%)</title><rect x="380.3" y="131.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (49 samples, 0.48%)</title><rect x="380.3" y="115.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (49 samples, 0.48%)</title><rect x="380.3" y="99.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.3" y="110.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.48%)</title><rect x="380.3" y="83.0" width="5.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="383.3" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=44739] (652 samples, 6.35%)</title><rect x="385.9" y="243.0" width="74.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="388.9" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (652 samples, 6.35%)</title><rect x="385.9" y="227.0" width="74.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.9" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (33 samples, 0.32%)</title><rect x="385.9" y="211.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.9" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (33 samples, 0.32%)</title><rect x="385.9" y="195.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="388.9" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (619 samples, 6.02%)</title><rect x="389.7" y="211.0" width="71.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.7" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (619 samples, 6.02%)</title><rect x="389.7" y="195.0" width="71.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.7" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (619 samples, 6.02%)</title><rect x="389.7" y="179.0" width="71.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.7" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (208 samples, 2.02%)</title><rect x="389.7" y="163.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.7" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (208 samples, 2.02%)</title><rect x="389.7" y="147.0" width="23.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.7" y="158.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (144 samples, 1.40%)</title><rect x="389.7" y="131.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (53 samples, 0.52%)</title><rect x="389.7" y="115.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.52%)</title><rect x="389.7" y="99.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.52%)</title><rect x="389.7" y="83.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="392.7" y="94.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.24%)</title><rect x="389.7" y="67.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="392.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.27%)</title><rect x="392.5" y="67.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.5" y="78.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.27%)</title><rect x="392.5" y="51.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="395.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (91 samples, 0.89%)</title><rect x="395.8" y="115.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.35%)</title><rect x="395.8" y="99.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.8" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.35%)</title><rect x="395.8" y="83.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="398.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (36 samples, 0.35%)</title><rect x="395.8" y="67.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$73 (36 samples, 0.35%)</title><rect x="395.8" y="51.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="398.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (55 samples, 0.54%)</title><rect x="399.9" y="99.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (55 samples, 0.54%)</title><rect x="399.9" y="83.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.9" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (31 samples, 0.30%)</title><rect x="399.9" y="67.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="402.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (24 samples, 0.23%)</title><rect x="403.4" y="67.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (24 samples, 0.23%)</title><rect x="403.4" y="51.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (24 samples, 0.23%)</title><rect x="403.4" y="35.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="406.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (64 samples, 0.62%)</title><rect x="406.2" y="131.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (64 samples, 0.62%)</title><rect x="406.2" y="115.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.62%)</title><rect x="406.2" y="99.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.24%)</title><rect x="406.2" y="83.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="409.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.38%)</title><rect x="409.1" y="83.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.1" y="94.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.38%)</title><rect x="409.1" y="67.0" width="4.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="412.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (292 samples, 2.84%)</title><rect x="413.6" y="163.0" width="33.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.6" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (50 samples, 0.49%)</title><rect x="413.6" y="147.0" width="5.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="416.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (93 samples, 0.91%)</title><rect x="419.3" y="147.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (93 samples, 0.91%)</title><rect x="419.3" y="131.0" width="10.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="422.3" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (149 samples, 1.45%)</title><rect x="430.0" y="147.0" width="17.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.0" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (149 samples, 1.45%)</title><rect x="430.0" y="131.0" width="17.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.0" y="142.0"></text>
</g>
<g>
<title>char[] (82 samples, 0.80%)</title><rect x="430.0" y="115.0" width="9.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="433.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.14%)</title><rect x="439.4" y="115.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="442.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.52%)</title><rect x="441.0" y="115.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.52%)</title><rect x="441.0" y="99.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (53 samples, 0.52%)</title><rect x="441.0" y="83.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="444.0" y="94.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.52%)</title><rect x="441.0" y="67.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="444.0" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (119 samples, 1.16%)</title><rect x="447.1" y="163.0" width="13.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (119 samples, 1.16%)</title><rect x="447.1" y="147.0" width="13.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.1" y="158.0"></text>
</g>
<g>
<title>char[] (48 samples, 0.47%)</title><rect x="447.1" y="131.0" width="5.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="450.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.23%)</title><rect x="452.6" y="131.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="455.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (47 samples, 0.46%)</title><rect x="455.4" y="131.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (47 samples, 0.46%)</title><rect x="455.4" y="115.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (47 samples, 0.46%)</title><rect x="455.4" y="99.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.4" y="110.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.46%)</title><rect x="455.4" y="83.0" width="5.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="458.4" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=44740] (651 samples, 6.34%)</title><rect x="460.8" y="243.0" width="74.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="463.8" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (651 samples, 6.34%)</title><rect x="460.8" y="227.0" width="74.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.8" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (651 samples, 6.34%)</title><rect x="460.8" y="211.0" width="74.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.8" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (651 samples, 6.34%)</title><rect x="460.8" y="195.0" width="74.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.8" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (651 samples, 6.34%)</title><rect x="460.8" y="179.0" width="74.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.8" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (231 samples, 2.25%)</title><rect x="460.8" y="163.0" width="26.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.8" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (231 samples, 2.25%)</title><rect x="460.8" y="147.0" width="26.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.8" y="158.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (165 samples, 1.61%)</title><rect x="460.8" y="131.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.8" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (63 samples, 0.61%)</title><rect x="460.8" y="115.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (63 samples, 0.61%)</title><rect x="460.8" y="99.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (63 samples, 0.61%)</title><rect x="460.8" y="83.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.8" y="94.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.30%)</title><rect x="460.8" y="67.0" width="3.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="463.8" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.31%)</title><rect x="464.3" y="67.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.3" y="78.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.31%)</title><rect x="464.3" y="51.0" width="3.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="467.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (102 samples, 0.99%)</title><rect x="468.0" y="115.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.29%)</title><rect x="468.0" y="99.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.0" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.29%)</title><rect x="468.0" y="83.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (30 samples, 0.29%)</title><rect x="468.0" y="67.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$73 (30 samples, 0.29%)</title><rect x="468.0" y="51.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="471.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (72 samples, 0.70%)</title><rect x="471.4" y="99.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (72 samples, 0.70%)</title><rect x="471.4" y="83.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.4" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (43 samples, 0.42%)</title><rect x="471.4" y="67.0" width="5.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="474.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (29 samples, 0.28%)</title><rect x="476.4" y="67.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (29 samples, 0.28%)</title><rect x="476.4" y="51.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (29 samples, 0.28%)</title><rect x="476.4" y="35.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="479.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (66 samples, 0.64%)</title><rect x="479.7" y="131.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (66 samples, 0.64%)</title><rect x="479.7" y="115.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (66 samples, 0.64%)</title><rect x="479.7" y="99.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.23%)</title><rect x="479.7" y="83.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="482.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.41%)</title><rect x="482.5" y="83.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.5" y="94.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.41%)</title><rect x="482.5" y="67.0" width="4.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="485.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (293 samples, 2.85%)</title><rect x="487.3" y="163.0" width="33.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.3" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (57 samples, 0.55%)</title><rect x="487.3" y="147.0" width="6.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="490.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (96 samples, 0.93%)</title><rect x="493.8" y="147.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (96 samples, 0.93%)</title><rect x="493.8" y="131.0" width="11.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="496.8" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.36%)</title><rect x="504.9" y="147.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.36%)</title><rect x="504.9" y="131.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.9" y="142.0"></text>
</g>
<g>
<title>char[] (69 samples, 0.67%)</title><rect x="504.9" y="115.0" width="7.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="507.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.20%)</title><rect x="512.8" y="115.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="515.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 0.49%)</title><rect x="515.2" y="115.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 0.49%)</title><rect x="515.2" y="99.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (50 samples, 0.49%)</title><rect x="515.2" y="83.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.2" y="94.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.49%)</title><rect x="515.2" y="67.0" width="5.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="518.2" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (127 samples, 1.24%)</title><rect x="520.9" y="163.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (127 samples, 1.24%)</title><rect x="520.9" y="147.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.9" y="158.0"></text>
</g>
<g>
<title>char[] (60 samples, 0.58%)</title><rect x="520.9" y="131.0" width="6.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="523.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.22%)</title><rect x="527.8" y="131.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="530.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.43%)</title><rect x="530.5" y="131.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.43%)</title><rect x="530.5" y="115.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (44 samples, 0.43%)</title><rect x="530.5" y="99.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.5" y="110.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.43%)</title><rect x="530.5" y="83.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="533.5" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=44741] (630 samples, 6.13%)</title><rect x="535.5" y="243.0" width="72.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="538.5" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (630 samples, 6.13%)</title><rect x="535.5" y="227.0" width="72.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.5" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (630 samples, 6.13%)</title><rect x="535.5" y="211.0" width="72.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.5" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (630 samples, 6.13%)</title><rect x="535.5" y="195.0" width="72.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.5" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (630 samples, 6.13%)</title><rect x="535.5" y="179.0" width="72.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="538.5" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (209 samples, 2.03%)</title><rect x="535.5" y="163.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.5" y="174.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (209 samples, 2.03%)</title><rect x="535.5" y="147.0" width="24.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.5" y="158.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (142 samples, 1.38%)</title><rect x="535.5" y="131.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (58 samples, 0.56%)</title><rect x="535.5" y="115.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.56%)</title><rect x="535.5" y="99.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.56%)</title><rect x="535.5" y="83.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="538.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.22%)</title><rect x="535.5" y="67.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="538.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.34%)</title><rect x="538.2" y="67.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.2" y="78.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.34%)</title><rect x="538.2" y="51.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="541.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.get (84 samples, 0.82%)</title><rect x="542.2" y="115.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.24%)</title><rect x="542.2" y="99.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.2" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.24%)</title><rect x="542.2" y="83.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.get$Lambda (25 samples, 0.24%)</title><rect x="542.2" y="67.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$73 (25 samples, 0.24%)</title><rect x="542.2" y="51.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="545.2" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (59 samples, 0.57%)</title><rect x="545.0" y="99.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (59 samples, 0.57%)</title><rect x="545.0" y="83.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.0" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (37 samples, 0.36%)</title><rect x="545.0" y="67.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="548.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (22 samples, 0.21%)</title><rect x="549.3" y="67.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (22 samples, 0.21%)</title><rect x="549.3" y="51.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (22 samples, 0.21%)</title><rect x="549.3" y="35.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="552.3" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (67 samples, 0.65%)</title><rect x="551.8" y="131.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (67 samples, 0.65%)</title><rect x="551.8" y="115.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (67 samples, 0.65%)</title><rect x="551.8" y="99.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.26%)</title><rect x="551.8" y="83.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="554.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (40 samples, 0.39%)</title><rect x="554.9" y="83.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.9" y="94.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.39%)</title><rect x="554.9" y="67.0" width="4.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="557.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (278 samples, 2.71%)</title><rect x="559.5" y="163.0" width="31.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.5" y="174.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (46 samples, 0.45%)</title><rect x="559.5" y="147.0" width="5.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="562.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (77 samples, 0.75%)</title><rect x="564.8" y="147.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (77 samples, 0.75%)</title><rect x="564.8" y="131.0" width="8.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="567.8" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (155 samples, 1.51%)</title><rect x="573.6" y="147.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (155 samples, 1.51%)</title><rect x="573.6" y="131.0" width="17.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.6" y="142.0"></text>
</g>
<g>
<title>char[] (85 samples, 0.83%)</title><rect x="573.6" y="115.0" width="9.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="576.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.34%)</title><rect x="583.4" y="115.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="586.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.34%)</title><rect x="587.4" y="115.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.34%)</title><rect x="587.4" y="99.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (35 samples, 0.34%)</title><rect x="587.4" y="83.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.4" y="94.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.34%)</title><rect x="587.4" y="67.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="590.4" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (143 samples, 1.39%)</title><rect x="591.4" y="163.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.4" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (143 samples, 1.39%)</title><rect x="591.4" y="147.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.4" y="158.0"></text>
</g>
<g>
<title>char[] (72 samples, 0.70%)</title><rect x="591.4" y="131.0" width="8.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="594.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.31%)</title><rect x="599.7" y="131.0" width="3.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="602.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.38%)</title><rect x="603.4" y="131.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.38%)</title><rect x="603.4" y="115.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.38%)</title><rect x="603.4" y="99.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.4" y="110.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.38%)</title><rect x="603.4" y="83.0" width="4.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="606.4" y="94.0"></text>
</g>
<g>
<title>[async_worker-0 tid=44750] (639 samples, 6.22%)</title><rect x="607.9" y="243.0" width="73.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="610.9" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (639 samples, 6.22%)</title><rect x="607.9" y="227.0" width="73.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.9" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (639 samples, 6.22%)</title><rect x="607.9" y="211.0" width="73.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.9" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (639 samples, 6.22%)</title><rect x="607.9" y="195.0" width="73.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.9" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (627 samples, 6.10%)</title><rect x="607.9" y="179.0" width="72.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.9" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (627 samples, 6.10%)</title><rect x="607.9" y="163.0" width="72.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="610.9" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (627 samples, 6.10%)</title><rect x="607.9" y="147.0" width="72.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.9" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (627 samples, 6.10%)</title><rect x="607.9" y="131.0" width="72.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.9" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (47 samples, 0.46%)</title><rect x="607.9" y="115.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (47 samples, 0.46%)</title><rect x="607.9" y="99.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (47 samples, 0.46%)</title><rect x="607.9" y="83.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.46%)</title><rect x="607.9" y="67.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.9" y="78.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.46%)</title><rect x="607.9" y="51.0" width="5.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="610.9" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (52 samples, 0.51%)</title><rect x="613.3" y="115.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (52 samples, 0.51%)</title><rect x="613.3" y="99.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 0.51%)</title><rect x="613.3" y="83.0" width="5.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="616.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (181 samples, 1.76%)</title><rect x="619.2" y="115.0" width="20.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (181 samples, 1.76%)</title><rect x="619.2" y="99.0" width="20.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (120 samples, 1.17%)</title><rect x="619.2" y="83.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.2" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (120 samples, 1.17%)</title><rect x="619.2" y="67.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.2" y="78.0"></text>
</g>
<g>
<title>byte[] (120 samples, 1.17%)</title><rect x="619.2" y="51.0" width="13.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="622.2" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 0.59%)</title><rect x="633.0" y="83.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.0" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (61 samples, 0.59%)</title><rect x="633.0" y="67.0" width="7.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="636.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (164 samples, 1.60%)</title><rect x="640.0" y="115.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.0" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (29 samples, 0.28%)</title><rect x="640.0" y="99.0" width="3.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="643.0" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (135 samples, 1.31%)</title><rect x="643.4" y="99.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.4" y="110.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.64%)</title><rect x="643.4" y="83.0" width="7.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="646.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (36 samples, 0.35%)</title><rect x="650.9" y="83.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="653.9" y="94.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.32%)</title><rect x="655.1" y="83.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="658.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (149 samples, 1.45%)</title><rect x="658.9" y="115.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 0.72%)</title><rect x="658.9" y="99.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 0.72%)</title><rect x="658.9" y="83.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.72%)</title><rect x="658.9" y="67.0" width="8.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="661.9" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (41 samples, 0.40%)</title><rect x="667.4" y="99.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.4" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (41 samples, 0.40%)</title><rect x="667.4" y="83.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.4" y="94.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.40%)</title><rect x="667.4" y="67.0" width="4.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="670.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (34 samples, 0.33%)</title><rect x="672.1" y="99.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (34 samples, 0.33%)</title><rect x="672.1" y="83.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.1" y="94.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.33%)</title><rect x="672.1" y="67.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="675.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (34 samples, 0.33%)</title><rect x="676.0" y="115.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.0" y="126.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.33%)</title><rect x="676.0" y="99.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="679.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.12%)</title><rect x="679.9" y="179.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12 samples, 0.12%)</title><rect x="679.9" y="163.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.11%)</title><rect x="679.9" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.11%)</title><rect x="679.9" y="131.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.9" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 0.11%)</title><rect x="679.9" y="115.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="682.9" y="126.0"></text>
</g>
<g>
<title>[async_worker-1 tid=44755] (639 samples, 6.22%)</title><rect x="681.3" y="243.0" width="73.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="684.3" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (639 samples, 6.22%)</title><rect x="681.3" y="227.0" width="73.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.3" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (639 samples, 6.22%)</title><rect x="681.3" y="211.0" width="73.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.3" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (639 samples, 6.22%)</title><rect x="681.3" y="195.0" width="73.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="684.3" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (627 samples, 6.10%)</title><rect x="681.3" y="179.0" width="72.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.3" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (627 samples, 6.10%)</title><rect x="681.3" y="163.0" width="72.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.3" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (627 samples, 6.10%)</title><rect x="681.3" y="147.0" width="72.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.3" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (627 samples, 6.10%)</title><rect x="681.3" y="131.0" width="72.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="684.3" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (47 samples, 0.46%)</title><rect x="681.3" y="115.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (47 samples, 0.46%)</title><rect x="681.3" y="99.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (47 samples, 0.46%)</title><rect x="681.3" y="83.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.46%)</title><rect x="681.3" y="67.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.3" y="78.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.46%)</title><rect x="681.3" y="51.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="684.3" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 0.60%)</title><rect x="686.6" y="115.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 0.60%)</title><rect x="686.6" y="99.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (62 samples, 0.60%)</title><rect x="686.6" y="83.0" width="7.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="689.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (157 samples, 1.53%)</title><rect x="693.8" y="115.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (157 samples, 1.53%)</title><rect x="693.8" y="99.0" width="18.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (106 samples, 1.03%)</title><rect x="693.8" y="83.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.8" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (106 samples, 1.03%)</title><rect x="693.8" y="67.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.8" y="78.0"></text>
</g>
<g>
<title>byte[] (106 samples, 1.03%)</title><rect x="693.8" y="51.0" width="12.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="696.8" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (51 samples, 0.50%)</title><rect x="705.9" y="83.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.9" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (51 samples, 0.50%)</title><rect x="705.9" y="67.0" width="5.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="708.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (149 samples, 1.45%)</title><rect x="711.8" y="115.0" width="17.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.8" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (40 samples, 0.39%)</title><rect x="711.8" y="99.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="714.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (109 samples, 1.06%)</title><rect x="716.4" y="99.0" width="12.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.4" y="110.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.42%)</title><rect x="716.4" y="83.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="719.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (42 samples, 0.41%)</title><rect x="721.3" y="83.0" width="4.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="724.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.23%)</title><rect x="726.2" y="83.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="729.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (171 samples, 1.66%)</title><rect x="728.9" y="115.0" width="19.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (90 samples, 0.88%)</title><rect x="728.9" y="99.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (90 samples, 0.88%)</title><rect x="728.9" y="83.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (90 samples, 0.88%)</title><rect x="728.9" y="67.0" width="10.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="731.9" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (36 samples, 0.35%)</title><rect x="739.2" y="99.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.2" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (36 samples, 0.35%)</title><rect x="739.2" y="83.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.2" y="94.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.35%)</title><rect x="739.2" y="67.0" width="4.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="742.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (45 samples, 0.44%)</title><rect x="743.4" y="99.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (45 samples, 0.44%)</title><rect x="743.4" y="83.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.4" y="94.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.44%)</title><rect x="743.4" y="67.0" width="5.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="746.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (41 samples, 0.40%)</title><rect x="748.5" y="115.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.5" y="126.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.40%)</title><rect x="748.5" y="99.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="751.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.12%)</title><rect x="753.3" y="179.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12 samples, 0.12%)</title><rect x="753.3" y="163.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.10%)</title><rect x="753.3" y="147.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (10 samples, 0.10%)</title><rect x="753.3" y="131.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (10 samples, 0.10%)</title><rect x="753.3" y="115.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="756.3" y="126.0"></text>
</g>
<g>
<title>[async_worker-2 tid=44753] (622 samples, 6.05%)</title><rect x="754.6" y="243.0" width="71.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="757.6" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (622 samples, 6.05%)</title><rect x="754.6" y="227.0" width="71.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.6" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (622 samples, 6.05%)</title><rect x="754.6" y="211.0" width="71.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.6" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (622 samples, 6.05%)</title><rect x="754.6" y="195.0" width="71.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.6" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (611 samples, 5.95%)</title><rect x="754.6" y="179.0" width="70.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.6" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (611 samples, 5.95%)</title><rect x="754.6" y="163.0" width="70.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.6" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (611 samples, 5.95%)</title><rect x="754.6" y="147.0" width="70.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.6" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (611 samples, 5.95%)</title><rect x="754.6" y="131.0" width="70.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.6" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (29 samples, 0.28%)</title><rect x="754.6" y="115.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (29 samples, 0.28%)</title><rect x="754.6" y="99.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (29 samples, 0.28%)</title><rect x="754.6" y="83.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.28%)</title><rect x="754.6" y="67.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.6" y="78.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.28%)</title><rect x="754.6" y="51.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="757.6" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 0.44%)</title><rect x="758.0" y="115.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 0.44%)</title><rect x="758.0" y="99.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 0.44%)</title><rect x="758.0" y="83.0" width="5.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="761.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (165 samples, 1.61%)</title><rect x="763.1" y="115.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (165 samples, 1.61%)</title><rect x="763.1" y="99.0" width="19.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="766.1" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (117 samples, 1.14%)</title><rect x="763.1" y="83.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.1" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (117 samples, 1.14%)</title><rect x="763.1" y="67.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.1" y="78.0"></text>
</g>
<g>
<title>byte[] (117 samples, 1.14%)</title><rect x="763.1" y="51.0" width="13.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="766.1" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 0.47%)</title><rect x="776.6" y="83.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.6" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (48 samples, 0.47%)</title><rect x="776.6" y="67.0" width="5.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="779.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (172 samples, 1.67%)</title><rect x="782.1" y="115.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.1" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (30 samples, 0.29%)</title><rect x="782.1" y="99.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="785.1" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (142 samples, 1.38%)</title><rect x="785.5" y="99.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.5" y="110.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.60%)</title><rect x="785.5" y="83.0" width="7.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="788.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (51 samples, 0.50%)</title><rect x="792.6" y="83.0" width="5.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="795.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.28%)</title><rect x="798.5" y="83.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="801.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (145 samples, 1.41%)</title><rect x="801.8" y="115.0" width="16.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (51 samples, 0.50%)</title><rect x="801.8" y="99.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (51 samples, 0.50%)</title><rect x="801.8" y="83.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (51 samples, 0.50%)</title><rect x="801.8" y="67.0" width="5.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="804.8" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (43 samples, 0.42%)</title><rect x="807.7" y="99.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.7" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (43 samples, 0.42%)</title><rect x="807.7" y="83.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.7" y="94.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.42%)</title><rect x="807.7" y="67.0" width="4.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="810.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (51 samples, 0.50%)</title><rect x="812.6" y="99.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (51 samples, 0.50%)</title><rect x="812.6" y="83.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.6" y="94.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.50%)</title><rect x="812.6" y="67.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="815.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (55 samples, 0.54%)</title><rect x="818.5" y="115.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.5" y="126.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.54%)</title><rect x="818.5" y="99.0" width="6.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="821.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.11%)</title><rect x="824.8" y="179.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 0.11%)</title><rect x="824.8" y="163.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.09%)</title><rect x="824.8" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.09%)</title><rect x="824.8" y="131.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.09%)</title><rect x="824.8" y="115.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="827.8" y="126.0"></text>
</g>
<g>
<title>[async_worker-3 tid=44754] (641 samples, 6.24%)</title><rect x="826.1" y="243.0" width="73.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="829.1" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (641 samples, 6.24%)</title><rect x="826.1" y="227.0" width="73.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.1" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (641 samples, 6.24%)</title><rect x="826.1" y="211.0" width="73.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.1" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (641 samples, 6.24%)</title><rect x="826.1" y="195.0" width="73.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.1" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (635 samples, 6.18%)</title><rect x="826.1" y="179.0" width="72.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.1" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (635 samples, 6.18%)</title><rect x="826.1" y="163.0" width="72.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.1" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (635 samples, 6.18%)</title><rect x="826.1" y="147.0" width="72.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.1" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (635 samples, 6.18%)</title><rect x="826.1" y="131.0" width="72.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.1" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (49 samples, 0.48%)</title><rect x="826.1" y="115.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (49 samples, 0.48%)</title><rect x="826.1" y="99.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (49 samples, 0.48%)</title><rect x="826.1" y="83.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.48%)</title><rect x="826.1" y="67.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.1" y="78.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.48%)</title><rect x="826.1" y="51.0" width="5.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="829.1" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (65 samples, 0.63%)</title><rect x="831.7" y="115.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (65 samples, 0.63%)</title><rect x="831.7" y="99.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (65 samples, 0.63%)</title><rect x="831.7" y="83.0" width="7.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="834.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (188 samples, 1.83%)</title><rect x="839.2" y="115.0" width="21.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.2" y="126.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (188 samples, 1.83%)</title><rect x="839.2" y="99.0" width="21.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.2" y="110.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (141 samples, 1.37%)</title><rect x="839.2" y="83.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.2" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (141 samples, 1.37%)</title><rect x="839.2" y="67.0" width="16.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.2" y="78.0"></text>
</g>
<g>
<title>byte[] (141 samples, 1.37%)</title><rect x="839.2" y="51.0" width="16.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="842.2" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (47 samples, 0.46%)</title><rect x="855.4" y="83.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.4" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (47 samples, 0.46%)</title><rect x="855.4" y="67.0" width="5.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="858.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (162 samples, 1.58%)</title><rect x="860.7" y="115.0" width="18.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.7" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (42 samples, 0.41%)</title><rect x="860.7" y="99.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="863.7" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (120 samples, 1.17%)</title><rect x="865.6" y="99.0" width="13.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.6" y="110.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.41%)</title><rect x="865.6" y="83.0" width="4.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="868.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (51 samples, 0.50%)</title><rect x="870.4" y="83.0" width="5.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="873.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.26%)</title><rect x="876.3" y="83.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="879.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (128 samples, 1.25%)</title><rect x="879.4" y="115.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 0.49%)</title><rect x="879.4" y="99.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 0.49%)</title><rect x="879.4" y="83.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 0.49%)</title><rect x="879.4" y="67.0" width="5.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="882.4" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (40 samples, 0.39%)</title><rect x="885.1" y="99.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.1" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (40 samples, 0.39%)</title><rect x="885.1" y="83.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.1" y="94.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.39%)</title><rect x="885.1" y="67.0" width="4.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="888.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (38 samples, 0.37%)</title><rect x="889.7" y="99.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (38 samples, 0.37%)</title><rect x="889.7" y="83.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.7" y="94.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.37%)</title><rect x="889.7" y="67.0" width="4.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="892.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (43 samples, 0.42%)</title><rect x="894.1" y="115.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.1" y="126.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.42%)</title><rect x="894.1" y="99.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="897.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.06%)</title><rect x="899.0" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.06%)</title><rect x="899.0" y="163.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.05%)</title><rect x="899.0" y="147.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.05%)</title><rect x="899.0" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.05%)</title><rect x="899.0" y="115.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="902.0" y="126.0"></text>
</g>
<g>
<title>[async_worker-4 tid=44752] (636 samples, 6.19%)</title><rect x="899.7" y="243.0" width="73.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="902.7" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (636 samples, 6.19%)</title><rect x="899.7" y="227.0" width="73.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.7" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (636 samples, 6.19%)</title><rect x="899.7" y="211.0" width="73.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.7" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (636 samples, 6.19%)</title><rect x="899.7" y="195.0" width="73.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.7" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (627 samples, 6.10%)</title><rect x="899.7" y="179.0" width="72.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.7" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (627 samples, 6.10%)</title><rect x="899.7" y="163.0" width="72.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.7" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (627 samples, 6.10%)</title><rect x="899.7" y="147.0" width="72.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.7" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (627 samples, 6.10%)</title><rect x="899.7" y="131.0" width="72.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.7" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (44 samples, 0.43%)</title><rect x="899.7" y="115.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (44 samples, 0.43%)</title><rect x="899.7" y="99.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (44 samples, 0.43%)</title><rect x="899.7" y="83.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.43%)</title><rect x="899.7" y="67.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.7" y="78.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.43%)</title><rect x="899.7" y="51.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="902.7" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (63 samples, 0.61%)</title><rect x="904.7" y="115.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (63 samples, 0.61%)</title><rect x="904.7" y="99.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (63 samples, 0.61%)</title><rect x="904.7" y="83.0" width="7.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="907.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (167 samples, 1.63%)</title><rect x="912.0" y="115.0" width="19.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (167 samples, 1.63%)</title><rect x="912.0" y="99.0" width="19.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.0" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (110 samples, 1.07%)</title><rect x="912.0" y="83.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.0" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (110 samples, 1.07%)</title><rect x="912.0" y="67.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.0" y="78.0"></text>
</g>
<g>
<title>byte[] (110 samples, 1.07%)</title><rect x="912.0" y="51.0" width="12.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="915.0" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (57 samples, 0.55%)</title><rect x="924.6" y="83.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.6" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (57 samples, 0.55%)</title><rect x="924.6" y="67.0" width="6.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="927.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (168 samples, 1.64%)</title><rect x="931.1" y="115.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.1" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.18%)</title><rect x="931.1" y="99.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="934.1" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (149 samples, 1.45%)</title><rect x="933.3" y="99.0" width="17.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="936.3" y="110.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.70%)</title><rect x="933.3" y="83.0" width="8.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="936.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (41 samples, 0.40%)</title><rect x="941.6" y="83.0" width="4.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="944.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.35%)</title><rect x="946.3" y="83.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="949.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (146 samples, 1.42%)</title><rect x="950.4" y="115.0" width="16.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 0.62%)</title><rect x="950.4" y="99.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 0.62%)</title><rect x="950.4" y="83.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (64 samples, 0.62%)</title><rect x="950.4" y="67.0" width="7.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="953.4" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (38 samples, 0.37%)</title><rect x="957.8" y="99.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.8" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (38 samples, 0.37%)</title><rect x="957.8" y="83.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.8" y="94.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.37%)</title><rect x="957.8" y="67.0" width="4.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="960.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (44 samples, 0.43%)</title><rect x="962.2" y="99.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="965.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (44 samples, 0.43%)</title><rect x="962.2" y="83.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.2" y="94.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.43%)</title><rect x="962.2" y="67.0" width="5.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="965.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (39 samples, 0.38%)</title><rect x="967.2" y="115.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.2" y="126.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.38%)</title><rect x="967.2" y="99.0" width="4.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="970.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.09%)</title><rect x="971.7" y="179.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.09%)</title><rect x="971.7" y="163.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.08%)</title><rect x="971.7" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.08%)</title><rect x="971.7" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.08%)</title><rect x="971.7" y="115.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="974.7" y="126.0"></text>
</g>
<g>
<title>[async_worker-5 tid=44751] (633 samples, 6.16%)</title><rect x="972.7" y="243.0" width="72.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="975.7" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (633 samples, 6.16%)</title><rect x="972.7" y="227.0" width="72.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.7" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (633 samples, 6.16%)</title><rect x="972.7" y="211.0" width="72.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.7" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (633 samples, 6.16%)</title><rect x="972.7" y="195.0" width="72.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.7" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (625 samples, 6.08%)</title><rect x="972.7" y="179.0" width="71.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.7" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (625 samples, 6.08%)</title><rect x="972.7" y="163.0" width="71.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="975.7" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (625 samples, 6.08%)</title><rect x="972.7" y="147.0" width="71.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.7" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (625 samples, 6.08%)</title><rect x="972.7" y="131.0" width="71.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.7" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (47 samples, 0.46%)</title><rect x="972.7" y="115.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (47 samples, 0.46%)</title><rect x="972.7" y="99.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="975.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (47 samples, 0.46%)</title><rect x="972.7" y="83.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.46%)</title><rect x="972.7" y="67.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.7" y="78.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.46%)</title><rect x="972.7" y="51.0" width="5.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="975.7" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (63 samples, 0.61%)</title><rect x="978.1" y="115.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (63 samples, 0.61%)</title><rect x="978.1" y="99.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (63 samples, 0.61%)</title><rect x="978.1" y="83.0" width="7.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="981.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (170 samples, 1.65%)</title><rect x="985.4" y="115.0" width="19.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (170 samples, 1.65%)</title><rect x="985.4" y="99.0" width="19.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.4" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (120 samples, 1.17%)</title><rect x="985.4" y="83.0" width="13.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.4" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (120 samples, 1.17%)</title><rect x="985.4" y="67.0" width="13.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.4" y="78.0"></text>
</g>
<g>
<title>byte[] (120 samples, 1.17%)</title><rect x="985.4" y="51.0" width="13.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="988.4" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (50 samples, 0.49%)</title><rect x="999.1" y="83.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.1" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (50 samples, 0.49%)</title><rect x="999.1" y="67.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1002.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (158 samples, 1.54%)</title><rect x="1004.9" y="115.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1007.9" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (36 samples, 0.35%)</title><rect x="1004.9" y="99.0" width="4.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1007.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (122 samples, 1.19%)</title><rect x="1009.0" y="99.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1012.0" y="110.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.55%)</title><rect x="1009.0" y="83.0" width="6.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1012.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (42 samples, 0.41%)</title><rect x="1015.6" y="83.0" width="4.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1018.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.22%)</title><rect x="1020.4" y="83.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1023.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (142 samples, 1.38%)</title><rect x="1023.0" y="115.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1026.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (58 samples, 0.56%)</title><rect x="1023.0" y="99.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (58 samples, 0.56%)</title><rect x="1023.0" y="83.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.56%)</title><rect x="1023.0" y="67.0" width="6.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1026.0" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (46 samples, 0.45%)</title><rect x="1029.7" y="99.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.7" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (46 samples, 0.45%)</title><rect x="1029.7" y="83.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.7" y="94.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.45%)</title><rect x="1029.7" y="67.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1032.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (38 samples, 0.37%)</title><rect x="1035.0" y="99.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (38 samples, 0.37%)</title><rect x="1035.0" y="83.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1038.0" y="94.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.37%)</title><rect x="1035.0" y="67.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1038.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (45 samples, 0.44%)</title><rect x="1039.3" y="115.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1042.3" y="126.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.44%)</title><rect x="1039.3" y="99.0" width="5.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1042.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.08%)</title><rect x="1044.5" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1047.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.08%)</title><rect x="1044.5" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.08%)</title><rect x="1044.5" y="147.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.08%)</title><rect x="1044.5" y="131.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.08%)</title><rect x="1044.5" y="115.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1047.5" y="126.0"></text>
</g>
<g>
<title>[async_worker-6 tid=44756] (631 samples, 6.14%)</title><rect x="1045.4" y="243.0" width="72.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1048.4" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (631 samples, 6.14%)</title><rect x="1045.4" y="227.0" width="72.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.4" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (631 samples, 6.14%)</title><rect x="1045.4" y="211.0" width="72.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.4" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (631 samples, 6.14%)</title><rect x="1045.4" y="195.0" width="72.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.4" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (623 samples, 6.06%)</title><rect x="1045.4" y="179.0" width="71.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.4" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (623 samples, 6.06%)</title><rect x="1045.4" y="163.0" width="71.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.4" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (623 samples, 6.06%)</title><rect x="1045.4" y="147.0" width="71.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.4" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (623 samples, 6.06%)</title><rect x="1045.4" y="131.0" width="71.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.4" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (50 samples, 0.49%)</title><rect x="1045.4" y="115.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (50 samples, 0.49%)</title><rect x="1045.4" y="99.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (50 samples, 0.49%)</title><rect x="1045.4" y="83.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.49%)</title><rect x="1045.4" y="67.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.4" y="78.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.49%)</title><rect x="1045.4" y="51.0" width="5.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1048.4" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (54 samples, 0.53%)</title><rect x="1051.2" y="115.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (54 samples, 0.53%)</title><rect x="1051.2" y="99.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 0.53%)</title><rect x="1051.2" y="83.0" width="6.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1054.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (180 samples, 1.75%)</title><rect x="1057.4" y="115.0" width="20.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1060.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (180 samples, 1.75%)</title><rect x="1057.4" y="99.0" width="20.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.4" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (142 samples, 1.38%)</title><rect x="1057.4" y="83.0" width="16.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.4" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (142 samples, 1.38%)</title><rect x="1057.4" y="67.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.4" y="78.0"></text>
</g>
<g>
<title>byte[] (142 samples, 1.38%)</title><rect x="1057.4" y="51.0" width="16.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1060.4" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 0.37%)</title><rect x="1073.7" y="83.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.7" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (38 samples, 0.37%)</title><rect x="1073.7" y="67.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1076.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (161 samples, 1.57%)</title><rect x="1078.0" y="115.0" width="18.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.0" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (31 samples, 0.30%)</title><rect x="1078.0" y="99.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1081.0" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (130 samples, 1.27%)</title><rect x="1081.6" y="99.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.6" y="110.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.54%)</title><rect x="1081.6" y="83.0" width="6.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1084.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (34 samples, 0.33%)</title><rect x="1087.9" y="83.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1090.9" y="94.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.40%)</title><rect x="1091.8" y="83.0" width="4.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1094.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (151 samples, 1.47%)</title><rect x="1096.5" y="115.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (60 samples, 0.58%)</title><rect x="1096.5" y="99.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (60 samples, 0.58%)</title><rect x="1096.5" y="83.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (60 samples, 0.58%)</title><rect x="1096.5" y="67.0" width="6.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1099.5" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (48 samples, 0.47%)</title><rect x="1103.4" y="99.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1106.4" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (48 samples, 0.47%)</title><rect x="1103.4" y="83.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.4" y="94.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.47%)</title><rect x="1103.4" y="67.0" width="5.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1106.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (43 samples, 0.42%)</title><rect x="1108.9" y="99.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (43 samples, 0.42%)</title><rect x="1108.9" y="83.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.9" y="94.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.42%)</title><rect x="1108.9" y="67.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1111.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (27 samples, 0.26%)</title><rect x="1113.9" y="115.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1116.9" y="126.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.26%)</title><rect x="1113.9" y="99.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1116.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.08%)</title><rect x="1117.0" y="179.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.08%)</title><rect x="1117.0" y="163.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.08%)</title><rect x="1117.0" y="147.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.08%)</title><rect x="1117.0" y="131.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.08%)</title><rect x="1117.0" y="115.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1120.0" y="126.0"></text>
</g>
<g>
<title>[async_worker-7 tid=44757] (628 samples, 6.11%)</title><rect x="1117.9" y="243.0" width="72.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1120.9" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (628 samples, 6.11%)</title><rect x="1117.9" y="227.0" width="72.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.9" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (628 samples, 6.11%)</title><rect x="1117.9" y="211.0" width="72.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.9" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (628 samples, 6.11%)</title><rect x="1117.9" y="195.0" width="72.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.9" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (619 samples, 6.02%)</title><rect x="1117.9" y="179.0" width="71.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.9" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (619 samples, 6.02%)</title><rect x="1117.9" y="163.0" width="71.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.9" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$73/525657107.run (619 samples, 6.02%)</title><rect x="1117.9" y="147.0" width="71.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.9" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$get$2 (619 samples, 6.02%)</title><rect x="1117.9" y="131.0" width="71.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.9" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (55 samples, 0.54%)</title><rect x="1117.9" y="115.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (55 samples, 0.54%)</title><rect x="1117.9" y="99.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (55 samples, 0.54%)</title><rect x="1117.9" y="83.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (55 samples, 0.54%)</title><rect x="1117.9" y="67.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.9" y="78.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.54%)</title><rect x="1117.9" y="51.0" width="6.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1120.9" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (84 samples, 0.82%)</title><rect x="1124.2" y="115.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (84 samples, 0.82%)</title><rect x="1124.2" y="99.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (84 samples, 0.82%)</title><rect x="1124.2" y="83.0" width="9.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1127.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (140 samples, 1.36%)</title><rect x="1133.8" y="115.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (140 samples, 1.36%)</title><rect x="1133.8" y="99.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (96 samples, 0.93%)</title><rect x="1133.8" y="83.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.8" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (96 samples, 0.93%)</title><rect x="1133.8" y="67.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.8" y="78.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.93%)</title><rect x="1133.8" y="51.0" width="11.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1136.8" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 0.43%)</title><rect x="1144.9" y="83.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.9" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (44 samples, 0.43%)</title><rect x="1144.9" y="67.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1147.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (172 samples, 1.67%)</title><rect x="1149.9" y="115.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1152.9" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (31 samples, 0.30%)</title><rect x="1149.9" y="99.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1152.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (141 samples, 1.37%)</title><rect x="1153.5" y="99.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1156.5" y="110.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.73%)</title><rect x="1153.5" y="83.0" width="8.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1156.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (41 samples, 0.40%)</title><rect x="1162.1" y="83.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1165.1" y="94.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.24%)</title><rect x="1166.8" y="83.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1169.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (142 samples, 1.38%)</title><rect x="1169.7" y="115.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 0.60%)</title><rect x="1169.7" y="99.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 0.60%)</title><rect x="1169.7" y="83.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1172.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (62 samples, 0.60%)</title><rect x="1169.7" y="67.0" width="7.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1172.7" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (46 samples, 0.45%)</title><rect x="1176.8" y="99.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.8" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (46 samples, 0.45%)</title><rect x="1176.8" y="83.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.8" y="94.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.45%)</title><rect x="1176.8" y="67.0" width="5.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1179.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (34 samples, 0.33%)</title><rect x="1182.1" y="99.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (34 samples, 0.33%)</title><rect x="1182.1" y="83.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.1" y="94.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.33%)</title><rect x="1182.1" y="67.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1185.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (26 samples, 0.25%)</title><rect x="1186.0" y="115.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.0" y="126.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.25%)</title><rect x="1186.0" y="99.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1189.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.09%)</title><rect x="1189.0" y="179.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.09%)</title><rect x="1189.0" y="163.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.09%)</title><rect x="1189.0" y="147.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.09%)</title><rect x="1189.0" y="131.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.09%)</title><rect x="1189.0" y="115.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1192.0" y="126.0"></text>
</g>
</g>
</svg>
