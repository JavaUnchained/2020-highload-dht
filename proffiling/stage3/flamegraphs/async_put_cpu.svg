<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (5,437 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=44734] (105 samples, 1.93%)</title><rect x="10.0" y="947.0" width="22.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="958.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (105 samples, 1.93%)</title><rect x="10.0" y="931.0" width="22.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="942.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.06%)</title><rect x="10.2" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.06%)</title><rect x="10.2" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.06%)</title><rect x="10.2" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (48 samples, 0.88%)</title><rect x="10.9" y="915.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (48 samples, 0.88%)</title><rect x="10.9" y="899.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.9" y="910.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="10.9" y="883.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.9" y="894.0"></text>
</g>
<g>
<title>epoll_wait (45 samples, 0.83%)</title><rect x="11.5" y="883.0" width="9.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.81%)</title><rect x="11.7" y="867.0" width="9.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="14.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.81%)</title><rect x="11.7" y="851.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="14.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (43 samples, 0.79%)</title><rect x="12.0" y="835.0" width="9.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="15.0" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (43 samples, 0.79%)</title><rect x="12.0" y="819.0" width="9.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="15.0" y="830.0"></text>
</g>
<g>
<title>ep_poll (41 samples, 0.75%)</title><rect x="12.2" y="803.0" width="8.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="15.2" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.15%)</title><rect x="12.2" y="787.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="15.2" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.09%)</title><rect x="12.6" y="771.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.09%)</title><rect x="12.6" y="755.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="15.6" y="766.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.09%)</title><rect x="12.6" y="739.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="15.6" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="13.3" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.3" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (32 samples, 0.59%)</title><rect x="14.1" y="787.0" width="7.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="17.1" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (32 samples, 0.59%)</title><rect x="14.1" y="771.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="17.1" y="782.0"></text>
</g>
<g>
<title>schedule (32 samples, 0.59%)</title><rect x="14.1" y="755.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.1" y="766.0"></text>
</g>
<g>
<title>__schedule (32 samples, 0.59%)</title><rect x="14.1" y="739.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="17.1" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (32 samples, 0.59%)</title><rect x="14.1" y="723.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (51 samples, 0.94%)</title><rect x="21.3" y="915.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (51 samples, 0.94%)</title><rect x="21.3" y="899.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 0.53%)</title><rect x="21.3" y="883.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 0.20%)</title><rect x="23.0" y="867.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 0.20%)</title><rect x="23.0" y="851.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.0" y="862.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (5 samples, 0.09%)</title><rect x="23.0" y="835.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (4 samples, 0.07%)</title><rect x="23.2" y="819.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (4 samples, 0.07%)</title><rect x="23.2" y="803.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.07%)</title><rect x="23.2" y="787.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="23.5" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.11%)</title><rect x="24.1" y="835.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.11%)</title><rect x="24.1" y="819.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.09%)</title><rect x="24.1" y="803.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.09%)</title><rect x="25.4" y="867.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="25.6" y="851.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="25.6" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.07%)</title><rect x="26.5" y="867.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (22 samples, 0.40%)</title><rect x="27.6" y="883.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (22 samples, 0.40%)</title><rect x="27.6" y="867.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.6" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.09%)</title><rect x="27.6" y="851.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="30.6" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="27.6" y="835.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="30.6" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.04%)</title><rect x="28.2" y="835.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="31.2" y="846.0"></text>
</g>
<g>
<title>__recv (17 samples, 0.31%)</title><rect x="28.7" y="851.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="31.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.31%)</title><rect x="28.7" y="835.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="31.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.29%)</title><rect x="28.9" y="819.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.28%)</title><rect x="29.1" y="803.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.1" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.28%)</title><rect x="29.1" y="787.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.1" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.24%)</title><rect x="29.1" y="771.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.1" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.20%)</title><rect x="29.3" y="755.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="32.3" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.18%)</title><rect x="29.5" y="739.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.5" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.07%)</title><rect x="30.4" y="723.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="33.4" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.06%)</title><rect x="30.6" y="707.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.6" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.06%)</title><rect x="30.6" y="691.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="33.6" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="30.6" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="33.6" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="31.9" y="771.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.9" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="32.4" y="915.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="35.4" y="926.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=44735] (103 samples, 1.89%)</title><rect x="32.8" y="947.0" width="22.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="35.8" y="958.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (102 samples, 1.88%)</title><rect x="33.0" y="931.0" width="22.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.0" y="942.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 0.85%)</title><rect x="33.0" y="915.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (45 samples, 0.83%)</title><rect x="33.2" y="899.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.2" y="910.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="33.7" y="883.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="36.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (41 samples, 0.75%)</title><rect x="34.1" y="883.0" width="8.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="37.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.66%)</title><rect x="35.2" y="867.0" width="7.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="38.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.66%)</title><rect x="35.2" y="851.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="38.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (35 samples, 0.64%)</title><rect x="35.4" y="835.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="38.4" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (34 samples, 0.63%)</title><rect x="35.4" y="819.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="38.4" y="830.0"></text>
</g>
<g>
<title>ep_poll (32 samples, 0.59%)</title><rect x="35.6" y="803.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="38.6" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.06%)</title><rect x="35.6" y="787.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="38.6" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.04%)</title><rect x="35.8" y="771.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.8" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.04%)</title><rect x="35.8" y="755.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.8" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (28 samples, 0.51%)</title><rect x="36.5" y="787.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="39.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (27 samples, 0.50%)</title><rect x="36.7" y="771.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="39.7" y="782.0"></text>
</g>
<g>
<title>schedule (27 samples, 0.50%)</title><rect x="36.7" y="755.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="39.7" y="766.0"></text>
</g>
<g>
<title>__schedule (27 samples, 0.50%)</title><rect x="36.7" y="739.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="39.7" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (27 samples, 0.50%)</title><rect x="36.7" y="723.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="39.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (56 samples, 1.03%)</title><rect x="43.0" y="915.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (53 samples, 0.97%)</title><rect x="43.6" y="899.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 0.53%)</title><rect x="43.6" y="883.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (13 samples, 0.24%)</title><rect x="44.3" y="867.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13 samples, 0.24%)</title><rect x="44.3" y="851.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.3" y="862.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (12 samples, 0.22%)</title><rect x="44.3" y="835.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="44.3" y="819.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (9 samples, 0.17%)</title><rect x="44.9" y="819.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (9 samples, 0.17%)</title><rect x="44.9" y="803.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.17%)</title><rect x="44.9" y="787.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.06%)</title><rect x="45.6" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="45.6" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="45.6" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="45.6" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.06%)</title><rect x="46.2" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.07%)</title><rect x="47.1" y="867.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.07%)</title><rect x="47.1" y="851.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.11%)</title><rect x="48.0" y="867.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="48.4" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="48.4" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="49.3" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="49.3" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (24 samples, 0.44%)</title><rect x="49.9" y="883.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.29%)</title><rect x="49.9" y="867.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.9" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.11%)</title><rect x="50.2" y="851.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="53.2" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="50.6" y="835.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="53.6" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.06%)</title><rect x="50.8" y="819.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="53.8" y="830.0"></text>
</g>
<g>
<title>__recv (9 samples, 0.17%)</title><rect x="51.5" y="851.0" width="1.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="54.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.17%)</title><rect x="51.5" y="835.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="54.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.15%)</title><rect x="51.7" y="819.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="54.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (8 samples, 0.15%)</title><rect x="51.7" y="803.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="54.7" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (8 samples, 0.15%)</title><rect x="51.7" y="787.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.7" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.11%)</title><rect x="51.9" y="771.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="54.9" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (6 samples, 0.11%)</title><rect x="51.9" y="755.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="54.9" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.09%)</title><rect x="52.1" y="739.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="55.1" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="52.3" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="55.3" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="52.3" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="55.3" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="52.3" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="55.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (8 samples, 0.15%)</title><rect x="53.4" y="867.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.4" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=44736] (85 samples, 1.56%)</title><rect x="55.1" y="947.0" width="18.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="58.1" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (85 samples, 1.56%)</title><rect x="55.1" y="931.0" width="18.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 0.66%)</title><rect x="55.1" y="915.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (36 samples, 0.66%)</title><rect x="55.1" y="899.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.1" y="910.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="55.1" y="883.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="58.1" y="894.0"></text>
</g>
<g>
<title>epoll_wait (34 samples, 0.63%)</title><rect x="55.6" y="883.0" width="7.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="58.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.59%)</title><rect x="56.0" y="867.0" width="7.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="59.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.59%)</title><rect x="56.0" y="851.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (30 samples, 0.55%)</title><rect x="56.4" y="835.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="59.4" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (30 samples, 0.55%)</title><rect x="56.4" y="819.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="59.4" y="830.0"></text>
</g>
<g>
<title>ep_poll (29 samples, 0.53%)</title><rect x="56.4" y="803.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="59.4" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.09%)</title><rect x="56.7" y="787.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.7" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.06%)</title><rect x="56.9" y="771.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="59.9" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (22 samples, 0.40%)</title><rect x="57.7" y="787.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.7" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (21 samples, 0.39%)</title><rect x="58.0" y="771.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.0" y="782.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.39%)</title><rect x="58.0" y="755.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="61.0" y="766.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.39%)</title><rect x="58.0" y="739.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="61.0" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 0.35%)</title><rect x="58.4" y="723.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="61.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (48 samples, 0.88%)</title><rect x="63.0" y="915.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (41 samples, 0.75%)</title><rect x="64.5" y="899.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 0.39%)</title><rect x="64.5" y="883.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (8 samples, 0.15%)</title><rect x="65.8" y="867.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (8 samples, 0.15%)</title><rect x="65.8" y="851.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.8" y="862.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (6 samples, 0.11%)</title><rect x="65.8" y="835.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (5 samples, 0.09%)</title><rect x="66.0" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (5 samples, 0.09%)</title><rect x="66.0" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.09%)</title><rect x="66.0" y="787.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.07%)</title><rect x="66.2" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.07%)</title><rect x="66.2" y="755.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.07%)</title><rect x="66.2" y="739.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.07%)</title><rect x="66.2" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="67.1" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="67.1" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="67.1" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.06%)</title><rect x="67.5" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.06%)</title><rect x="68.2" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="68.4" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="68.4" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (20 samples, 0.37%)</title><rect x="69.0" y="883.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 0.26%)</title><rect x="69.0" y="867.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.0" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="69.2" y="851.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="72.2" y="862.0"></text>
</g>
<g>
<title>__recv (11 samples, 0.20%)</title><rect x="69.7" y="851.0" width="2.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="72.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.20%)</title><rect x="69.7" y="835.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="72.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.20%)</title><rect x="69.7" y="819.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="72.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 0.18%)</title><rect x="69.9" y="803.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="72.9" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.18%)</title><rect x="69.9" y="787.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="72.9" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.11%)</title><rect x="70.1" y="771.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="73.1" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.09%)</title><rect x="70.1" y="755.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="73.1" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.07%)</title><rect x="70.3" y="739.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="73.3" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.04%)</title><rect x="70.6" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="73.6" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.04%)</title><rect x="70.6" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="73.6" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="71.4" y="771.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="74.4" y="782.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="71.4" y="755.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="74.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="71.4" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="74.4" y="750.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="71.4" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="74.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (6 samples, 0.11%)</title><rect x="72.1" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.1" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=44737] (94 samples, 1.73%)</title><rect x="73.6" y="947.0" width="20.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="76.6" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (94 samples, 1.73%)</title><rect x="73.6" y="931.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.6" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.09%)</title><rect x="74.0" y="915.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.09%)</title><rect x="74.0" y="899.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.09%)</title><rect x="74.0" y="883.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (37 samples, 0.68%)</title><rect x="75.1" y="915.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (37 samples, 0.68%)</title><rect x="75.1" y="899.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.1" y="910.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="75.3" y="883.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="78.3" y="894.0"></text>
</g>
<g>
<title>epoll_wait (34 samples, 0.63%)</title><rect x="75.8" y="883.0" width="7.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="78.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.57%)</title><rect x="76.4" y="867.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.57%)</title><rect x="76.4" y="851.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (29 samples, 0.53%)</title><rect x="76.8" y="835.0" width="6.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="79.8" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (29 samples, 0.53%)</title><rect x="76.8" y="819.0" width="6.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.8" y="830.0"></text>
</g>
<g>
<title>ep_poll (28 samples, 0.51%)</title><rect x="77.1" y="803.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.04%)</title><rect x="77.3" y="787.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="80.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (23 samples, 0.42%)</title><rect x="77.9" y="787.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="80.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (23 samples, 0.42%)</title><rect x="77.9" y="771.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.9" y="782.0"></text>
</g>
<g>
<title>schedule (23 samples, 0.42%)</title><rect x="77.9" y="755.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.9" y="766.0"></text>
</g>
<g>
<title>__schedule (23 samples, 0.42%)</title><rect x="77.9" y="739.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="80.9" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (23 samples, 0.42%)</title><rect x="77.9" y="723.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="80.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (49 samples, 0.90%)</title><rect x="83.1" y="915.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47 samples, 0.86%)</title><rect x="83.6" y="899.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24 samples, 0.44%)</title><rect x="83.6" y="883.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9 samples, 0.17%)</title><rect x="84.0" y="867.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9 samples, 0.17%)</title><rect x="84.0" y="851.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.0" y="862.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (7 samples, 0.13%)</title><rect x="84.0" y="835.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="84.0" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (4 samples, 0.07%)</title><rect x="84.7" y="819.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (3 samples, 0.06%)</title><rect x="84.9" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.06%)</title><rect x="84.9" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="85.1" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="85.1" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="85.1" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="85.1" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="85.5" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="85.5" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="85.5" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.17%)</title><rect x="86.0" y="867.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.09%)</title><rect x="86.0" y="851.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="86.2" y="835.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.07%)</title><rect x="87.0" y="851.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="87.9" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="88.3" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="88.3" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (23 samples, 0.42%)</title><rect x="88.8" y="883.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 0.42%)</title><rect x="88.8" y="867.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.8" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.06%)</title><rect x="89.0" y="851.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="92.0" y="862.0"></text>
</g>
<g>
<title>__recv (18 samples, 0.33%)</title><rect x="89.7" y="851.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="92.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.33%)</title><rect x="89.7" y="835.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.04%)</title><rect x="89.7" y="819.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.29%)</title><rect x="90.1" y="819.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="93.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.29%)</title><rect x="90.1" y="803.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="93.1" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 0.29%)</title><rect x="90.1" y="787.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="93.1" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.24%)</title><rect x="90.3" y="771.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="93.3" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.20%)</title><rect x="90.5" y="755.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.5" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 0.17%)</title><rect x="91.0" y="739.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="94.0" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="92.0" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="95.0" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.04%)</title><rect x="92.5" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="95.5" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.04%)</title><rect x="92.5" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="95.5" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="93.1" y="771.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="96.1" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="93.1" y="755.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="96.1" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=44738] (95 samples, 1.75%)</title><rect x="94.0" y="947.0" width="20.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="97.0" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (95 samples, 1.75%)</title><rect x="94.0" y="931.0" width="20.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (37 samples, 0.68%)</title><rect x="94.2" y="915.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (37 samples, 0.68%)</title><rect x="94.2" y="899.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.2" y="910.0"></text>
</g>
<g>
<title>epoll_wait (35 samples, 0.64%)</title><rect x="94.6" y="883.0" width="7.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="97.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.61%)</title><rect x="95.1" y="867.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="98.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.61%)</title><rect x="95.1" y="851.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="98.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (32 samples, 0.59%)</title><rect x="95.3" y="835.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="98.3" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (32 samples, 0.59%)</title><rect x="95.3" y="819.0" width="6.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="98.3" y="830.0"></text>
</g>
<g>
<title>ep_poll (32 samples, 0.59%)</title><rect x="95.3" y="803.0" width="6.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="98.3" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.18%)</title><rect x="95.3" y="787.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.3" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.17%)</title><rect x="95.5" y="771.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="98.5" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (8 samples, 0.15%)</title><rect x="95.5" y="755.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="98.5" y="766.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.13%)</title><rect x="95.7" y="739.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="98.7" y="750.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.04%)</title><rect x="96.2" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="99.2" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.06%)</title><rect x="96.6" y="723.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.6" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (22 samples, 0.40%)</title><rect x="97.5" y="787.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="100.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (21 samples, 0.39%)</title><rect x="97.7" y="771.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.7" y="782.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.39%)</title><rect x="97.7" y="755.0" width="4.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.7" y="766.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.39%)</title><rect x="97.7" y="739.0" width="4.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.7" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 0.33%)</title><rect x="98.3" y="723.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="101.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (55 samples, 1.01%)</title><rect x="102.2" y="915.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (53 samples, 0.97%)</title><rect x="102.7" y="899.0" width="11.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 0.39%)</title><rect x="102.7" y="883.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.09%)</title><rect x="103.8" y="867.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.09%)</title><rect x="103.8" y="851.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.8" y="862.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (5 samples, 0.09%)</title><rect x="103.8" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (5 samples, 0.09%)</title><rect x="103.8" y="819.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (5 samples, 0.09%)</title><rect x="103.8" y="803.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.09%)</title><rect x="103.8" y="787.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="104.2" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="104.2" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="104.2" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="104.2" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.06%)</title><rect x="104.8" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="105.5" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.11%)</title><rect x="105.9" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="105.9" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="106.4" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (32 samples, 0.59%)</title><rect x="107.2" y="883.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (26 samples, 0.48%)</title><rect x="107.4" y="867.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.4" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.09%)</title><rect x="107.7" y="851.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="110.7" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.06%)</title><rect x="108.1" y="835.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="111.1" y="846.0"></text>
</g>
<g>
<title>__recv (18 samples, 0.33%)</title><rect x="108.7" y="851.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="111.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.29%)</title><rect x="109.2" y="835.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="112.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.29%)</title><rect x="109.2" y="819.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="112.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (14 samples, 0.26%)</title><rect x="109.6" y="803.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.6" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (13 samples, 0.24%)</title><rect x="109.6" y="787.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="112.6" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.22%)</title><rect x="109.6" y="771.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="112.6" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (10 samples, 0.18%)</title><rect x="109.8" y="755.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="112.8" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.18%)</title><rect x="109.8" y="739.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="112.8" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.06%)</title><rect x="111.4" y="723.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.4" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.06%)</title><rect x="111.4" y="707.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.4" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="112.7" y="851.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="115.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (5 samples, 0.09%)</title><rect x="113.1" y="867.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.1" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="114.2" y="915.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="117.2" y="926.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=44739] (86 samples, 1.58%)</title><rect x="114.6" y="947.0" width="18.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="117.6" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (84 samples, 1.54%)</title><rect x="115.0" y="931.0" width="18.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 0.66%)</title><rect x="115.0" y="915.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (36 samples, 0.66%)</title><rect x="115.0" y="899.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.0" y="910.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="115.3" y="883.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="118.3" y="894.0"></text>
</g>
<g>
<title>epoll_wait (32 samples, 0.59%)</title><rect x="115.9" y="883.0" width="7.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="118.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.55%)</title><rect x="116.3" y="867.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="119.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.53%)</title><rect x="116.6" y="851.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="119.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (29 samples, 0.53%)</title><rect x="116.6" y="835.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="119.6" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (29 samples, 0.53%)</title><rect x="116.6" y="819.0" width="6.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.6" y="830.0"></text>
</g>
<g>
<title>ep_poll (28 samples, 0.51%)</title><rect x="116.8" y="803.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.8" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.04%)</title><rect x="117.0" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="120.0" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.04%)</title><rect x="117.0" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="120.0" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.04%)</title><rect x="117.0" y="755.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="120.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (25 samples, 0.46%)</title><rect x="117.4" y="787.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="120.4" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (25 samples, 0.46%)</title><rect x="117.4" y="771.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="120.4" y="782.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.46%)</title><rect x="117.4" y="755.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="120.4" y="766.0"></text>
</g>
<g>
<title>__schedule (25 samples, 0.46%)</title><rect x="117.4" y="739.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="120.4" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (22 samples, 0.40%)</title><rect x="118.1" y="723.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="121.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (47 samples, 0.86%)</title><rect x="122.9" y="915.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (45 samples, 0.83%)</title><rect x="123.3" y="899.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 0.35%)</title><rect x="123.3" y="883.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.06%)</title><rect x="124.4" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.06%)</title><rect x="124.4" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="124.6" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="124.6" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="124.6" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.13%)</title><rect x="125.0" y="867.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="125.2" y="851.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="125.2" y="835.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.04%)</title><rect x="126.1" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="126.5" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="127.0" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="127.0" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (26 samples, 0.48%)</title><rect x="127.4" y="883.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (20 samples, 0.37%)</title><rect x="127.8" y="867.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.8" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.06%)</title><rect x="127.8" y="851.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="130.8" y="862.0"></text>
</g>
<g>
<title>__recv (17 samples, 0.31%)</title><rect x="128.5" y="851.0" width="3.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="131.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.29%)</title><rect x="128.7" y="835.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="131.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.29%)</title><rect x="128.7" y="819.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="131.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.29%)</title><rect x="128.7" y="803.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="131.7" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 0.29%)</title><rect x="128.7" y="787.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="131.7" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.22%)</title><rect x="128.7" y="771.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="131.7" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (9 samples, 0.17%)</title><rect x="128.9" y="755.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="131.9" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 0.17%)</title><rect x="128.9" y="739.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="131.9" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="129.2" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="132.2" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="129.2" y="707.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="132.2" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.04%)</title><rect x="130.0" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="133.0" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.04%)</title><rect x="130.0" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="133.0" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.04%)</title><rect x="130.5" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="133.5" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="130.5" y="707.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="133.5" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.04%)</title><rect x="130.9" y="755.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="133.9" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="130.9" y="739.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="133.9" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="130.9" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="133.9" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="131.3" y="771.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="134.3" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="131.8" y="755.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="134.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (4 samples, 0.07%)</title><rect x="132.2" y="867.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.2" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=44740] (95 samples, 1.75%)</title><rect x="133.3" y="947.0" width="20.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="136.3" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (94 samples, 1.73%)</title><rect x="133.5" y="931.0" width="20.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="133.7" y="915.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="133.7" y="899.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.04%)</title><rect x="133.7" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (44 samples, 0.81%)</title><rect x="134.1" y="915.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (44 samples, 0.81%)</title><rect x="134.1" y="899.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.1" y="910.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="134.4" y="883.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="137.4" y="894.0"></text>
</g>
<g>
<title>epoll_wait (40 samples, 0.74%)</title><rect x="135.0" y="883.0" width="8.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="138.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.68%)</title><rect x="135.7" y="867.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="138.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.68%)</title><rect x="135.7" y="851.0" width="8.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="138.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (37 samples, 0.68%)</title><rect x="135.7" y="835.0" width="8.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="138.7" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (36 samples, 0.66%)</title><rect x="135.7" y="819.0" width="7.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="138.7" y="830.0"></text>
</g>
<g>
<title>ep_poll (36 samples, 0.66%)</title><rect x="135.7" y="803.0" width="7.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="138.7" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.11%)</title><rect x="135.9" y="787.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="138.9" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.11%)</title><rect x="135.9" y="771.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.9" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.11%)</title><rect x="135.9" y="755.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.09%)</title><rect x="135.9" y="739.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="138.9" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (28 samples, 0.51%)</title><rect x="137.4" y="787.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="140.4" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (28 samples, 0.51%)</title><rect x="137.4" y="771.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="140.4" y="782.0"></text>
</g>
<g>
<title>schedule (28 samples, 0.51%)</title><rect x="137.4" y="755.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="140.4" y="766.0"></text>
</g>
<g>
<title>__schedule (28 samples, 0.51%)</title><rect x="137.4" y="739.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="140.4" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (26 samples, 0.48%)</title><rect x="137.8" y="723.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="140.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (47 samples, 0.86%)</title><rect x="143.7" y="915.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (43 samples, 0.79%)</title><rect x="144.6" y="899.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 0.29%)</title><rect x="144.6" y="883.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.09%)</title><rect x="145.2" y="867.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.09%)</title><rect x="145.2" y="851.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.2" y="862.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (2 samples, 0.04%)</title><rect x="145.2" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.06%)</title><rect x="145.6" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.06%)</title><rect x="145.6" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="145.6" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.09%)</title><rect x="146.3" y="867.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.04%)</title><rect x="146.5" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="146.5" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="146.5" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="146.5" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="147.4" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (27 samples, 0.50%)</title><rect x="148.0" y="883.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (26 samples, 0.48%)</title><rect x="148.2" y="867.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.2" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.11%)</title><rect x="148.2" y="851.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="151.2" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="148.7" y="835.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="151.7" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="149.1" y="819.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="152.1" y="830.0"></text>
</g>
<g>
<title>__recv (20 samples, 0.37%)</title><rect x="149.6" y="851.0" width="4.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="152.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.33%)</title><rect x="150.0" y="835.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="153.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.33%)</title><rect x="150.0" y="819.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="153.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (17 samples, 0.31%)</title><rect x="150.2" y="803.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="153.2" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 0.29%)</title><rect x="150.2" y="787.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="153.2" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.28%)</title><rect x="150.2" y="771.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="153.2" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.20%)</title><rect x="150.6" y="755.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="153.6" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.20%)</title><rect x="150.6" y="739.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="153.6" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.06%)</title><rect x="151.5" y="723.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="154.5" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.06%)</title><rect x="151.5" y="707.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="154.5" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.06%)</title><rect x="151.5" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="154.5" y="702.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="151.5" y="675.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="154.5" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.04%)</title><rect x="152.2" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="155.2" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="152.2" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="155.2" y="718.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="152.2" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="155.2" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="152.6" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="155.6" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.04%)</title><rect x="153.0" y="755.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="156.0" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=44741] (94 samples, 1.73%)</title><rect x="153.9" y="947.0" width="20.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="156.9" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (94 samples, 1.73%)</title><rect x="153.9" y="931.0" width="20.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (41 samples, 0.75%)</title><rect x="153.9" y="915.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (41 samples, 0.75%)</title><rect x="153.9" y="899.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.9" y="910.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="154.1" y="883.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="157.1" y="894.0"></text>
</g>
<g>
<title>epoll_wait (37 samples, 0.68%)</title><rect x="154.8" y="883.0" width="8.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="157.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.66%)</title><rect x="155.0" y="867.0" width="7.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="158.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.66%)</title><rect x="155.0" y="851.0" width="7.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="158.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (35 samples, 0.64%)</title><rect x="155.2" y="835.0" width="7.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="158.2" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (34 samples, 0.63%)</title><rect x="155.2" y="819.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="158.2" y="830.0"></text>
</g>
<g>
<title>ep_poll (34 samples, 0.63%)</title><rect x="155.2" y="803.0" width="7.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="158.2" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.11%)</title><rect x="155.4" y="787.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="158.4" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.11%)</title><rect x="155.4" y="771.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="158.4" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.09%)</title><rect x="155.6" y="755.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="158.6" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.04%)</title><rect x="156.3" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="159.3" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (27 samples, 0.50%)</title><rect x="156.7" y="787.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="159.7" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (27 samples, 0.50%)</title><rect x="156.7" y="771.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="159.7" y="782.0"></text>
</g>
<g>
<title>schedule (27 samples, 0.50%)</title><rect x="156.7" y="755.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="159.7" y="766.0"></text>
</g>
<g>
<title>__schedule (27 samples, 0.50%)</title><rect x="156.7" y="739.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.7" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (26 samples, 0.48%)</title><rect x="156.9" y="723.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (50 samples, 0.92%)</title><rect x="162.8" y="915.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (48 samples, 0.88%)</title><rect x="163.2" y="899.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 0.42%)</title><rect x="163.2" y="883.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9 samples, 0.17%)</title><rect x="164.3" y="867.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9 samples, 0.17%)</title><rect x="164.3" y="851.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.3" y="862.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (6 samples, 0.11%)</title><rect x="164.3" y="835.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (6 samples, 0.11%)</title><rect x="164.3" y="819.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (6 samples, 0.11%)</title><rect x="164.3" y="803.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.11%)</title><rect x="164.3" y="787.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.06%)</title><rect x="164.7" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="165.0" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="165.0" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="165.0" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.06%)</title><rect x="165.6" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.06%)</title><rect x="165.6" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="168.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="165.6" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.11%)</title><rect x="166.3" y="867.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.04%)</title><rect x="166.3" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="166.3" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="166.3" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="166.3" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="166.7" y="851.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="166.7" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="167.8" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="167.8" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (25 samples, 0.46%)</title><rect x="168.2" y="883.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (24 samples, 0.44%)</title><rect x="168.4" y="867.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.4" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.06%)</title><rect x="168.4" y="851.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="171.4" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="168.4" y="835.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="171.4" y="846.0"></text>
</g>
<g>
<title>__recv (21 samples, 0.39%)</title><rect x="169.1" y="851.0" width="4.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="172.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.39%)</title><rect x="169.1" y="835.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="172.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.37%)</title><rect x="169.3" y="819.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (20 samples, 0.37%)</title><rect x="169.3" y="803.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="172.3" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (19 samples, 0.35%)</title><rect x="169.3" y="787.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.3" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.33%)</title><rect x="169.3" y="771.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.3" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (15 samples, 0.28%)</title><rect x="169.3" y="755.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="172.3" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 0.28%)</title><rect x="169.3" y="739.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="172.3" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.06%)</title><rect x="169.3" y="723.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="172.3" y="734.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="169.3" y="707.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.3" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="169.3" y="691.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="172.3" y="702.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.04%)</title><rect x="169.3" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="172.3" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.06%)</title><rect x="170.6" y="723.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="173.6" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.06%)</title><rect x="170.6" y="707.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="173.6" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.04%)</title><rect x="170.8" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="173.8" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.04%)</title><rect x="170.8" y="675.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="173.8" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.07%)</title><rect x="171.5" y="723.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="174.5" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.07%)</title><rect x="171.5" y="707.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.5" y="718.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="171.7" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="174.7" y="702.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.04%)</title><rect x="171.7" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="174.7" y="686.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.04%)</title><rect x="171.7" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="174.7" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.06%)</title><rect x="172.6" y="755.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.6" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.06%)</title><rect x="172.6" y="739.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="175.6" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.06%)</title><rect x="172.6" y="723.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="175.6" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.06%)</title><rect x="173.6" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="176.6" y="926.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="173.9" y="899.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="176.9" y="910.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="173.9" y="883.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="176.9" y="894.0"></text>
</g>
<g>
<title>[async_worker-0 tid=44750] (580 samples, 10.67%)</title><rect x="174.3" y="947.0" width="125.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="177.3" y="958.0">[async_worker-0..</text>
</g>
<g>
<title>java/lang/Thread.run (579 samples, 10.65%)</title><rect x="174.5" y="931.0" width="125.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.5" y="942.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (579 samples, 10.65%)</title><rect x="174.5" y="915.0" width="125.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.5" y="926.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (579 samples, 10.65%)</title><rect x="174.5" y="899.0" width="125.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.5" y="910.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (567 samples, 10.43%)</title><rect x="174.5" y="883.0" width="123.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.5" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (567 samples, 10.43%)</title><rect x="174.5" y="867.0" width="123.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.5" y="878.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (566 samples, 10.41%)</title><rect x="174.7" y="851.0" width="122.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.7" y="862.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (566 samples, 10.41%)</title><rect x="174.7" y="835.0" width="122.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.7" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (128 samples, 2.35%)</title><rect x="174.7" y="819.0" width="27.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.7" y="830.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="175.2" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="175.2" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="175.2" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (123 samples, 2.26%)</title><rect x="175.8" y="803.0" width="26.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.8" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.07%)</title><rect x="175.8" y="787.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.04%)</title><rect x="176.2" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.04%)</title><rect x="176.2" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.04%)</title><rect x="176.2" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.04%)</title><rect x="176.2" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="176.2" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.2" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="176.2" y="691.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="179.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (119 samples, 2.19%)</title><rect x="176.7" y="787.0" width="25.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.7" y="798.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (119 samples, 2.19%)</title><rect x="176.7" y="771.0" width="25.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.7" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (118 samples, 2.17%)</title><rect x="176.9" y="755.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.9" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (117 samples, 2.15%)</title><rect x="177.1" y="739.0" width="25.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.1" y="750.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.07%)</title><rect x="177.1" y="723.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="180.1" y="734.0"></text>
</g>
<g>
<title>send (112 samples, 2.06%)</title><rect x="178.0" y="723.0" width="24.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="181.0" y="734.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (112 samples, 2.06%)</title><rect x="178.0" y="707.0" width="24.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="181.0" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (112 samples, 2.06%)</title><rect x="178.0" y="691.0" width="24.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.0" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (109 samples, 2.00%)</title><rect x="178.0" y="675.0" width="23.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="181.0" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (109 samples, 2.00%)</title><rect x="178.0" y="659.0" width="23.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="181.0" y="670.0">_..</text>
</g>
<g>
<title>sock_sendmsg (105 samples, 1.93%)</title><rect x="178.2" y="643.0" width="22.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.2" y="654.0">s..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.06%)</title><rect x="178.4" y="627.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="181.4" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (101 samples, 1.86%)</title><rect x="179.1" y="627.0" width="21.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="182.1" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (101 samples, 1.86%)</title><rect x="179.1" y="611.0" width="21.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="182.1" y="622.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (97 samples, 1.78%)</title><rect x="179.9" y="595.0" width="21.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="182.9" y="606.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.13%)</title><rect x="180.4" y="579.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="183.4" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.09%)</title><rect x="180.8" y="563.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="183.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.06%)</title><rect x="181.0" y="547.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="184.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="181.0" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="184.0" y="542.0"></text>
</g>
<g>
<title>tcp_push (86 samples, 1.58%)</title><rect x="182.1" y="579.0" width="18.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="185.1" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (86 samples, 1.58%)</title><rect x="182.1" y="563.0" width="18.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="185.1" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (86 samples, 1.58%)</title><rect x="182.1" y="547.0" width="18.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.1" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (80 samples, 1.47%)</title><rect x="182.3" y="531.0" width="17.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="185.3" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (80 samples, 1.47%)</title><rect x="182.3" y="515.0" width="17.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="185.3" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (79 samples, 1.45%)</title><rect x="182.3" y="499.0" width="17.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="185.3" y="510.0"></text>
</g>
<g>
<title>ip_local_out (79 samples, 1.45%)</title><rect x="182.3" y="483.0" width="17.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="185.3" y="494.0"></text>
</g>
<g>
<title>ip_output (79 samples, 1.45%)</title><rect x="182.3" y="467.0" width="17.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="185.3" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (79 samples, 1.45%)</title><rect x="182.3" y="451.0" width="17.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="185.3" y="462.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="182.3" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="185.3" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (77 samples, 1.42%)</title><rect x="182.8" y="435.0" width="16.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="185.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (76 samples, 1.40%)</title><rect x="183.0" y="419.0" width="16.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="186.0" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (71 samples, 1.31%)</title><rect x="183.4" y="403.0" width="15.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="186.4" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (71 samples, 1.31%)</title><rect x="183.4" y="387.0" width="15.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="186.4" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (71 samples, 1.31%)</title><rect x="183.4" y="371.0" width="15.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="186.4" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (71 samples, 1.31%)</title><rect x="183.4" y="355.0" width="15.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="186.4" y="366.0"></text>
</g>
<g>
<title>net_rx_action (69 samples, 1.27%)</title><rect x="183.8" y="339.0" width="15.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="186.8" y="350.0"></text>
</g>
<g>
<title>process_backlog (68 samples, 1.25%)</title><rect x="184.1" y="323.0" width="14.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.1" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (67 samples, 1.23%)</title><rect x="184.3" y="307.0" width="14.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="187.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (67 samples, 1.23%)</title><rect x="184.3" y="291.0" width="14.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="187.3" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="184.5" y="275.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="187.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (64 samples, 1.18%)</title><rect x="184.9" y="275.0" width="13.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="187.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (63 samples, 1.16%)</title><rect x="184.9" y="259.0" width="13.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="187.9" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (63 samples, 1.16%)</title><rect x="184.9" y="243.0" width="13.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="187.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (63 samples, 1.16%)</title><rect x="184.9" y="227.0" width="13.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="187.9" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (63 samples, 1.16%)</title><rect x="184.9" y="211.0" width="13.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="187.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (62 samples, 1.14%)</title><rect x="185.1" y="195.0" width="13.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.1" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="185.6" y="179.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="188.6" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="185.6" y="163.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="188.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (58 samples, 1.07%)</title><rect x="186.0" y="179.0" width="12.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="189.0" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (57 samples, 1.05%)</title><rect x="186.2" y="163.0" width="12.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="189.2" y="174.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.24%)</title><rect x="186.7" y="147.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="189.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.13%)</title><rect x="187.7" y="131.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="190.7" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.07%)</title><rect x="188.0" y="115.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.0" y="126.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="188.2" y="99.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="191.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="188.2" y="83.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="191.2" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (41 samples, 0.75%)</title><rect x="189.5" y="147.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="192.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (41 samples, 0.75%)</title><rect x="189.5" y="131.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="192.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (41 samples, 0.75%)</title><rect x="189.5" y="115.0" width="8.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (41 samples, 0.75%)</title><rect x="189.5" y="99.0" width="8.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="192.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (41 samples, 0.75%)</title><rect x="189.5" y="83.0" width="8.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.5" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.06%)</title><rect x="198.8" y="403.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="201.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.06%)</title><rect x="198.8" y="387.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="201.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="199.0" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="202.0" y="382.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="200.1" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="203.1" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="201.0" y="643.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="204.0" y="654.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="201.0" y="627.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="204.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="201.0" y="611.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="204.0" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="201.0" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="204.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="201.6" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="204.6" y="686.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="201.6" y="659.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="204.6" y="670.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="201.6" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="204.6" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="201.6" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="204.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (438 samples, 8.06%)</title><rect x="202.5" y="819.0" width="95.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.5" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (438 samples, 8.06%)</title><rect x="202.5" y="803.0" width="95.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.5" y="814.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (438 samples, 8.06%)</title><rect x="202.5" y="787.0" width="95.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.5" y="798.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (264 samples, 4.86%)</title><rect x="203.6" y="771.0" width="57.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="206.6" y="782.0">Java_o..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="204.2" y="755.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="207.2" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (258 samples, 4.75%)</title><rect x="204.9" y="755.0" width="56.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="207.9" y="766.0">rocks..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="205.3" y="739.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="208.3" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="205.8" y="739.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="208.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (252 samples, 4.63%)</title><rect x="206.2" y="739.0" width="54.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="209.2" y="750.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (252 samples, 4.63%)</title><rect x="206.2" y="723.0" width="54.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="209.2" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (252 samples, 4.63%)</title><rect x="206.2" y="707.0" width="54.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="209.2" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (244 samples, 4.49%)</title><rect x="206.6" y="691.0" width="53.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="209.6" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (239 samples, 4.40%)</title><rect x="206.8" y="675.0" width="51.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="209.8" y="686.0">rocks..</text>
</g>
<g>
<title>__sched_yield (23 samples, 0.42%)</title><rect x="207.7" y="659.0" width="5.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="210.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.37%)</title><rect x="208.4" y="643.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="211.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.37%)</title><rect x="208.4" y="627.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="211.4" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (16 samples, 0.29%)</title><rect x="209.2" y="611.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="212.2" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (16 samples, 0.29%)</title><rect x="209.2" y="595.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="212.2" y="606.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.29%)</title><rect x="209.2" y="579.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="212.2" y="590.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.29%)</title><rect x="209.2" y="563.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="212.2" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="211.8" y="547.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="214.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (29 samples, 0.53%)</title><rect x="213.4" y="659.0" width="6.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="216.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (29 samples, 0.53%)</title><rect x="213.4" y="643.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="216.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (27 samples, 0.50%)</title><rect x="213.6" y="627.0" width="5.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="216.6" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="213.8" y="611.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="216.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (22 samples, 0.40%)</title><rect x="214.7" y="611.0" width="4.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="217.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (22 samples, 0.40%)</title><rect x="214.7" y="595.0" width="4.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="217.7" y="606.0"></text>
</g>
<g>
<title>__write (22 samples, 0.40%)</title><rect x="214.7" y="579.0" width="4.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="217.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.40%)</title><rect x="214.7" y="563.0" width="4.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="217.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.40%)</title><rect x="214.7" y="547.0" width="4.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="217.7" y="558.0"></text>
</g>
<g>
<title>__x64_sys_write (21 samples, 0.39%)</title><rect x="214.9" y="531.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="217.9" y="542.0"></text>
</g>
<g>
<title>ksys_write (21 samples, 0.39%)</title><rect x="214.9" y="515.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="217.9" y="526.0"></text>
</g>
<g>
<title>vfs_write (21 samples, 0.39%)</title><rect x="214.9" y="499.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="217.9" y="510.0"></text>
</g>
<g>
<title>__vfs_write (19 samples, 0.35%)</title><rect x="215.1" y="483.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="218.1" y="494.0"></text>
</g>
<g>
<title>new_sync_write (19 samples, 0.35%)</title><rect x="215.1" y="467.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="218.1" y="478.0"></text>
</g>
<g>
<title>ext4_file_write_iter (19 samples, 0.35%)</title><rect x="215.1" y="451.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="218.1" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (19 samples, 0.35%)</title><rect x="215.1" y="435.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="218.1" y="446.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.04%)</title><rect x="215.1" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="218.1" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (17 samples, 0.31%)</title><rect x="215.5" y="419.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="218.5" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (9 samples, 0.17%)</title><rect x="215.5" y="403.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="218.5" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.06%)</title><rect x="215.5" y="387.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="218.5" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.06%)</title><rect x="215.5" y="371.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="218.5" y="382.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.04%)</title><rect x="215.7" y="355.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="218.7" y="366.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.04%)</title><rect x="215.7" y="339.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="218.7" y="350.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 0.07%)</title><rect x="216.6" y="387.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="219.6" y="398.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.06%)</title><rect x="216.6" y="371.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.6" y="382.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="216.8" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="219.8" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_end (8 samples, 0.15%)</title><rect x="217.5" y="403.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="220.5" y="414.0"></text>
</g>
<g>
<title>generic_write_end (6 samples, 0.11%)</title><rect x="217.9" y="387.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="220.9" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (5 samples, 0.09%)</title><rect x="217.9" y="371.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="220.9" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.07%)</title><rect x="218.1" y="355.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="221.1" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.07%)</title><rect x="218.1" y="339.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="221.1" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="218.1" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="221.1" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.04%)</title><rect x="218.1" y="307.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="221.1" y="318.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.04%)</title><rect x="218.6" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="221.6" y="334.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (60 samples, 1.10%)</title><rect x="219.9" y="659.0" width="13.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="222.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.06%)</title><rect x="220.3" y="643.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="223.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.04%)</title><rect x="220.5" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="223.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (55 samples, 1.01%)</title><rect x="221.0" y="643.0" width="11.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="224.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (54 samples, 0.99%)</title><rect x="221.2" y="627.0" width="11.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="224.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (48 samples, 0.88%)</title><rect x="221.8" y="611.0" width="10.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="224.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (2 samples, 0.04%)</title><rect x="222.3" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="225.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (42 samples, 0.77%)</title><rect x="222.9" y="595.0" width="9.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="225.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (40 samples, 0.74%)</title><rect x="223.3" y="579.0" width="8.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="226.3" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="223.8" y="563.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="226.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.04%)</title><rect x="224.0" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="227.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (34 samples, 0.63%)</title><rect x="224.6" y="563.0" width="7.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="227.6" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (33 samples, 0.61%)</title><rect x="224.6" y="547.0" width="7.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="227.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (26 samples, 0.48%)</title><rect x="225.3" y="531.0" width="5.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="228.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (11 samples, 0.20%)</title><rect x="227.7" y="515.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="230.7" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="227.7" y="499.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="230.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.17%)</title><rect x="228.1" y="499.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="231.1" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.11%)</title><rect x="228.1" y="483.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="231.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="229.6" y="483.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="232.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.06%)</title><rect x="230.1" y="515.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="233.1" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="230.9" y="531.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="233.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.04%)</title><rect x="232.5" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="235.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (59 samples, 1.09%)</title><rect x="233.1" y="659.0" width="12.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="236.1" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="244.4" y="643.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="247.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="244.6" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.6" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="245.5" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="248.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="245.5" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="248.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="245.5" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="248.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.04%)</title><rect x="245.9" y="659.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="248.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (52 samples, 0.96%)</title><rect x="246.3" y="659.0" width="11.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="249.3" y="670.0"></text>
</g>
<g>
<title>__sched_yield (17 samples, 0.31%)</title><rect x="246.6" y="643.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="249.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.28%)</title><rect x="247.0" y="627.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="250.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.28%)</title><rect x="247.0" y="611.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="250.0" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (14 samples, 0.26%)</title><rect x="247.2" y="595.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.2" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (14 samples, 0.26%)</title><rect x="247.2" y="579.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="250.2" y="590.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.26%)</title><rect x="247.2" y="563.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="250.2" y="574.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.26%)</title><rect x="247.2" y="547.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="250.2" y="558.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="250.3" y="643.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="253.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (32 samples, 0.59%)</title><rect x="250.7" y="643.0" width="6.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="253.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="257.0" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="260.0" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="257.0" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="260.0" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="257.0" y="595.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="260.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.04%)</title><rect x="257.6" y="659.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="260.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="259.2" y="675.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="262.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="259.6" y="691.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="262.6" y="702.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="260.0" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="263.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.75%)</title><rect x="260.9" y="771.0" width="8.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="263.9" y="782.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.04%)</title><rect x="260.9" y="755.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="263.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (36 samples, 0.66%)</title><rect x="261.3" y="755.0" width="7.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="264.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.63%)</title><rect x="261.8" y="739.0" width="7.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="264.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.63%)</title><rect x="261.8" y="723.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="264.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 0.63%)</title><rect x="261.8" y="707.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="264.8" y="718.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.63%)</title><rect x="261.8" y="691.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="264.8" y="702.0"></text>
</g>
<g>
<title>futex_wait (34 samples, 0.63%)</title><rect x="261.8" y="675.0" width="7.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="264.8" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (32 samples, 0.59%)</title><rect x="261.8" y="659.0" width="6.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="264.8" y="670.0"></text>
</g>
<g>
<title>schedule (31 samples, 0.57%)</title><rect x="262.0" y="643.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="265.0" y="654.0"></text>
</g>
<g>
<title>__schedule (31 samples, 0.57%)</title><rect x="262.0" y="627.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="265.0" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (30 samples, 0.55%)</title><rect x="262.2" y="611.0" width="6.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.2" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (111 samples, 2.04%)</title><rect x="270.0" y="771.0" width="24.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="273.0" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (109 samples, 2.00%)</title><rect x="270.4" y="755.0" width="23.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="273.4" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (109 samples, 2.00%)</title><rect x="270.4" y="739.0" width="23.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.4" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (108 samples, 1.99%)</title><rect x="270.7" y="723.0" width="23.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="273.7" y="734.0">_..</text>
</g>
<g>
<title>do_futex (108 samples, 1.99%)</title><rect x="270.7" y="707.0" width="23.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="273.7" y="718.0">d..</text>
</g>
<g>
<title>futex_wake (108 samples, 1.99%)</title><rect x="270.7" y="691.0" width="23.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="273.7" y="702.0">f..</text>
</g>
<g>
<title>wake_up_q (106 samples, 1.95%)</title><rect x="271.1" y="675.0" width="23.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="274.1" y="686.0">w..</text>
</g>
<g>
<title>try_to_wake_up (106 samples, 1.95%)</title><rect x="271.1" y="659.0" width="23.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="274.1" y="670.0">t..</text>
</g>
<g>
<title>__lock_text_start (106 samples, 1.95%)</title><rect x="271.1" y="643.0" width="23.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="274.1" y="654.0">_..</text>
</g>
<g>
<title>clock_gettime (16 samples, 0.29%)</title><rect x="294.1" y="771.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="297.1" y="782.0"></text>
</g>
<g>
<title>clock_gettime (13 samples, 0.24%)</title><rect x="294.7" y="755.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="297.7" y="766.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.22%)</title><rect x="295.0" y="739.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="298.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (6 samples, 0.11%)</title><rect x="297.6" y="883.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.11%)</title><rect x="297.6" y="867.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.11%)</title><rect x="297.6" y="851.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.09%)</title><rect x="297.8" y="835.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.11%)</title><rect x="298.9" y="883.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.11%)</title><rect x="298.9" y="867.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.07%)</title><rect x="299.3" y="851.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.07%)</title><rect x="299.3" y="835.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.07%)</title><rect x="299.3" y="819.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.07%)</title><rect x="299.3" y="803.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.07%)</title><rect x="299.3" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.3" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.07%)</title><rect x="299.3" y="771.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="302.3" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="299.3" y="755.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="302.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="299.3" y="739.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="302.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="299.3" y="723.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="302.3" y="734.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="299.3" y="707.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="302.3" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="299.3" y="691.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="302.3" y="702.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="299.3" y="675.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="302.3" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="299.3" y="659.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="302.3" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.07%)</title><rect x="299.3" y="643.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="302.3" y="654.0"></text>
</g>
<g>
<title>[async_worker-1 tid=44755] (584 samples, 10.74%)</title><rect x="300.2" y="947.0" width="126.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="303.2" y="958.0">[async_worker-1 ..</text>
</g>
<g>
<title>java/lang/Thread.run (584 samples, 10.74%)</title><rect x="300.2" y="931.0" width="126.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.2" y="942.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (584 samples, 10.74%)</title><rect x="300.2" y="915.0" width="126.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.2" y="926.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (584 samples, 10.74%)</title><rect x="300.2" y="899.0" width="126.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.2" y="910.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (572 samples, 10.52%)</title><rect x="300.2" y="883.0" width="124.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.2" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (572 samples, 10.52%)</title><rect x="300.2" y="867.0" width="124.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.2" y="878.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (570 samples, 10.48%)</title><rect x="300.6" y="851.0" width="123.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.6" y="862.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (570 samples, 10.48%)</title><rect x="300.6" y="835.0" width="123.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.6" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (137 samples, 2.52%)</title><rect x="301.0" y="819.0" width="29.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.0" y="830.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="301.9" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="301.9" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="301.9" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.9" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="301.9" y="755.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="304.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (130 samples, 2.39%)</title><rect x="302.3" y="803.0" width="28.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.3" y="814.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (128 samples, 2.35%)</title><rect x="302.8" y="787.0" width="27.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.8" y="798.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (128 samples, 2.35%)</title><rect x="302.8" y="771.0" width="27.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.8" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (128 samples, 2.35%)</title><rect x="302.8" y="755.0" width="27.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.8" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (128 samples, 2.35%)</title><rect x="302.8" y="739.0" width="27.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.8" y="750.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.09%)</title><rect x="303.2" y="723.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="306.2" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="303.2" y="707.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="306.2" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="303.6" y="707.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="306.6" y="718.0"></text>
</g>
<g>
<title>send (121 samples, 2.23%)</title><rect x="304.3" y="723.0" width="26.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="307.3" y="734.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (120 samples, 2.21%)</title><rect x="304.5" y="707.0" width="26.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="307.5" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (120 samples, 2.21%)</title><rect x="304.5" y="691.0" width="26.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="307.5" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (117 samples, 2.15%)</title><rect x="304.9" y="675.0" width="25.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="307.9" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (115 samples, 2.12%)</title><rect x="304.9" y="659.0" width="25.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="307.9" y="670.0">_..</text>
</g>
<g>
<title>sock_sendmsg (109 samples, 2.00%)</title><rect x="305.4" y="643.0" width="23.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.4" y="654.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (108 samples, 1.99%)</title><rect x="305.4" y="627.0" width="23.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="308.4" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (108 samples, 1.99%)</title><rect x="305.4" y="611.0" width="23.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="308.4" y="622.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (106 samples, 1.95%)</title><rect x="305.8" y="595.0" width="23.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="308.8" y="606.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.17%)</title><rect x="306.2" y="579.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="309.2" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.13%)</title><rect x="306.7" y="563.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="309.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.07%)</title><rect x="306.7" y="547.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="309.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="306.7" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="309.7" y="542.0"></text>
</g>
<g>
<title>memset (2 samples, 0.04%)</title><rect x="307.1" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="310.1" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="307.8" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="310.8" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.04%)</title><rect x="307.8" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="310.8" y="542.0"></text>
</g>
<g>
<title>tcp_push (95 samples, 1.75%)</title><rect x="308.2" y="579.0" width="20.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.2" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (95 samples, 1.75%)</title><rect x="308.2" y="563.0" width="20.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="311.2" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (95 samples, 1.75%)</title><rect x="308.2" y="547.0" width="20.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="311.2" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (92 samples, 1.69%)</title><rect x="308.2" y="531.0" width="20.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="311.2" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (89 samples, 1.64%)</title><rect x="308.9" y="515.0" width="19.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="311.9" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (89 samples, 1.64%)</title><rect x="308.9" y="499.0" width="19.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="311.9" y="510.0"></text>
</g>
<g>
<title>ip_local_out (88 samples, 1.62%)</title><rect x="308.9" y="483.0" width="19.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="311.9" y="494.0"></text>
</g>
<g>
<title>ip_output (88 samples, 1.62%)</title><rect x="308.9" y="467.0" width="19.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="311.9" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (88 samples, 1.62%)</title><rect x="308.9" y="451.0" width="19.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="311.9" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (87 samples, 1.60%)</title><rect x="308.9" y="435.0" width="18.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="311.9" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (85 samples, 1.56%)</title><rect x="309.3" y="419.0" width="18.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="312.3" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (82 samples, 1.51%)</title><rect x="309.7" y="403.0" width="17.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="312.7" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (82 samples, 1.51%)</title><rect x="309.7" y="387.0" width="17.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="312.7" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (82 samples, 1.51%)</title><rect x="309.7" y="371.0" width="17.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="312.7" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (82 samples, 1.51%)</title><rect x="309.7" y="355.0" width="17.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="312.7" y="366.0"></text>
</g>
<g>
<title>net_rx_action (80 samples, 1.47%)</title><rect x="309.9" y="339.0" width="17.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="312.9" y="350.0"></text>
</g>
<g>
<title>process_backlog (79 samples, 1.45%)</title><rect x="310.2" y="323.0" width="17.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="313.2" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (77 samples, 1.42%)</title><rect x="310.6" y="307.0" width="16.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="313.6" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (76 samples, 1.40%)</title><rect x="310.8" y="291.0" width="16.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv (76 samples, 1.40%)</title><rect x="310.8" y="275.0" width="16.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (75 samples, 1.38%)</title><rect x="310.8" y="259.0" width="16.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.8" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (75 samples, 1.38%)</title><rect x="310.8" y="243.0" width="16.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="313.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (75 samples, 1.38%)</title><rect x="310.8" y="227.0" width="16.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.8" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (74 samples, 1.36%)</title><rect x="310.8" y="211.0" width="16.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="313.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (74 samples, 1.36%)</title><rect x="310.8" y="195.0" width="16.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.8" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.07%)</title><rect x="311.0" y="179.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="314.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="311.9" y="179.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="314.9" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="311.9" y="163.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="314.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (67 samples, 1.23%)</title><rect x="312.3" y="179.0" width="14.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="315.3" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (65 samples, 1.20%)</title><rect x="312.8" y="163.0" width="14.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="315.8" y="174.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.33%)</title><rect x="313.0" y="147.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="316.0" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (13 samples, 0.24%)</title><rect x="313.4" y="131.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="316.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.18%)</title><rect x="313.8" y="115.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="316.8" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="313.8" y="99.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="316.8" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="313.8" y="83.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="316.8" y="94.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.15%)</title><rect x="314.3" y="99.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="317.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.15%)</title><rect x="314.3" y="83.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="317.3" y="94.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.09%)</title><rect x="314.9" y="67.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.9" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.07%)</title><rect x="315.1" y="51.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="318.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="315.6" y="35.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="318.6" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (45 samples, 0.83%)</title><rect x="317.1" y="147.0" width="9.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="320.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (45 samples, 0.83%)</title><rect x="317.1" y="131.0" width="9.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="320.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (45 samples, 0.83%)</title><rect x="317.1" y="115.0" width="9.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (45 samples, 0.83%)</title><rect x="317.1" y="99.0" width="9.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="320.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (45 samples, 0.83%)</title><rect x="317.1" y="83.0" width="9.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.1" y="94.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="329.0" y="643.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="332.0" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="329.0" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="329.0" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.0" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="329.0" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="332.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="329.5" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="332.5" y="638.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.04%)</title><rect x="329.9" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="332.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (431 samples, 7.93%)</title><rect x="330.8" y="819.0" width="93.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.8" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (430 samples, 7.91%)</title><rect x="330.8" y="803.0" width="93.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.8" y="814.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (429 samples, 7.89%)</title><rect x="331.0" y="787.0" width="93.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.0" y="798.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (251 samples, 4.62%)</title><rect x="331.2" y="771.0" width="54.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="334.2" y="782.0">Java_..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (251 samples, 4.62%)</title><rect x="331.2" y="755.0" width="54.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="334.2" y="766.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (248 samples, 4.56%)</title><rect x="331.6" y="739.0" width="53.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="334.6" y="750.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (246 samples, 4.52%)</title><rect x="332.1" y="723.0" width="53.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="335.1" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (244 samples, 4.49%)</title><rect x="332.1" y="707.0" width="52.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="335.1" y="718.0">rocks..</text>
</g>
<g>
<title>cfree (2 samples, 0.04%)</title><rect x="332.5" y="691.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="335.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (230 samples, 4.23%)</title><rect x="333.2" y="691.0" width="49.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="336.2" y="702.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.07%)</title><rect x="333.2" y="675.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="336.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (221 samples, 4.06%)</title><rect x="334.7" y="675.0" width="47.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="337.7" y="686.0">rock..</text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="335.5" y="659.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="338.5" y="670.0"></text>
</g>
<g>
<title>__sched_yield (23 samples, 0.42%)</title><rect x="336.0" y="659.0" width="5.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="339.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.39%)</title><rect x="336.4" y="643.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.37%)</title><rect x="336.6" y="627.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="339.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (18 samples, 0.33%)</title><rect x="337.1" y="611.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="340.1" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (18 samples, 0.33%)</title><rect x="337.1" y="595.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="340.1" y="606.0"></text>
</g>
<g>
<title>schedule (18 samples, 0.33%)</title><rect x="337.1" y="579.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="340.1" y="590.0"></text>
</g>
<g>
<title>__schedule (18 samples, 0.33%)</title><rect x="337.1" y="563.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="340.1" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="340.3" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.3" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="341.0" y="659.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="344.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (21 samples, 0.39%)</title><rect x="341.8" y="659.0" width="4.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="344.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (20 samples, 0.37%)</title><rect x="342.1" y="643.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="345.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (18 samples, 0.33%)</title><rect x="342.3" y="627.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="345.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (14 samples, 0.26%)</title><rect x="342.3" y="611.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="345.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (14 samples, 0.26%)</title><rect x="342.3" y="595.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="345.3" y="606.0"></text>
</g>
<g>
<title>__write (14 samples, 0.26%)</title><rect x="342.3" y="579.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="345.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.24%)</title><rect x="342.5" y="563.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="345.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.24%)</title><rect x="342.5" y="547.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="345.5" y="558.0"></text>
</g>
<g>
<title>__x64_sys_write (13 samples, 0.24%)</title><rect x="342.5" y="531.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="345.5" y="542.0"></text>
</g>
<g>
<title>ksys_write (13 samples, 0.24%)</title><rect x="342.5" y="515.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="345.5" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="342.5" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="345.5" y="510.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="342.5" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="345.5" y="494.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="342.5" y="467.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="345.5" y="478.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.20%)</title><rect x="342.9" y="499.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="345.9" y="510.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.20%)</title><rect x="342.9" y="483.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="345.9" y="494.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.20%)</title><rect x="342.9" y="467.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="345.9" y="478.0"></text>
</g>
<g>
<title>ext4_file_write_iter (11 samples, 0.20%)</title><rect x="342.9" y="451.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="345.9" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (11 samples, 0.20%)</title><rect x="342.9" y="435.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="345.9" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (11 samples, 0.20%)</title><rect x="342.9" y="419.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="345.9" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.04%)</title><rect x="343.1" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.1" y="414.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.04%)</title><rect x="343.1" y="387.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.1" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_end (8 samples, 0.15%)</title><rect x="343.6" y="403.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.6" y="414.0"></text>
</g>
<g>
<title>generic_write_end (7 samples, 0.13%)</title><rect x="343.8" y="387.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="346.8" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (6 samples, 0.11%)</title><rect x="343.8" y="371.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="346.8" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 0.11%)</title><rect x="343.8" y="355.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="346.8" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (5 samples, 0.09%)</title><rect x="343.8" y="339.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="346.8" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.06%)</title><rect x="344.0" y="323.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="347.0" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.04%)</title><rect x="344.2" y="307.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="347.2" y="318.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (4 samples, 0.07%)</title><rect x="345.3" y="611.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="348.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="345.7" y="595.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="348.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.04%)</title><rect x="346.4" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="349.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (4 samples, 0.07%)</title><rect x="347.3" y="659.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="350.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.07%)</title><rect x="347.3" y="643.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="350.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.07%)</title><rect x="347.3" y="627.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="350.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="347.3" y="611.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="350.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.07%)</title><rect x="347.3" y="595.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="350.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.07%)</title><rect x="347.3" y="579.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="350.3" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.06%)</title><rect x="347.5" y="563.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="350.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="347.5" y="547.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="350.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="347.7" y="531.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="350.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (43 samples, 0.79%)</title><rect x="348.1" y="659.0" width="9.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="351.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.04%)</title><rect x="349.2" y="643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="352.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (35 samples, 0.64%)</title><rect x="349.7" y="643.0" width="7.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="352.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (34 samples, 0.63%)</title><rect x="349.9" y="627.0" width="7.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="352.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (33 samples, 0.61%)</title><rect x="350.1" y="611.0" width="7.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="353.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (29 samples, 0.53%)</title><rect x="350.3" y="595.0" width="6.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="353.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (26 samples, 0.48%)</title><rect x="351.0" y="579.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="354.0" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (2 samples, 0.04%)</title><rect x="351.4" y="563.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="354.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (21 samples, 0.39%)</title><rect x="351.8" y="563.0" width="4.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="354.8" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (20 samples, 0.37%)</title><rect x="352.0" y="547.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="355.0" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (19 samples, 0.35%)</title><rect x="352.3" y="531.0" width="4.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="355.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (14 samples, 0.26%)</title><rect x="352.3" y="515.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="355.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (2 samples, 0.04%)</title><rect x="352.3" y="499.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="355.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="352.7" y="499.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="355.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.17%)</title><rect x="353.1" y="499.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="356.1" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.07%)</title><rect x="353.8" y="483.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="356.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="355.3" y="515.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="358.3" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="355.7" y="515.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="358.7" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="355.7" y="499.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="358.7" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="355.7" y="483.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="358.7" y="494.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_unique_pos(rocksdb::MemTable* const&amp;) (2 samples, 0.04%)</title><rect x="356.6" y="595.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="359.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (48 samples, 0.88%)</title><rect x="357.5" y="659.0" width="10.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="360.5" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="367.0" y="643.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="370.0" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="367.0" y="627.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="370.0" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="367.0" y="611.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="370.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (53 samples, 0.97%)</title><rect x="367.9" y="659.0" width="11.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="370.9" y="670.0"></text>
</g>
<g>
<title>__sched_yield (23 samples, 0.42%)</title><rect x="368.1" y="643.0" width="5.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="371.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.39%)</title><rect x="368.5" y="627.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.39%)</title><rect x="368.5" y="611.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="371.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (20 samples, 0.37%)</title><rect x="368.8" y="595.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.8" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (20 samples, 0.37%)</title><rect x="368.8" y="579.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="371.8" y="590.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.37%)</title><rect x="368.8" y="563.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.8" y="574.0"></text>
</g>
<g>
<title>__schedule (20 samples, 0.37%)</title><rect x="368.8" y="547.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="371.8" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="372.7" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="375.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (26 samples, 0.48%)</title><rect x="373.1" y="643.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="376.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (8 samples, 0.15%)</title><rect x="379.6" y="659.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="382.6" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="379.6" y="643.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="382.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="379.6" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="382.6" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="379.6" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="382.6" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="379.6" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="382.6" y="606.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="379.6" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="382.6" y="590.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="379.6" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="382.6" y="574.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="379.6" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.6" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="379.6" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="382.6" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="379.6" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="382.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (3 samples, 0.06%)</title><rect x="380.0" y="643.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="383.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.04%)</title><rect x="380.7" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="383.7" y="654.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (3 samples, 0.06%)</title><rect x="381.8" y="659.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="384.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="382.6" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="385.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.04%)</title><rect x="383.1" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="386.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="383.7" y="691.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="386.7" y="702.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.04%)</title><rect x="384.6" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="387.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.01%)</title><rect x="385.7" y="771.0" width="11.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="388.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (53 samples, 0.97%)</title><rect x="385.9" y="755.0" width="11.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="388.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.92%)</title><rect x="386.5" y="739.0" width="10.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="389.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 0.92%)</title><rect x="386.5" y="723.0" width="10.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="389.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (49 samples, 0.90%)</title><rect x="386.8" y="707.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="389.8" y="718.0"></text>
</g>
<g>
<title>do_futex (49 samples, 0.90%)</title><rect x="386.8" y="691.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="389.8" y="702.0"></text>
</g>
<g>
<title>futex_wait (48 samples, 0.88%)</title><rect x="386.8" y="675.0" width="10.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="389.8" y="686.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.04%)</title><rect x="387.0" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="390.0" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (41 samples, 0.75%)</title><rect x="387.4" y="659.0" width="8.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="390.4" y="670.0"></text>
</g>
<g>
<title>schedule (41 samples, 0.75%)</title><rect x="387.4" y="643.0" width="8.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="390.4" y="654.0"></text>
</g>
<g>
<title>__schedule (39 samples, 0.72%)</title><rect x="387.9" y="627.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="390.9" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (37 samples, 0.68%)</title><rect x="388.3" y="611.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="391.3" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.07%)</title><rect x="396.3" y="659.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="399.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (112 samples, 2.06%)</title><rect x="397.6" y="771.0" width="24.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="400.6" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (111 samples, 2.04%)</title><rect x="397.8" y="755.0" width="24.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.8" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (111 samples, 2.04%)</title><rect x="397.8" y="739.0" width="24.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="400.8" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (110 samples, 2.02%)</title><rect x="398.1" y="723.0" width="23.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="401.1" y="734.0">_..</text>
</g>
<g>
<title>do_futex (110 samples, 2.02%)</title><rect x="398.1" y="707.0" width="23.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="401.1" y="718.0">d..</text>
</g>
<g>
<title>futex_wake (107 samples, 1.97%)</title><rect x="398.1" y="691.0" width="23.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.1" y="702.0">f..</text>
</g>
<g>
<title>wake_up_q (101 samples, 1.86%)</title><rect x="399.4" y="675.0" width="21.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="402.4" y="686.0">w..</text>
</g>
<g>
<title>try_to_wake_up (101 samples, 1.86%)</title><rect x="399.4" y="659.0" width="21.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="402.4" y="670.0">t..</text>
</g>
<g>
<title>__lock_text_start (101 samples, 1.86%)</title><rect x="399.4" y="643.0" width="21.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="402.4" y="654.0">_..</text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="421.5" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="424.5" y="702.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.18%)</title><rect x="421.9" y="771.0" width="2.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="424.9" y="782.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.11%)</title><rect x="422.8" y="755.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="425.8" y="766.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.11%)</title><rect x="422.8" y="739.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="425.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.04%)</title><rect x="424.3" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="424.3" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="424.3" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="424.3" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.18%)</title><rect x="424.7" y="883.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.15%)</title><rect x="425.2" y="867.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.15%)</title><rect x="425.2" y="851.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.15%)</title><rect x="425.2" y="835.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.15%)</title><rect x="425.2" y="819.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.09%)</title><rect x="425.8" y="803.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.09%)</title><rect x="425.8" y="787.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.8" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.09%)</title><rect x="425.8" y="771.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="428.8" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="425.8" y="755.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="428.8" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.09%)</title><rect x="425.8" y="739.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="428.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.09%)</title><rect x="425.8" y="723.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="428.8" y="734.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.09%)</title><rect x="425.8" y="707.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="428.8" y="718.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.09%)</title><rect x="425.8" y="691.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="428.8" y="702.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.09%)</title><rect x="425.8" y="675.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="428.8" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.09%)</title><rect x="425.8" y="659.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="428.8" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.09%)</title><rect x="425.8" y="643.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="428.8" y="654.0"></text>
</g>
<g>
<title>[async_worker-2 tid=44753] (581 samples, 10.69%)</title><rect x="426.9" y="947.0" width="126.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="429.9" y="958.0">[async_worker-2 ..</text>
</g>
<g>
<title>java/lang/Thread.run (581 samples, 10.69%)</title><rect x="426.9" y="931.0" width="126.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.9" y="942.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (581 samples, 10.69%)</title><rect x="426.9" y="915.0" width="126.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.9" y="926.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (581 samples, 10.69%)</title><rect x="426.9" y="899.0" width="126.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.9" y="910.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (576 samples, 10.59%)</title><rect x="426.9" y="883.0" width="125.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.9" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (576 samples, 10.59%)</title><rect x="426.9" y="867.0" width="125.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.9" y="878.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (576 samples, 10.59%)</title><rect x="426.9" y="851.0" width="125.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.9" y="862.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (576 samples, 10.59%)</title><rect x="426.9" y="835.0" width="125.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.9" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (135 samples, 2.48%)</title><rect x="427.8" y="819.0" width="29.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.8" y="830.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="428.7" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="428.7" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="428.7" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.7" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="428.9" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="431.9" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="428.9" y="739.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="431.9" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="428.9" y="723.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="431.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (128 samples, 2.35%)</title><rect x="429.3" y="803.0" width="27.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.3" y="814.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (128 samples, 2.35%)</title><rect x="429.3" y="787.0" width="27.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.3" y="798.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (128 samples, 2.35%)</title><rect x="429.3" y="771.0" width="27.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.3" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (126 samples, 2.32%)</title><rect x="429.7" y="755.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.7" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (124 samples, 2.28%)</title><rect x="430.2" y="739.0" width="26.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.2" y="750.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.06%)</title><rect x="430.2" y="723.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="433.2" y="734.0"></text>
</g>
<g>
<title>send (121 samples, 2.23%)</title><rect x="430.8" y="723.0" width="26.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="433.8" y="734.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (119 samples, 2.19%)</title><rect x="431.3" y="707.0" width="25.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="434.3" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (118 samples, 2.17%)</title><rect x="431.5" y="691.0" width="25.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="434.5" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (118 samples, 2.17%)</title><rect x="431.5" y="675.0" width="25.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="434.5" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (117 samples, 2.15%)</title><rect x="431.5" y="659.0" width="25.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="434.5" y="670.0">_..</text>
</g>
<g>
<title>sock_sendmsg (115 samples, 2.12%)</title><rect x="431.5" y="643.0" width="24.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="434.5" y="654.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (115 samples, 2.12%)</title><rect x="431.5" y="627.0" width="24.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="434.5" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (115 samples, 2.12%)</title><rect x="431.5" y="611.0" width="24.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="434.5" y="622.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (114 samples, 2.10%)</title><rect x="431.5" y="595.0" width="24.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="434.5" y="606.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.17%)</title><rect x="431.9" y="579.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.9" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.17%)</title><rect x="431.9" y="563.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.07%)</title><rect x="431.9" y="547.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="434.9" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="431.9" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.9" y="542.0"></text>
</g>
<g>
<title>memset (2 samples, 0.04%)</title><rect x="432.3" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="435.3" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="432.8" y="547.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="435.8" y="558.0"></text>
</g>
<g>
<title>tcp_push (102 samples, 1.88%)</title><rect x="434.1" y="579.0" width="22.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.1" y="590.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (102 samples, 1.88%)</title><rect x="434.1" y="563.0" width="22.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="437.1" y="574.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (100 samples, 1.84%)</title><rect x="434.5" y="547.0" width="21.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="437.5" y="558.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (96 samples, 1.77%)</title><rect x="434.5" y="531.0" width="20.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="437.5" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (93 samples, 1.71%)</title><rect x="434.9" y="515.0" width="20.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="437.9" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (93 samples, 1.71%)</title><rect x="434.9" y="499.0" width="20.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.9" y="510.0"></text>
</g>
<g>
<title>ip_local_out (91 samples, 1.67%)</title><rect x="435.4" y="483.0" width="19.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="438.4" y="494.0"></text>
</g>
<g>
<title>ip_output (91 samples, 1.67%)</title><rect x="435.4" y="467.0" width="19.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="438.4" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (90 samples, 1.66%)</title><rect x="435.6" y="451.0" width="19.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="438.6" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (89 samples, 1.64%)</title><rect x="435.8" y="435.0" width="19.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="438.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (88 samples, 1.62%)</title><rect x="436.0" y="419.0" width="19.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="439.0" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (83 samples, 1.53%)</title><rect x="436.7" y="403.0" width="18.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="439.7" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (83 samples, 1.53%)</title><rect x="436.7" y="387.0" width="18.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="439.7" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (82 samples, 1.51%)</title><rect x="436.9" y="371.0" width="17.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.9" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (82 samples, 1.51%)</title><rect x="436.9" y="355.0" width="17.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.9" y="366.0"></text>
</g>
<g>
<title>net_rx_action (82 samples, 1.51%)</title><rect x="436.9" y="339.0" width="17.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="439.9" y="350.0"></text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.04%)</title><rect x="437.1" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="440.1" y="334.0"></text>
</g>
<g>
<title>process_backlog (79 samples, 1.45%)</title><rect x="437.6" y="323.0" width="17.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="440.6" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (77 samples, 1.42%)</title><rect x="438.0" y="307.0" width="16.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="441.0" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (77 samples, 1.42%)</title><rect x="438.0" y="291.0" width="16.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="441.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="438.0" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="441.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (74 samples, 1.36%)</title><rect x="438.4" y="275.0" width="16.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="441.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (74 samples, 1.36%)</title><rect x="438.4" y="259.0" width="16.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.4" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (73 samples, 1.34%)</title><rect x="438.6" y="243.0" width="15.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (73 samples, 1.34%)</title><rect x="438.6" y="227.0" width="15.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="441.6" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (73 samples, 1.34%)</title><rect x="438.6" y="211.0" width="15.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="441.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (72 samples, 1.32%)</title><rect x="438.9" y="195.0" width="15.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="441.9" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="440.2" y="179.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="443.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (64 samples, 1.18%)</title><rect x="440.6" y="179.0" width="13.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.6" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="440.8" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (61 samples, 1.12%)</title><rect x="441.2" y="163.0" width="13.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="444.2" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.04%)</title><rect x="441.5" y="147.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.5" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="441.5" y="131.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="441.5" y="115.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="441.5" y="99.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="444.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="441.5" y="83.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="444.5" y="94.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.20%)</title><rect x="441.9" y="147.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="444.9" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (10 samples, 0.18%)</title><rect x="442.1" y="131.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="445.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.17%)</title><rect x="442.1" y="115.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="445.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="442.1" y="99.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="445.1" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="442.1" y="83.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="445.1" y="94.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.13%)</title><rect x="442.5" y="99.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="445.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.11%)</title><rect x="442.8" y="83.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="445.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.06%)</title><rect x="443.4" y="67.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="446.4" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.06%)</title><rect x="443.4" y="51.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="446.4" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (46 samples, 0.85%)</title><rect x="444.3" y="147.0" width="10.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.3" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (45 samples, 0.83%)</title><rect x="444.5" y="131.0" width="9.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="447.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (45 samples, 0.83%)</title><rect x="444.5" y="115.0" width="9.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="447.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (45 samples, 0.83%)</title><rect x="444.5" y="99.0" width="9.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="447.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (45 samples, 0.83%)</title><rect x="444.5" y="83.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="447.5" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.04%)</title><rect x="454.7" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.04%)</title><rect x="454.7" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="457.7" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.04%)</title><rect x="455.6" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="458.6" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="455.6" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="458.6" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="456.4" y="643.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="459.4" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="456.4" y="627.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="459.4" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="456.4" y="611.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="459.4" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="456.4" y="595.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="459.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (437 samples, 8.04%)</title><rect x="457.1" y="819.0" width="94.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.1" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (437 samples, 8.04%)</title><rect x="457.1" y="803.0" width="94.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.1" y="814.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (435 samples, 8.00%)</title><rect x="457.5" y="787.0" width="94.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.5" y="798.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (251 samples, 4.62%)</title><rect x="458.4" y="771.0" width="54.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="461.4" y="782.0">Java_..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (248 samples, 4.56%)</title><rect x="459.0" y="755.0" width="53.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="462.0" y="766.0">rocks..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="459.5" y="739.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="462.5" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.06%)</title><rect x="459.5" y="723.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="462.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (243 samples, 4.47%)</title><rect x="460.1" y="739.0" width="52.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="463.1" y="750.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (242 samples, 4.45%)</title><rect x="460.3" y="723.0" width="52.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="463.3" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (239 samples, 4.40%)</title><rect x="460.3" y="707.0" width="51.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="463.3" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.04%)</title><rect x="460.6" y="691.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="463.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (229 samples, 4.21%)</title><rect x="461.0" y="691.0" width="49.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="464.0" y="702.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="461.0" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="464.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (223 samples, 4.10%)</title><rect x="461.6" y="675.0" width="48.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="464.6" y="686.0">rock..</text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="464.0" y="659.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="467.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="464.0" y="643.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="467.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="464.0" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="467.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="464.0" y="611.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="467.0" y="622.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="464.0" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="467.0" y="606.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="464.0" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="467.0" y="590.0"></text>
</g>
<g>
<title>__sched_yield (27 samples, 0.50%)</title><rect x="464.5" y="659.0" width="5.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="467.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.46%)</title><rect x="464.9" y="643.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.44%)</title><rect x="465.1" y="627.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="468.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (20 samples, 0.37%)</title><rect x="466.0" y="611.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="469.0" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (20 samples, 0.37%)</title><rect x="466.0" y="595.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.0" y="606.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.37%)</title><rect x="466.0" y="579.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="469.0" y="590.0"></text>
</g>
<g>
<title>__schedule (20 samples, 0.37%)</title><rect x="466.0" y="563.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="469.0" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="469.7" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="472.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="470.3" y="659.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="473.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (16 samples, 0.29%)</title><rect x="471.4" y="659.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="474.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (14 samples, 0.26%)</title><rect x="471.6" y="643.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="474.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (14 samples, 0.26%)</title><rect x="471.6" y="627.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="474.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (12 samples, 0.22%)</title><rect x="471.8" y="611.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="474.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (12 samples, 0.22%)</title><rect x="471.8" y="595.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="474.8" y="606.0"></text>
</g>
<g>
<title>__write (12 samples, 0.22%)</title><rect x="471.8" y="579.0" width="2.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="474.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.22%)</title><rect x="471.8" y="563.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="474.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.22%)</title><rect x="471.8" y="547.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="474.8" y="558.0"></text>
</g>
<g>
<title>__x64_sys_write (12 samples, 0.22%)</title><rect x="471.8" y="531.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="474.8" y="542.0"></text>
</g>
<g>
<title>ksys_write (12 samples, 0.22%)</title><rect x="471.8" y="515.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="474.8" y="526.0"></text>
</g>
<g>
<title>vfs_write (12 samples, 0.22%)</title><rect x="471.8" y="499.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="474.8" y="510.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.18%)</title><rect x="471.8" y="483.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="474.8" y="494.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.18%)</title><rect x="471.8" y="467.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="474.8" y="478.0"></text>
</g>
<g>
<title>ext4_file_write_iter (10 samples, 0.18%)</title><rect x="471.8" y="451.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="474.8" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (9 samples, 0.17%)</title><rect x="471.8" y="435.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="474.8" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (8 samples, 0.15%)</title><rect x="472.1" y="419.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="475.1" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.06%)</title><rect x="472.1" y="403.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="475.1" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.06%)</title><rect x="472.1" y="387.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.1" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.04%)</title><rect x="472.3" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="475.3" y="382.0"></text>
</g>
<g>
<title>ext4_da_write_end (5 samples, 0.09%)</title><rect x="472.7" y="403.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="475.7" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.04%)</title><rect x="472.7" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.7" y="398.0"></text>
</g>
<g>
<title>generic_write_end (3 samples, 0.06%)</title><rect x="473.1" y="387.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="476.1" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.04%)</title><rect x="473.1" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="476.1" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.04%)</title><rect x="473.1" y="355.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="476.1" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.04%)</title><rect x="473.1" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="476.1" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.04%)</title><rect x="473.1" y="323.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="476.1" y="334.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="473.1" y="307.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="476.1" y="318.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.04%)</title><rect x="474.9" y="659.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="477.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.04%)</title><rect x="474.9" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="477.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="474.9" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="477.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="474.9" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="477.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.04%)</title><rect x="474.9" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="477.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.04%)</title><rect x="474.9" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="477.9" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.04%)</title><rect x="474.9" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="477.9" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (2 samples, 0.04%)</title><rect x="474.9" y="547.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="477.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (2 samples, 0.04%)</title><rect x="474.9" y="531.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="477.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="474.9" y="515.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="477.9" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="474.9" y="499.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="477.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (37 samples, 0.68%)</title><rect x="475.3" y="659.0" width="8.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="478.3" y="670.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.04%)</title><rect x="475.7" y="643.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="478.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (31 samples, 0.57%)</title><rect x="476.4" y="643.0" width="6.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="479.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (29 samples, 0.53%)</title><rect x="476.8" y="627.0" width="6.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="479.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (28 samples, 0.51%)</title><rect x="476.8" y="611.0" width="6.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="479.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (27 samples, 0.50%)</title><rect x="477.1" y="595.0" width="5.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="480.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (24 samples, 0.44%)</title><rect x="477.7" y="579.0" width="5.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="480.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (24 samples, 0.44%)</title><rect x="477.7" y="563.0" width="5.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="480.7" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (24 samples, 0.44%)</title><rect x="477.7" y="547.0" width="5.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="480.7" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (22 samples, 0.40%)</title><rect x="477.9" y="531.0" width="4.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="480.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (13 samples, 0.24%)</title><rect x="479.2" y="515.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="482.2" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.07%)</title><rect x="479.2" y="499.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="482.2" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="480.1" y="499.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="483.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.11%)</title><rect x="480.7" y="499.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="483.7" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.07%)</title><rect x="481.0" y="483.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="484.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="482.0" y="515.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="485.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (43 samples, 0.79%)</title><rect x="483.6" y="659.0" width="9.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="486.6" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="492.0" y="643.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="495.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (73 samples, 1.34%)</title><rect x="492.9" y="659.0" width="15.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="495.9" y="670.0"></text>
</g>
<g>
<title>__sched_yield (22 samples, 0.40%)</title><rect x="493.3" y="643.0" width="4.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="496.3" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.33%)</title><rect x="494.2" y="627.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="497.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.31%)</title><rect x="494.4" y="611.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="497.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (16 samples, 0.29%)</title><rect x="494.6" y="595.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="497.6" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (16 samples, 0.29%)</title><rect x="494.6" y="579.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="497.6" y="590.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.29%)</title><rect x="494.6" y="563.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="497.6" y="574.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.29%)</title><rect x="494.6" y="547.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="497.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (47 samples, 0.86%)</title><rect x="498.1" y="643.0" width="10.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="501.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="507.9" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="510.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="507.9" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="510.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="507.9" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="510.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="510.9" y="691.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="513.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.04%)</title><rect x="510.9" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="513.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.99%)</title><rect x="512.9" y="771.0" width="11.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="515.9" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (50 samples, 0.92%)</title><rect x="513.1" y="755.0" width="10.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="516.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.83%)</title><rect x="514.2" y="739.0" width="9.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.83%)</title><rect x="514.2" y="723.0" width="9.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="517.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (44 samples, 0.81%)</title><rect x="514.4" y="707.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="517.4" y="718.0"></text>
</g>
<g>
<title>do_futex (43 samples, 0.79%)</title><rect x="514.4" y="691.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.4" y="702.0"></text>
</g>
<g>
<title>futex_wait (43 samples, 0.79%)</title><rect x="514.4" y="675.0" width="9.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="517.4" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (39 samples, 0.72%)</title><rect x="515.0" y="659.0" width="8.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="518.0" y="670.0"></text>
</g>
<g>
<title>schedule (39 samples, 0.72%)</title><rect x="515.0" y="643.0" width="8.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="518.0" y="654.0"></text>
</g>
<g>
<title>__schedule (39 samples, 0.72%)</title><rect x="515.0" y="627.0" width="8.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="518.0" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (38 samples, 0.70%)</title><rect x="515.2" y="611.0" width="8.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="518.2" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (114 samples, 2.10%)</title><rect x="524.8" y="771.0" width="24.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="527.8" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 2.08%)</title><rect x="525.0" y="755.0" width="24.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="528.0" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (113 samples, 2.08%)</title><rect x="525.0" y="739.0" width="24.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.0" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (113 samples, 2.08%)</title><rect x="525.0" y="723.0" width="24.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.0" y="734.0">_..</text>
</g>
<g>
<title>do_futex (113 samples, 2.08%)</title><rect x="525.0" y="707.0" width="24.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.0" y="718.0">d..</text>
</g>
<g>
<title>futex_wake (113 samples, 2.08%)</title><rect x="525.0" y="691.0" width="24.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.0" y="702.0">f..</text>
</g>
<g>
<title>wake_up_q (110 samples, 2.02%)</title><rect x="525.7" y="675.0" width="23.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="528.7" y="686.0">w..</text>
</g>
<g>
<title>try_to_wake_up (110 samples, 2.02%)</title><rect x="525.7" y="659.0" width="23.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="528.7" y="670.0">t..</text>
</g>
<g>
<title>__lock_text_start (109 samples, 2.00%)</title><rect x="525.7" y="643.0" width="23.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="528.7" y="654.0">_..</text>
</g>
<g>
<title>clock_gettime (11 samples, 0.20%)</title><rect x="549.5" y="771.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="552.5" y="782.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.18%)</title><rect x="549.8" y="755.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="552.8" y="766.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.18%)</title><rect x="549.8" y="739.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="552.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.06%)</title><rect x="551.9" y="883.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="551.9" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="551.9" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="552.1" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.04%)</title><rect x="552.6" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.04%)</title><rect x="552.6" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.6" y="878.0"></text>
</g>
<g>
<title>[async_worker-3 tid=44754] (581 samples, 10.69%)</title><rect x="553.0" y="947.0" width="126.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="556.0" y="958.0">[async_worker-3 ..</text>
</g>
<g>
<title>java/lang/Thread.run (581 samples, 10.69%)</title><rect x="553.0" y="931.0" width="126.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.0" y="942.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (581 samples, 10.69%)</title><rect x="553.0" y="915.0" width="126.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.0" y="926.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (581 samples, 10.69%)</title><rect x="553.0" y="899.0" width="126.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.0" y="910.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (576 samples, 10.59%)</title><rect x="553.0" y="883.0" width="125.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.0" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (576 samples, 10.59%)</title><rect x="553.0" y="867.0" width="125.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.0" y="878.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (576 samples, 10.59%)</title><rect x="553.0" y="851.0" width="125.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.0" y="862.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (576 samples, 10.59%)</title><rect x="553.0" y="835.0" width="125.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.0" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (142 samples, 2.61%)</title><rect x="553.2" y="819.0" width="30.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.2" y="830.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="553.4" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="553.4" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="553.4" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="553.4" y="755.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="556.4" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="553.4" y="739.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="556.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (137 samples, 2.52%)</title><rect x="554.1" y="803.0" width="29.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.1" y="814.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (136 samples, 2.50%)</title><rect x="554.3" y="787.0" width="29.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.3" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (136 samples, 2.50%)</title><rect x="554.3" y="771.0" width="29.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.3" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (136 samples, 2.50%)</title><rect x="554.3" y="755.0" width="29.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.3" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (136 samples, 2.50%)</title><rect x="554.3" y="739.0" width="29.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.3" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.11%)</title><rect x="555.0" y="723.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="558.0" y="734.0"></text>
</g>
<g>
<title>send (127 samples, 2.34%)</title><rect x="556.3" y="723.0" width="27.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="559.3" y="734.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (127 samples, 2.34%)</title><rect x="556.3" y="707.0" width="27.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="559.3" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (127 samples, 2.34%)</title><rect x="556.3" y="691.0" width="27.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="559.3" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (125 samples, 2.30%)</title><rect x="556.5" y="675.0" width="27.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="559.5" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (125 samples, 2.30%)</title><rect x="556.5" y="659.0" width="27.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="559.5" y="670.0">_..</text>
</g>
<g>
<title>sock_sendmsg (121 samples, 2.23%)</title><rect x="556.7" y="643.0" width="26.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="559.7" y="654.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (118 samples, 2.17%)</title><rect x="556.9" y="627.0" width="25.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="559.9" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (118 samples, 2.17%)</title><rect x="556.9" y="611.0" width="25.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="559.9" y="622.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (113 samples, 2.08%)</title><rect x="557.8" y="595.0" width="24.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="560.8" y="606.0">t..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.04%)</title><rect x="558.4" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.4" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.04%)</title><rect x="558.4" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.4" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.07%)</title><rect x="559.1" y="579.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.1" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.07%)</title><rect x="559.1" y="563.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="562.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.04%)</title><rect x="559.1" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="562.1" y="558.0"></text>
</g>
<g>
<title>tcp_push (97 samples, 1.78%)</title><rect x="560.2" y="579.0" width="21.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="563.2" y="590.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (97 samples, 1.78%)</title><rect x="560.2" y="563.0" width="21.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="563.2" y="574.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (97 samples, 1.78%)</title><rect x="560.2" y="547.0" width="21.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.2" y="558.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (95 samples, 1.75%)</title><rect x="560.4" y="531.0" width="20.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="563.4" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (92 samples, 1.69%)</title><rect x="560.8" y="515.0" width="20.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="563.8" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (91 samples, 1.67%)</title><rect x="560.8" y="499.0" width="19.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.8" y="510.0"></text>
</g>
<g>
<title>ip_local_out (91 samples, 1.67%)</title><rect x="560.8" y="483.0" width="19.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.8" y="494.0"></text>
</g>
<g>
<title>ip_output (88 samples, 1.62%)</title><rect x="561.5" y="467.0" width="19.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="564.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (88 samples, 1.62%)</title><rect x="561.5" y="451.0" width="19.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="564.5" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (88 samples, 1.62%)</title><rect x="561.5" y="435.0" width="19.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="564.5" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (86 samples, 1.58%)</title><rect x="561.9" y="419.0" width="18.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="564.9" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (79 samples, 1.45%)</title><rect x="562.6" y="403.0" width="17.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="565.6" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (79 samples, 1.45%)</title><rect x="562.6" y="387.0" width="17.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="565.6" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (79 samples, 1.45%)</title><rect x="562.6" y="371.0" width="17.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="565.6" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (79 samples, 1.45%)</title><rect x="562.6" y="355.0" width="17.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="565.6" y="366.0"></text>
</g>
<g>
<title>net_rx_action (77 samples, 1.42%)</title><rect x="563.0" y="339.0" width="16.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="566.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (76 samples, 1.40%)</title><rect x="563.2" y="323.0" width="16.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="566.2" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (75 samples, 1.38%)</title><rect x="563.4" y="307.0" width="16.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="566.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (75 samples, 1.38%)</title><rect x="563.4" y="291.0" width="16.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="566.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv (74 samples, 1.36%)</title><rect x="563.4" y="275.0" width="16.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="566.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (73 samples, 1.34%)</title><rect x="563.6" y="259.0" width="15.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="566.6" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (73 samples, 1.34%)</title><rect x="563.6" y="243.0" width="15.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="566.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (73 samples, 1.34%)</title><rect x="563.6" y="227.0" width="15.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="566.6" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (72 samples, 1.32%)</title><rect x="563.6" y="211.0" width="15.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (70 samples, 1.29%)</title><rect x="564.1" y="195.0" width="15.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="567.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (68 samples, 1.25%)</title><rect x="564.5" y="179.0" width="14.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="567.5" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="564.5" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="567.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (65 samples, 1.20%)</title><rect x="565.2" y="163.0" width="14.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.2" y="174.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.15%)</title><rect x="565.4" y="147.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="568.4" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.07%)</title><rect x="565.8" y="131.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="568.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.06%)</title><rect x="566.0" y="115.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="569.0" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="566.3" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="569.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="566.3" y="83.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="569.3" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (55 samples, 1.01%)</title><rect x="567.3" y="147.0" width="12.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="570.3" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (55 samples, 1.01%)</title><rect x="567.3" y="131.0" width="12.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="570.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 0.99%)</title><rect x="567.6" y="115.0" width="11.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="570.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 0.99%)</title><rect x="567.6" y="99.0" width="11.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="570.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (54 samples, 0.99%)</title><rect x="567.6" y="83.0" width="11.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="570.6" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.07%)</title><rect x="579.7" y="403.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.07%)</title><rect x="579.7" y="387.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="582.7" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.04%)</title><rect x="580.1" y="371.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.1" y="382.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.07%)</title><rect x="581.4" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="584.4" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.07%)</title><rect x="581.4" y="563.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="584.4" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="582.5" y="627.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.5" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.04%)</title><rect x="582.5" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.5" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="582.5" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="585.5" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="583.0" y="643.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="586.0" y="654.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="583.0" y="627.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="586.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="583.0" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="586.0" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="583.0" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="586.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (433 samples, 7.96%)</title><rect x="584.0" y="819.0" width="94.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.0" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (433 samples, 7.96%)</title><rect x="584.0" y="803.0" width="94.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.0" y="814.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (433 samples, 7.96%)</title><rect x="584.0" y="787.0" width="94.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.0" y="798.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (270 samples, 4.97%)</title><rect x="584.5" y="771.0" width="58.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="587.5" y="782.0">Java_o..</text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.06%)</title><rect x="585.1" y="755.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="588.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="585.8" y="755.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="588.8" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (261 samples, 4.80%)</title><rect x="586.4" y="755.0" width="56.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="589.4" y="766.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (255 samples, 4.69%)</title><rect x="587.3" y="739.0" width="55.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="590.3" y="750.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (254 samples, 4.67%)</title><rect x="587.5" y="723.0" width="55.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="590.5" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (252 samples, 4.63%)</title><rect x="587.5" y="707.0" width="54.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="590.5" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (242 samples, 4.45%)</title><rect x="588.0" y="691.0" width="52.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="591.0" y="702.0">rocks..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="588.2" y="675.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="591.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (235 samples, 4.32%)</title><rect x="588.8" y="675.0" width="51.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="591.8" y="686.0">rocks..</text>
</g>
<g>
<title>__sched_yield (27 samples, 0.50%)</title><rect x="589.9" y="659.0" width="5.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="592.9" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.46%)</title><rect x="590.3" y="643.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="593.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.44%)</title><rect x="590.6" y="627.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="593.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (22 samples, 0.40%)</title><rect x="591.0" y="611.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="594.0" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (22 samples, 0.40%)</title><rect x="591.0" y="595.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="594.0" y="606.0"></text>
</g>
<g>
<title>schedule (22 samples, 0.40%)</title><rect x="591.0" y="579.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="594.0" y="590.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.39%)</title><rect x="591.2" y="563.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="594.2" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="595.1" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="598.1" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="595.8" y="659.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="598.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (20 samples, 0.37%)</title><rect x="596.4" y="659.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="599.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.04%)</title><rect x="596.4" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="599.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (16 samples, 0.29%)</title><rect x="596.9" y="643.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="599.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (15 samples, 0.28%)</title><rect x="596.9" y="627.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="599.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (14 samples, 0.26%)</title><rect x="596.9" y="611.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="599.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (14 samples, 0.26%)</title><rect x="596.9" y="595.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="599.9" y="606.0"></text>
</g>
<g>
<title>__write (13 samples, 0.24%)</title><rect x="597.1" y="579.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="600.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.24%)</title><rect x="597.1" y="563.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.24%)</title><rect x="597.1" y="547.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="600.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_write (11 samples, 0.20%)</title><rect x="597.1" y="531.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.1" y="542.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 0.20%)</title><rect x="597.1" y="515.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="600.1" y="526.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.20%)</title><rect x="597.1" y="499.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="600.1" y="510.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.18%)</title><rect x="597.1" y="483.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.1" y="494.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.18%)</title><rect x="597.1" y="467.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.1" y="478.0"></text>
</g>
<g>
<title>ext4_file_write_iter (9 samples, 0.17%)</title><rect x="597.1" y="451.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.1" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (8 samples, 0.15%)</title><rect x="597.1" y="435.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.1" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (8 samples, 0.15%)</title><rect x="597.1" y="419.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="600.1" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.06%)</title><rect x="597.1" y="403.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.1" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.06%)</title><rect x="597.1" y="387.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.1" y="398.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.06%)</title><rect x="597.1" y="371.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="600.1" y="382.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (2 samples, 0.04%)</title><rect x="597.1" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="600.1" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_end (5 samples, 0.09%)</title><rect x="597.7" y="403.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.7" y="414.0"></text>
</g>
<g>
<title>generic_write_end (3 samples, 0.06%)</title><rect x="598.2" y="387.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="601.2" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.06%)</title><rect x="598.2" y="371.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.2" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.04%)</title><rect x="598.4" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="601.4" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.04%)</title><rect x="598.4" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="601.4" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="598.4" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="601.4" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.04%)</title><rect x="598.4" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="601.4" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.04%)</title><rect x="598.4" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.4" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (2 samples, 0.04%)</title><rect x="598.4" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="601.4" y="286.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="600.3" y="643.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="603.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.04%)</title><rect x="601.2" y="659.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="604.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.04%)</title><rect x="601.2" y="643.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="604.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="601.2" y="627.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="604.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="601.2" y="611.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="604.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.04%)</title><rect x="601.2" y="595.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="604.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.04%)</title><rect x="601.2" y="579.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="604.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (42 samples, 0.77%)</title><rect x="601.6" y="659.0" width="9.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="604.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (40 samples, 0.74%)</title><rect x="602.1" y="643.0" width="8.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="605.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (38 samples, 0.70%)</title><rect x="602.5" y="627.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="605.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (36 samples, 0.66%)</title><rect x="602.5" y="611.0" width="7.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="605.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (34 samples, 0.63%)</title><rect x="602.7" y="595.0" width="7.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="605.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.04%)</title><rect x="603.1" y="579.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="606.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (29 samples, 0.53%)</title><rect x="603.8" y="579.0" width="6.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="606.8" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (2 samples, 0.04%)</title><rect x="603.8" y="563.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="606.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (26 samples, 0.48%)</title><rect x="604.4" y="563.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="607.4" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (26 samples, 0.48%)</title><rect x="604.4" y="547.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="607.4" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (25 samples, 0.46%)</title><rect x="604.4" y="531.0" width="5.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="607.4" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (18 samples, 0.33%)</title><rect x="605.3" y="515.0" width="3.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="608.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (2 samples, 0.04%)</title><rect x="605.3" y="499.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="608.3" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.06%)</title><rect x="605.8" y="499.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="608.8" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.13%)</title><rect x="606.4" y="499.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="609.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.11%)</title><rect x="607.9" y="499.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="610.9" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="608.6" y="483.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="611.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.06%)</title><rect x="609.2" y="515.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="612.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.04%)</title><rect x="610.3" y="611.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="613.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (60 samples, 1.10%)</title><rect x="610.7" y="659.0" width="13.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="613.7" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="621.4" y="643.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="624.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="621.6" y="627.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="624.6" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="621.6" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="624.6" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="621.6" y="595.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="624.6" y="606.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="621.6" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="624.6" y="590.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="621.6" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="624.6" y="574.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="621.8" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="624.8" y="558.0"></text>
</g>
<g>
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;) (2 samples, 0.04%)</title><rect x="622.9" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="625.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="623.3" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="626.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="623.3" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="626.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="623.3" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="626.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (65 samples, 1.20%)</title><rect x="623.8" y="659.0" width="14.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="626.8" y="670.0"></text>
</g>
<g>
<title>__sched_yield (25 samples, 0.46%)</title><rect x="624.4" y="643.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="627.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.40%)</title><rect x="625.1" y="627.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="628.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.39%)</title><rect x="625.3" y="611.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="628.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (19 samples, 0.35%)</title><rect x="625.7" y="595.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="628.7" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (19 samples, 0.35%)</title><rect x="625.7" y="579.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="628.7" y="590.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.35%)</title><rect x="625.7" y="563.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="628.7" y="574.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.35%)</title><rect x="625.7" y="547.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="628.7" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="629.4" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="632.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (37 samples, 0.68%)</title><rect x="629.8" y="643.0" width="8.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="632.8" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="637.0" y="627.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.0" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="637.0" y="611.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.0" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="637.0" y="595.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="640.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="638.1" y="659.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="641.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.04%)</title><rect x="638.1" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="641.1" y="654.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (2 samples, 0.04%)</title><rect x="639.2" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="642.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.11%)</title><rect x="640.7" y="691.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="643.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="642.2" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="645.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.75%)</title><rect x="643.1" y="771.0" width="8.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="646.1" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (37 samples, 0.68%)</title><rect x="643.3" y="755.0" width="8.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="646.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.66%)</title><rect x="643.5" y="739.0" width="7.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="646.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.66%)</title><rect x="643.5" y="723.0" width="7.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="646.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (35 samples, 0.64%)</title><rect x="643.7" y="707.0" width="7.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="646.7" y="718.0"></text>
</g>
<g>
<title>do_futex (35 samples, 0.64%)</title><rect x="643.7" y="691.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="646.7" y="702.0"></text>
</g>
<g>
<title>futex_wait (35 samples, 0.64%)</title><rect x="643.7" y="675.0" width="7.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="646.7" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (29 samples, 0.53%)</title><rect x="643.9" y="659.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.9" y="670.0"></text>
</g>
<g>
<title>schedule (29 samples, 0.53%)</title><rect x="643.9" y="643.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="646.9" y="654.0"></text>
</g>
<g>
<title>__schedule (29 samples, 0.53%)</title><rect x="643.9" y="627.0" width="6.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="646.9" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (28 samples, 0.51%)</title><rect x="644.2" y="611.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="647.2" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.07%)</title><rect x="650.2" y="659.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="653.2" y="670.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.06%)</title><rect x="650.5" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="653.5" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.04%)</title><rect x="651.5" y="755.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="654.5" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.07%)</title><rect x="652.0" y="771.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="655.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (108 samples, 1.99%)</title><rect x="652.8" y="771.0" width="23.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="655.8" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (108 samples, 1.99%)</title><rect x="652.8" y="755.0" width="23.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="655.8" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (108 samples, 1.99%)</title><rect x="652.8" y="739.0" width="23.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="655.8" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (108 samples, 1.99%)</title><rect x="652.8" y="723.0" width="23.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="655.8" y="734.0">_..</text>
</g>
<g>
<title>do_futex (108 samples, 1.99%)</title><rect x="652.8" y="707.0" width="23.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.8" y="718.0">d..</text>
</g>
<g>
<title>futex_wake (107 samples, 1.97%)</title><rect x="653.1" y="691.0" width="23.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="656.1" y="702.0">f..</text>
</g>
<g>
<title>wake_up_q (107 samples, 1.97%)</title><rect x="653.1" y="675.0" width="23.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="656.1" y="686.0">w..</text>
</g>
<g>
<title>try_to_wake_up (107 samples, 1.97%)</title><rect x="653.1" y="659.0" width="23.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.1" y="670.0">t..</text>
</g>
<g>
<title>__lock_text_start (107 samples, 1.97%)</title><rect x="653.1" y="643.0" width="23.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="656.1" y="654.0">_..</text>
</g>
<g>
<title>clock_gettime (7 samples, 0.13%)</title><rect x="676.3" y="771.0" width="1.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="679.3" y="782.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.09%)</title><rect x="676.7" y="755.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="679.7" y="766.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="676.9" y="739.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="679.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.06%)</title><rect x="678.0" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="678.0" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="678.0" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="678.2" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.04%)</title><rect x="678.7" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.04%)</title><rect x="678.7" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.7" y="878.0"></text>
</g>
<g>
<title>[async_worker-4 tid=44752] (583 samples, 10.72%)</title><rect x="679.1" y="947.0" width="126.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="682.1" y="958.0">[async_worker-4 ..</text>
</g>
<g>
<title>java/lang/Thread.run (583 samples, 10.72%)</title><rect x="679.1" y="931.0" width="126.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.1" y="942.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (583 samples, 10.72%)</title><rect x="679.1" y="915.0" width="126.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.1" y="926.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (583 samples, 10.72%)</title><rect x="679.1" y="899.0" width="126.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.1" y="910.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (574 samples, 10.56%)</title><rect x="679.1" y="883.0" width="124.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.1" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (574 samples, 10.56%)</title><rect x="679.1" y="867.0" width="124.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.1" y="878.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (574 samples, 10.56%)</title><rect x="679.1" y="851.0" width="124.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.1" y="862.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (574 samples, 10.56%)</title><rect x="679.1" y="835.0" width="124.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.1" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (162 samples, 2.98%)</title><rect x="679.3" y="819.0" width="35.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.3" y="830.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.07%)</title><rect x="680.2" y="803.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.07%)</title><rect x="680.2" y="787.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.07%)</title><rect x="680.2" y="771.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.2" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="680.6" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="683.6" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="680.6" y="739.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="683.6" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="680.6" y="723.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="683.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (152 samples, 2.80%)</title><rect x="681.1" y="803.0" width="33.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.1" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="681.1" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (150 samples, 2.76%)</title><rect x="681.5" y="787.0" width="32.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.5" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (150 samples, 2.76%)</title><rect x="681.5" y="771.0" width="32.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.5" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (150 samples, 2.76%)</title><rect x="681.5" y="755.0" width="32.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="684.5" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (150 samples, 2.76%)</title><rect x="681.5" y="739.0" width="32.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.5" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.11%)</title><rect x="681.7" y="723.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="684.7" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.04%)</title><rect x="681.9" y="707.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="684.9" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="682.4" y="707.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="685.4" y="718.0"></text>
</g>
<g>
<title>send (142 samples, 2.61%)</title><rect x="683.2" y="723.0" width="30.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="686.2" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (142 samples, 2.61%)</title><rect x="683.2" y="707.0" width="30.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="686.2" y="718.0">en..</text>
</g>
<g>
<title>do_syscall_64 (142 samples, 2.61%)</title><rect x="683.2" y="691.0" width="30.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="686.2" y="702.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (141 samples, 2.59%)</title><rect x="683.4" y="675.0" width="30.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="686.4" y="686.0">__..</text>
</g>
<g>
<title>__sys_sendto (141 samples, 2.59%)</title><rect x="683.4" y="659.0" width="30.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="686.4" y="670.0">__..</text>
</g>
<g>
<title>sock_sendmsg (136 samples, 2.50%)</title><rect x="684.1" y="643.0" width="29.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="687.1" y="654.0">so..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.07%)</title><rect x="684.1" y="627.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="687.1" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (131 samples, 2.41%)</title><rect x="685.0" y="627.0" width="28.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="688.0" y="638.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (131 samples, 2.41%)</title><rect x="685.0" y="611.0" width="28.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="688.0" y="622.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (127 samples, 2.34%)</title><rect x="685.8" y="595.0" width="27.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="688.8" y="606.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.11%)</title><rect x="687.6" y="579.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="690.6" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.11%)</title><rect x="687.6" y="563.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.04%)</title><rect x="687.6" y="547.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="690.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (113 samples, 2.08%)</title><rect x="688.9" y="579.0" width="24.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="691.9" y="590.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (113 samples, 2.08%)</title><rect x="688.9" y="563.0" width="24.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="691.9" y="574.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (113 samples, 2.08%)</title><rect x="688.9" y="547.0" width="24.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="691.9" y="558.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (105 samples, 1.93%)</title><rect x="689.1" y="531.0" width="22.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="692.1" y="542.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (101 samples, 1.86%)</title><rect x="689.5" y="515.0" width="21.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="692.5" y="526.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (101 samples, 1.86%)</title><rect x="689.5" y="499.0" width="21.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="692.5" y="510.0">_..</text>
</g>
<g>
<title>ip_local_out (100 samples, 1.84%)</title><rect x="689.7" y="483.0" width="21.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.7" y="494.0">i..</text>
</g>
<g>
<title>ip_output (100 samples, 1.84%)</title><rect x="689.7" y="467.0" width="21.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.7" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (100 samples, 1.84%)</title><rect x="689.7" y="451.0" width="21.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="692.7" y="462.0">i..</text>
</g>
<g>
<title>__ip_finish_output (98 samples, 1.80%)</title><rect x="690.2" y="435.0" width="21.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="693.2" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (98 samples, 1.80%)</title><rect x="690.2" y="419.0" width="21.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="693.2" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (90 samples, 1.66%)</title><rect x="690.8" y="403.0" width="19.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="693.8" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (90 samples, 1.66%)</title><rect x="690.8" y="387.0" width="19.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="693.8" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (90 samples, 1.66%)</title><rect x="690.8" y="371.0" width="19.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="693.8" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (90 samples, 1.66%)</title><rect x="690.8" y="355.0" width="19.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="693.8" y="366.0"></text>
</g>
<g>
<title>net_rx_action (90 samples, 1.66%)</title><rect x="690.8" y="339.0" width="19.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="693.8" y="350.0"></text>
</g>
<g>
<title>process_backlog (89 samples, 1.64%)</title><rect x="691.0" y="323.0" width="19.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="694.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (86 samples, 1.58%)</title><rect x="691.7" y="307.0" width="18.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="694.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (86 samples, 1.58%)</title><rect x="691.7" y="291.0" width="18.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="694.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (85 samples, 1.56%)</title><rect x="691.9" y="275.0" width="18.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="694.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (83 samples, 1.53%)</title><rect x="692.3" y="259.0" width="18.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="695.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (83 samples, 1.53%)</title><rect x="692.3" y="243.0" width="18.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="695.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (83 samples, 1.53%)</title><rect x="692.3" y="227.0" width="18.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="695.3" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (83 samples, 1.53%)</title><rect x="692.3" y="211.0" width="18.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="695.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (83 samples, 1.53%)</title><rect x="692.3" y="195.0" width="18.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="695.3" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="693.0" y="179.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="696.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (75 samples, 1.38%)</title><rect x="694.1" y="179.0" width="16.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="697.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (73 samples, 1.34%)</title><rect x="694.5" y="163.0" width="15.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="697.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.18%)</title><rect x="695.0" y="147.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="698.0" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.15%)</title><rect x="695.4" y="131.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="698.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.09%)</title><rect x="696.0" y="115.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="699.0" y="126.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.07%)</title><rect x="696.3" y="99.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="696.3" y="83.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="699.3" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (55 samples, 1.01%)</title><rect x="697.1" y="147.0" width="12.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="700.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (55 samples, 1.01%)</title><rect x="697.1" y="131.0" width="12.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="700.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 0.99%)</title><rect x="697.3" y="115.0" width="11.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="700.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 0.99%)</title><rect x="697.3" y="99.0" width="11.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="700.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (54 samples, 0.99%)</title><rect x="697.3" y="83.0" width="11.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="700.3" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.07%)</title><rect x="709.3" y="147.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="712.3" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="709.3" y="131.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="712.3" y="142.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.04%)</title><rect x="709.7" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="712.7" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.09%)</title><rect x="710.4" y="403.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.09%)</title><rect x="710.4" y="387.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.4" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="710.6" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="713.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="710.6" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="713.6" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="710.6" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="713.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="710.6" y="323.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="713.6" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="710.6" y="307.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.6" y="318.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.09%)</title><rect x="712.1" y="531.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="715.1" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.09%)</title><rect x="712.1" y="515.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.09%)</title><rect x="712.1" y="499.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="715.1" y="510.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.09%)</title><rect x="712.1" y="483.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="715.1" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.06%)</title><rect x="712.5" y="467.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="715.5" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="713.6" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="716.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (411 samples, 7.56%)</title><rect x="714.5" y="819.0" width="89.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.5" y="830.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (410 samples, 7.54%)</title><rect x="714.5" y="803.0" width="89.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.5" y="814.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (410 samples, 7.54%)</title><rect x="714.5" y="787.0" width="89.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.5" y="798.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (239 samples, 4.40%)</title><rect x="715.1" y="771.0" width="51.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="718.1" y="782.0">Java_..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (237 samples, 4.36%)</title><rect x="715.6" y="755.0" width="51.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="718.6" y="766.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (235 samples, 4.32%)</title><rect x="715.8" y="739.0" width="51.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="718.8" y="750.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (234 samples, 4.30%)</title><rect x="716.0" y="723.0" width="50.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="719.0" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (233 samples, 4.29%)</title><rect x="716.0" y="707.0" width="50.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="719.0" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.04%)</title><rect x="716.0" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="719.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (223 samples, 4.10%)</title><rect x="716.4" y="691.0" width="48.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="719.4" y="702.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (219 samples, 4.03%)</title><rect x="716.4" y="675.0" width="47.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="719.4" y="686.0">rock..</text>
</g>
<g>
<title>__sched_yield (16 samples, 0.29%)</title><rect x="717.7" y="659.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="720.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.29%)</title><rect x="717.7" y="643.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="720.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.29%)</title><rect x="717.7" y="627.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="720.7" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (13 samples, 0.24%)</title><rect x="718.4" y="611.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="721.4" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (13 samples, 0.24%)</title><rect x="718.4" y="595.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="721.4" y="606.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.24%)</title><rect x="718.4" y="579.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="721.4" y="590.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.24%)</title><rect x="718.4" y="563.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="721.4" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="720.6" y="547.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="723.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (20 samples, 0.37%)</title><rect x="721.4" y="659.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="724.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (19 samples, 0.35%)</title><rect x="721.6" y="643.0" width="4.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="724.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (19 samples, 0.35%)</title><rect x="721.6" y="627.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="724.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (17 samples, 0.31%)</title><rect x="721.9" y="611.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="724.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (17 samples, 0.31%)</title><rect x="721.9" y="595.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="724.9" y="606.0"></text>
</g>
<g>
<title>__write (16 samples, 0.29%)</title><rect x="722.1" y="579.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="725.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.29%)</title><rect x="722.1" y="563.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="725.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.29%)</title><rect x="722.1" y="547.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="725.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_write (16 samples, 0.29%)</title><rect x="722.1" y="531.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="725.1" y="542.0"></text>
</g>
<g>
<title>ksys_write (16 samples, 0.29%)</title><rect x="722.1" y="515.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="725.1" y="526.0"></text>
</g>
<g>
<title>vfs_write (16 samples, 0.29%)</title><rect x="722.1" y="499.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="725.1" y="510.0"></text>
</g>
<g>
<title>__vfs_write (13 samples, 0.24%)</title><rect x="722.1" y="483.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="725.1" y="494.0"></text>
</g>
<g>
<title>new_sync_write (12 samples, 0.22%)</title><rect x="722.3" y="467.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="725.3" y="478.0"></text>
</g>
<g>
<title>ext4_file_write_iter (12 samples, 0.22%)</title><rect x="722.3" y="451.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="725.3" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (10 samples, 0.18%)</title><rect x="722.3" y="435.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="725.3" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (10 samples, 0.18%)</title><rect x="722.3" y="419.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="725.3" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.06%)</title><rect x="722.3" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.3" y="414.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 0.11%)</title><rect x="722.9" y="403.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="725.9" y="414.0"></text>
</g>
<g>
<title>generic_write_end (6 samples, 0.11%)</title><rect x="722.9" y="387.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.9" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (6 samples, 0.11%)</title><rect x="722.9" y="371.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="725.9" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (5 samples, 0.09%)</title><rect x="722.9" y="355.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="725.9" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.07%)</title><rect x="723.2" y="339.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="726.2" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="723.2" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.2" y="334.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.04%)</title><rect x="723.6" y="323.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="726.6" y="334.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="723.6" y="307.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="726.6" y="318.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.04%)</title><rect x="724.5" y="435.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="727.5" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.06%)</title><rect x="724.9" y="483.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="727.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (4 samples, 0.07%)</title><rect x="726.0" y="659.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="729.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.07%)</title><rect x="726.0" y="643.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="729.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.07%)</title><rect x="726.0" y="627.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="729.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="726.0" y="611.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="729.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.07%)</title><rect x="726.0" y="595.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="729.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.06%)</title><rect x="726.2" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="729.2" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.06%)</title><rect x="726.2" y="563.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="729.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="726.2" y="547.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="729.2" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="726.2" y="531.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="729.2" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="726.2" y="515.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="729.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (45 samples, 0.83%)</title><rect x="726.9" y="659.0" width="9.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="729.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (40 samples, 0.74%)</title><rect x="727.5" y="643.0" width="8.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="730.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (4 samples, 0.07%)</title><rect x="727.5" y="627.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="730.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (36 samples, 0.66%)</title><rect x="728.4" y="627.0" width="7.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="731.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (34 samples, 0.63%)</title><rect x="728.8" y="611.0" width="7.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="731.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.04%)</title><rect x="728.8" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="731.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (31 samples, 0.57%)</title><rect x="729.2" y="595.0" width="6.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="732.2" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="729.2" y="579.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="732.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (28 samples, 0.51%)</title><rect x="729.7" y="579.0" width="6.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="732.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (27 samples, 0.50%)</title><rect x="729.7" y="563.0" width="5.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="732.7" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (27 samples, 0.50%)</title><rect x="729.7" y="547.0" width="5.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="732.7" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (26 samples, 0.48%)</title><rect x="729.9" y="531.0" width="5.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="732.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (14 samples, 0.26%)</title><rect x="731.8" y="515.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="734.8" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.11%)</title><rect x="732.1" y="499.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="735.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.13%)</title><rect x="733.4" y="499.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="736.4" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.07%)</title><rect x="733.8" y="483.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="736.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.06%)</title><rect x="734.9" y="515.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="737.9" y="526.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (2 samples, 0.04%)</title><rect x="736.2" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="739.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (55 samples, 1.01%)</title><rect x="736.6" y="659.0" width="12.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="739.6" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="746.6" y="643.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="749.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="746.8" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="749.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.04%)</title><rect x="747.7" y="643.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="750.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="748.1" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="751.1" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="748.1" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="751.1" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="748.1" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="751.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (61 samples, 1.12%)</title><rect x="748.8" y="659.0" width="13.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="751.8" y="670.0"></text>
</g>
<g>
<title>__sched_yield (22 samples, 0.40%)</title><rect x="749.0" y="643.0" width="4.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="752.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.39%)</title><rect x="749.2" y="627.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="752.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.37%)</title><rect x="749.4" y="611.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="752.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (16 samples, 0.29%)</title><rect x="750.3" y="595.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="753.3" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (16 samples, 0.29%)</title><rect x="750.3" y="579.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="753.3" y="590.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.29%)</title><rect x="750.3" y="563.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="753.3" y="574.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.29%)</title><rect x="750.3" y="547.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="753.3" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="753.1" y="531.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="756.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (34 samples, 0.63%)</title><rect x="754.0" y="643.0" width="7.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="757.0" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="760.7" y="627.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="763.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="760.7" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="763.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="760.7" y="595.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="763.7" y="606.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (3 samples, 0.06%)</title><rect x="761.4" y="643.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="764.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="762.2" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="765.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (3 samples, 0.06%)</title><rect x="762.7" y="659.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="765.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.04%)</title><rect x="764.8" y="691.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="767.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="765.3" y="691.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="768.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.88%)</title><rect x="767.0" y="771.0" width="10.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="770.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.06%)</title><rect x="767.2" y="755.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="770.2" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (42 samples, 0.77%)</title><rect x="768.1" y="755.0" width="9.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="771.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.74%)</title><rect x="768.5" y="739.0" width="8.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="771.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.74%)</title><rect x="768.5" y="723.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="771.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (39 samples, 0.72%)</title><rect x="768.7" y="707.0" width="8.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="771.7" y="718.0"></text>
</g>
<g>
<title>do_futex (39 samples, 0.72%)</title><rect x="768.7" y="691.0" width="8.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="771.7" y="702.0"></text>
</g>
<g>
<title>futex_wait (39 samples, 0.72%)</title><rect x="768.7" y="675.0" width="8.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="771.7" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (34 samples, 0.63%)</title><rect x="768.7" y="659.0" width="7.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="771.7" y="670.0"></text>
</g>
<g>
<title>schedule (33 samples, 0.61%)</title><rect x="769.0" y="643.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="772.0" y="654.0"></text>
</g>
<g>
<title>__schedule (33 samples, 0.61%)</title><rect x="769.0" y="627.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="772.0" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (32 samples, 0.59%)</title><rect x="769.2" y="611.0" width="6.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="772.2" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.06%)</title><rect x="776.1" y="659.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="779.1" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (112 samples, 2.06%)</title><rect x="777.6" y="771.0" width="24.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="780.6" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (111 samples, 2.04%)</title><rect x="777.9" y="755.0" width="24.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="780.9" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (111 samples, 2.04%)</title><rect x="777.9" y="739.0" width="24.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="780.9" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (111 samples, 2.04%)</title><rect x="777.9" y="723.0" width="24.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.9" y="734.0">_..</text>
</g>
<g>
<title>do_futex (111 samples, 2.04%)</title><rect x="777.9" y="707.0" width="24.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="780.9" y="718.0">d..</text>
</g>
<g>
<title>futex_wake (111 samples, 2.04%)</title><rect x="777.9" y="691.0" width="24.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.9" y="702.0">f..</text>
</g>
<g>
<title>wake_up_q (108 samples, 1.99%)</title><rect x="778.5" y="675.0" width="23.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.5" y="686.0">w..</text>
</g>
<g>
<title>try_to_wake_up (108 samples, 1.99%)</title><rect x="778.5" y="659.0" width="23.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.5" y="670.0">t..</text>
</g>
<g>
<title>__lock_text_start (108 samples, 1.99%)</title><rect x="778.5" y="643.0" width="23.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="781.5" y="654.0">_..</text>
</g>
<g>
<title>clock_gettime (7 samples, 0.13%)</title><rect x="801.9" y="771.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="804.9" y="782.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.13%)</title><rect x="801.9" y="755.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="804.9" y="766.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.13%)</title><rect x="801.9" y="739.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="804.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.15%)</title><rect x="803.9" y="883.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.07%)</title><rect x="804.8" y="867.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="805.0" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="805.0" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="805.0" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="805.2" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="805.2" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.2" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="805.2" y="771.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="808.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="805.2" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="808.2" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="805.2" y="739.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="808.2" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="805.2" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="808.2" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="805.2" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="808.2" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="805.2" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="808.2" y="702.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="805.2" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="808.2" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="805.2" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="808.2" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="805.2" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.2" y="654.0"></text>
</g>
<g>
<title>[async_worker-5 tid=44751] (580 samples, 10.67%)</title><rect x="805.6" y="947.0" width="125.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="808.6" y="958.0">[async_worker-5..</text>
</g>
<g>
<title>java/lang/Thread.run (580 samples, 10.67%)</title><rect x="805.6" y="931.0" width="125.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.6" y="942.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (580 samples, 10.67%)</title><rect x="805.6" y="915.0" width="125.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.6" y="926.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (580 samples, 10.67%)</title><rect x="805.6" y="899.0" width="125.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.6" y="910.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (568 samples, 10.45%)</title><rect x="805.6" y="883.0" width="123.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.6" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (568 samples, 10.45%)</title><rect x="805.6" y="867.0" width="123.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.6" y="878.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (566 samples, 10.41%)</title><rect x="806.1" y="851.0" width="122.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.1" y="862.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (566 samples, 10.41%)</title><rect x="806.1" y="835.0" width="122.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.1" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (120 samples, 2.21%)</title><rect x="806.7" y="819.0" width="26.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.7" y="830.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.07%)</title><rect x="807.2" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.07%)</title><rect x="807.2" y="787.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.07%)</title><rect x="807.2" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.2" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.06%)</title><rect x="807.4" y="755.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="810.4" y="766.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.06%)</title><rect x="807.4" y="739.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="810.4" y="750.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="807.4" y="723.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="810.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (113 samples, 2.08%)</title><rect x="808.0" y="803.0" width="24.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.0" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.06%)</title><rect x="808.0" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="811.0" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (110 samples, 2.02%)</title><rect x="808.7" y="787.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.7" y="798.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (110 samples, 2.02%)</title><rect x="808.7" y="771.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.7" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (109 samples, 2.00%)</title><rect x="808.9" y="755.0" width="23.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.9" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (108 samples, 1.99%)</title><rect x="809.1" y="739.0" width="23.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.1" y="750.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.06%)</title><rect x="809.1" y="723.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="812.1" y="734.0"></text>
</g>
<g>
<title>send (105 samples, 1.93%)</title><rect x="809.8" y="723.0" width="22.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="812.8" y="734.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (102 samples, 1.88%)</title><rect x="810.4" y="707.0" width="22.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="813.4" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (102 samples, 1.88%)</title><rect x="810.4" y="691.0" width="22.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="813.4" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (101 samples, 1.86%)</title><rect x="810.6" y="675.0" width="21.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="813.6" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (99 samples, 1.82%)</title><rect x="810.6" y="659.0" width="21.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.6" y="670.0">_..</text>
</g>
<g>
<title>sock_sendmsg (98 samples, 1.80%)</title><rect x="810.6" y="643.0" width="21.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="813.6" y="654.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (98 samples, 1.80%)</title><rect x="810.6" y="627.0" width="21.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="813.6" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (98 samples, 1.80%)</title><rect x="810.6" y="611.0" width="21.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="813.6" y="622.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (96 samples, 1.77%)</title><rect x="810.8" y="595.0" width="20.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="813.8" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.07%)</title><rect x="811.9" y="579.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="814.9" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.07%)</title><rect x="811.9" y="563.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="814.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.04%)</title><rect x="811.9" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="814.9" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="811.9" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="814.9" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="812.4" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="815.4" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.04%)</title><rect x="812.4" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="815.4" y="542.0"></text>
</g>
<g>
<title>tcp_push (85 samples, 1.56%)</title><rect x="813.0" y="579.0" width="18.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="816.0" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (85 samples, 1.56%)</title><rect x="813.0" y="563.0" width="18.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="816.0" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (85 samples, 1.56%)</title><rect x="813.0" y="547.0" width="18.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="816.0" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (82 samples, 1.51%)</title><rect x="813.2" y="531.0" width="17.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="816.2" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (77 samples, 1.42%)</title><rect x="813.9" y="515.0" width="16.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="816.9" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (77 samples, 1.42%)</title><rect x="813.9" y="499.0" width="16.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="816.9" y="510.0"></text>
</g>
<g>
<title>ip_local_out (77 samples, 1.42%)</title><rect x="813.9" y="483.0" width="16.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="816.9" y="494.0"></text>
</g>
<g>
<title>ip_output (76 samples, 1.40%)</title><rect x="814.1" y="467.0" width="16.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="817.1" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (76 samples, 1.40%)</title><rect x="814.1" y="451.0" width="16.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="817.1" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (76 samples, 1.40%)</title><rect x="814.1" y="435.0" width="16.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="817.1" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (76 samples, 1.40%)</title><rect x="814.1" y="419.0" width="16.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="817.1" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (71 samples, 1.31%)</title><rect x="814.1" y="403.0" width="15.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="817.1" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (71 samples, 1.31%)</title><rect x="814.1" y="387.0" width="15.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="817.1" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (71 samples, 1.31%)</title><rect x="814.1" y="371.0" width="15.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="817.1" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (70 samples, 1.29%)</title><rect x="814.1" y="355.0" width="15.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="817.1" y="366.0"></text>
</g>
<g>
<title>net_rx_action (67 samples, 1.23%)</title><rect x="814.8" y="339.0" width="14.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="817.8" y="350.0"></text>
</g>
<g>
<title>process_backlog (67 samples, 1.23%)</title><rect x="814.8" y="323.0" width="14.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="817.8" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (67 samples, 1.23%)</title><rect x="814.8" y="307.0" width="14.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="817.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (67 samples, 1.23%)</title><rect x="814.8" y="291.0" width="14.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="817.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv (67 samples, 1.23%)</title><rect x="814.8" y="275.0" width="14.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="817.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (67 samples, 1.23%)</title><rect x="814.8" y="259.0" width="14.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="817.8" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (67 samples, 1.23%)</title><rect x="814.8" y="243.0" width="14.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="817.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (67 samples, 1.23%)</title><rect x="814.8" y="227.0" width="14.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="817.8" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (67 samples, 1.23%)</title><rect x="814.8" y="211.0" width="14.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="817.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (67 samples, 1.23%)</title><rect x="814.8" y="195.0" width="14.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="817.8" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="815.0" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="818.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.06%)</title><rect x="815.4" y="179.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="818.4" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="815.4" y="163.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="818.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (61 samples, 1.12%)</title><rect x="816.1" y="179.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="819.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (60 samples, 1.10%)</title><rect x="816.3" y="163.0" width="13.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="819.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.18%)</title><rect x="816.5" y="147.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="819.5" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.17%)</title><rect x="816.7" y="131.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="819.7" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.13%)</title><rect x="817.1" y="115.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="820.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="817.1" y="99.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="820.1" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="817.1" y="83.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="820.1" y="94.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.09%)</title><rect x="817.6" y="99.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="820.6" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.09%)</title><rect x="817.6" y="83.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="820.6" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (49 samples, 0.90%)</title><rect x="818.7" y="147.0" width="10.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="821.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (49 samples, 0.90%)</title><rect x="818.7" y="131.0" width="10.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="821.7" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (49 samples, 0.90%)</title><rect x="818.7" y="115.0" width="10.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="821.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (49 samples, 0.90%)</title><rect x="818.7" y="99.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="821.7" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (49 samples, 0.90%)</title><rect x="818.7" y="83.0" width="10.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="821.7" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.09%)</title><rect x="829.5" y="403.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="832.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.09%)</title><rect x="829.5" y="387.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="832.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="829.7" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.7" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.04%)</title><rect x="830.2" y="371.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="833.2" y="382.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="830.6" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="833.6" y="526.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="830.6" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="833.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (442 samples, 8.13%)</title><rect x="833.0" y="819.0" width="95.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.0" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (442 samples, 8.13%)</title><rect x="833.0" y="803.0" width="95.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="836.0" y="814.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (442 samples, 8.13%)</title><rect x="833.0" y="787.0" width="95.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.0" y="798.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (274 samples, 5.04%)</title><rect x="833.2" y="771.0" width="59.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="836.2" y="782.0">Java_o..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (268 samples, 4.93%)</title><rect x="834.5" y="755.0" width="58.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="837.5" y="766.0">rocksd..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="834.7" y="739.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="837.7" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.04%)</title><rect x="834.9" y="723.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="837.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (264 samples, 4.86%)</title><rect x="835.4" y="739.0" width="57.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="838.4" y="750.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (263 samples, 4.84%)</title><rect x="835.6" y="723.0" width="57.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="838.6" y="734.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (261 samples, 4.80%)</title><rect x="835.6" y="707.0" width="56.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="838.6" y="718.0">rocksd..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (3 samples, 0.06%)</title><rect x="835.8" y="691.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="838.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (252 samples, 4.63%)</title><rect x="836.5" y="691.0" width="54.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="839.5" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (245 samples, 4.51%)</title><rect x="837.5" y="675.0" width="53.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="840.5" y="686.0">rocks..</text>
</g>
<g>
<title>__sched_yield (34 samples, 0.63%)</title><rect x="838.4" y="659.0" width="7.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="841.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.59%)</title><rect x="838.8" y="643.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="841.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.06%)</title><rect x="838.8" y="627.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.8" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.53%)</title><rect x="839.5" y="627.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="842.5" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (22 samples, 0.40%)</title><rect x="841.0" y="611.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="844.0" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (22 samples, 0.40%)</title><rect x="841.0" y="595.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="844.0" y="606.0"></text>
</g>
<g>
<title>schedule (22 samples, 0.40%)</title><rect x="841.0" y="579.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="844.0" y="590.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.39%)</title><rect x="841.2" y="563.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="844.2" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="845.4" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="848.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (22 samples, 0.40%)</title><rect x="846.0" y="659.0" width="4.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="849.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (22 samples, 0.40%)</title><rect x="846.0" y="643.0" width="4.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="849.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (22 samples, 0.40%)</title><rect x="846.0" y="627.0" width="4.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="849.0" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="846.2" y="611.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="849.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (17 samples, 0.31%)</title><rect x="846.9" y="611.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="849.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (17 samples, 0.31%)</title><rect x="846.9" y="595.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="849.9" y="606.0"></text>
</g>
<g>
<title>__write (16 samples, 0.29%)</title><rect x="847.1" y="579.0" width="3.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="850.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.28%)</title><rect x="847.3" y="563.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="850.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.28%)</title><rect x="847.3" y="547.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="850.3" y="558.0"></text>
</g>
<g>
<title>__x64_sys_write (15 samples, 0.28%)</title><rect x="847.3" y="531.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="850.3" y="542.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.28%)</title><rect x="847.3" y="515.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="850.3" y="526.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.28%)</title><rect x="847.3" y="499.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="850.3" y="510.0"></text>
</g>
<g>
<title>__vfs_write (14 samples, 0.26%)</title><rect x="847.5" y="483.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="850.5" y="494.0"></text>
</g>
<g>
<title>new_sync_write (14 samples, 0.26%)</title><rect x="847.5" y="467.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="850.5" y="478.0"></text>
</g>
<g>
<title>ext4_file_write_iter (14 samples, 0.26%)</title><rect x="847.5" y="451.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="850.5" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (14 samples, 0.26%)</title><rect x="847.5" y="435.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="850.5" y="446.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.04%)</title><rect x="847.7" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.7" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (11 samples, 0.20%)</title><rect x="848.2" y="419.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="851.2" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.04%)</title><rect x="848.2" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="851.2" y="414.0"></text>
</g>
<g>
<title>ext4_da_write_end (8 samples, 0.15%)</title><rect x="848.6" y="403.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="851.6" y="414.0"></text>
</g>
<g>
<title>generic_write_end (8 samples, 0.15%)</title><rect x="848.6" y="387.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="851.6" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (7 samples, 0.13%)</title><rect x="848.8" y="371.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="851.8" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (7 samples, 0.13%)</title><rect x="848.8" y="355.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="851.8" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (7 samples, 0.13%)</title><rect x="848.8" y="339.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="851.8" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (6 samples, 0.11%)</title><rect x="849.0" y="323.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="852.0" y="334.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="849.5" y="307.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="852.5" y="318.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (6 samples, 0.11%)</title><rect x="851.2" y="659.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="854.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.11%)</title><rect x="851.2" y="643.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="854.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.11%)</title><rect x="851.2" y="627.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="854.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.09%)</title><rect x="851.4" y="611.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="854.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 0.09%)</title><rect x="851.4" y="595.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="854.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.06%)</title><rect x="851.6" y="579.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="854.6" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.04%)</title><rect x="851.9" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="854.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (49 samples, 0.90%)</title><rect x="852.5" y="659.0" width="10.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="855.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (46 samples, 0.85%)</title><rect x="853.2" y="643.0" width="10.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="856.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (46 samples, 0.85%)</title><rect x="853.2" y="627.0" width="10.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="856.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (45 samples, 0.83%)</title><rect x="853.4" y="611.0" width="9.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="856.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.04%)</title><rect x="853.6" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="856.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (42 samples, 0.77%)</title><rect x="854.0" y="595.0" width="9.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="857.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (34 samples, 0.63%)</title><rect x="855.6" y="579.0" width="7.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="858.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (33 samples, 0.61%)</title><rect x="855.8" y="563.0" width="7.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="858.8" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (33 samples, 0.61%)</title><rect x="855.8" y="547.0" width="7.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="858.8" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (33 samples, 0.61%)</title><rect x="855.8" y="531.0" width="7.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="858.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (20 samples, 0.37%)</title><rect x="857.9" y="515.0" width="4.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="860.9" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="857.9" y="499.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="860.9" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.13%)</title><rect x="858.6" y="499.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="861.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.18%)</title><rect x="860.1" y="499.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="863.1" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="860.3" y="483.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="863.3" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.09%)</title><rect x="861.0" y="483.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="864.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.06%)</title><rect x="862.3" y="515.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="865.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (50 samples, 0.92%)</title><rect x="863.4" y="659.0" width="10.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="866.4" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="872.5" y="643.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="875.5" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="873.1" y="643.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="876.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (65 samples, 1.20%)</title><rect x="874.2" y="659.0" width="14.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="877.2" y="670.0"></text>
</g>
<g>
<title>__sched_yield (25 samples, 0.46%)</title><rect x="874.2" y="643.0" width="5.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="877.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.42%)</title><rect x="874.7" y="627.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="877.7" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.42%)</title><rect x="874.7" y="611.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="877.7" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (15 samples, 0.28%)</title><rect x="876.2" y="595.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.2" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (15 samples, 0.28%)</title><rect x="876.2" y="579.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="879.2" y="590.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.28%)</title><rect x="876.2" y="563.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="879.2" y="574.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.28%)</title><rect x="876.2" y="547.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="879.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (39 samples, 0.72%)</title><rect x="879.6" y="643.0" width="8.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="882.6" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="887.0" y="627.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="890.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="887.7" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="890.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="887.7" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="890.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="887.7" y="595.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="890.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="888.3" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="891.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (3 samples, 0.06%)</title><rect x="888.8" y="659.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="891.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.04%)</title><rect x="889.0" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="892.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="889.4" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="892.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.04%)</title><rect x="889.4" y="643.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="892.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (3 samples, 0.06%)</title><rect x="889.8" y="659.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="892.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.06%)</title><rect x="891.1" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="894.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="892.2" y="707.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="895.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.77%)</title><rect x="892.7" y="771.0" width="9.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="895.7" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="892.7" y="755.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="895.7" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (33 samples, 0.61%)</title><rect x="893.5" y="755.0" width="7.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="896.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.57%)</title><rect x="894.0" y="739.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="897.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.57%)</title><rect x="894.0" y="723.0" width="6.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="897.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.57%)</title><rect x="894.0" y="707.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="897.0" y="718.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.57%)</title><rect x="894.0" y="691.0" width="6.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="897.0" y="702.0"></text>
</g>
<g>
<title>futex_wait (31 samples, 0.57%)</title><rect x="894.0" y="675.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="897.0" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (28 samples, 0.51%)</title><rect x="894.0" y="659.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="897.0" y="670.0"></text>
</g>
<g>
<title>schedule (27 samples, 0.50%)</title><rect x="894.2" y="643.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="897.2" y="654.0"></text>
</g>
<g>
<title>__schedule (26 samples, 0.48%)</title><rect x="894.4" y="627.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="897.4" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (26 samples, 0.48%)</title><rect x="894.4" y="611.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="897.4" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="900.0" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="903.0" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="900.7" y="755.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="903.7" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.04%)</title><rect x="901.8" y="771.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="904.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (115 samples, 2.12%)</title><rect x="902.2" y="771.0" width="25.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="905.2" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (114 samples, 2.10%)</title><rect x="902.4" y="755.0" width="24.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.4" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (114 samples, 2.10%)</title><rect x="902.4" y="739.0" width="24.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.4" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (113 samples, 2.08%)</title><rect x="902.7" y="723.0" width="24.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.7" y="734.0">_..</text>
</g>
<g>
<title>do_futex (113 samples, 2.08%)</title><rect x="902.7" y="707.0" width="24.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="905.7" y="718.0">d..</text>
</g>
<g>
<title>futex_wake (111 samples, 2.04%)</title><rect x="902.9" y="691.0" width="24.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="905.9" y="702.0">f..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.04%)</title><rect x="903.7" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="906.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (105 samples, 1.93%)</title><rect x="904.2" y="675.0" width="22.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="907.2" y="686.0">w..</text>
</g>
<g>
<title>try_to_wake_up (105 samples, 1.93%)</title><rect x="904.2" y="659.0" width="22.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="907.2" y="670.0">t..</text>
</g>
<g>
<title>__lock_text_start (105 samples, 1.93%)</title><rect x="904.2" y="643.0" width="22.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="907.2" y="654.0">_..</text>
</g>
<g>
<title>clock_gettime (7 samples, 0.13%)</title><rect x="927.2" y="771.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="930.2" y="782.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.11%)</title><rect x="927.4" y="755.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="930.4" y="766.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.11%)</title><rect x="927.4" y="739.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="930.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.06%)</title><rect x="928.9" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="928.9" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="931.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="928.9" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="929.1" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.17%)</title><rect x="929.6" y="883.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.15%)</title><rect x="929.8" y="867.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="932.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.06%)</title><rect x="929.8" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="930.0" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="930.0" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.09%)</title><rect x="930.4" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.09%)</title><rect x="930.4" y="835.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.09%)</title><rect x="930.4" y="819.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.07%)</title><rect x="930.6" y="803.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.07%)</title><rect x="930.6" y="787.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.6" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.07%)</title><rect x="930.6" y="771.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="933.6" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="930.6" y="755.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="933.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="930.6" y="739.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="933.6" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="930.6" y="723.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="933.6" y="734.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="930.6" y="707.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="933.6" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="930.6" y="691.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="933.6" y="702.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.06%)</title><rect x="930.9" y="675.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="933.9" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="930.9" y="659.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="933.9" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.06%)</title><rect x="930.9" y="643.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.9" y="654.0"></text>
</g>
<g>
<title>[async_worker-6 tid=44756] (583 samples, 10.72%)</title><rect x="931.5" y="947.0" width="126.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="934.5" y="958.0">[async_worker-6 ..</text>
</g>
<g>
<title>java/lang/Thread.run (583 samples, 10.72%)</title><rect x="931.5" y="931.0" width="126.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.5" y="942.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (583 samples, 10.72%)</title><rect x="931.5" y="915.0" width="126.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.5" y="926.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (583 samples, 10.72%)</title><rect x="931.5" y="899.0" width="126.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.5" y="910.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (570 samples, 10.48%)</title><rect x="931.5" y="883.0" width="123.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.5" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (570 samples, 10.48%)</title><rect x="931.5" y="867.0" width="123.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.5" y="878.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (570 samples, 10.48%)</title><rect x="931.5" y="851.0" width="123.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="934.5" y="862.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (570 samples, 10.48%)</title><rect x="931.5" y="835.0" width="123.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.5" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (142 samples, 2.61%)</title><rect x="931.7" y="819.0" width="30.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.7" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (140 samples, 2.57%)</title><rect x="932.2" y="803.0" width="30.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="935.2" y="814.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (139 samples, 2.56%)</title><rect x="932.4" y="787.0" width="30.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.4" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (139 samples, 2.56%)</title><rect x="932.4" y="771.0" width="30.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.4" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (138 samples, 2.54%)</title><rect x="932.6" y="755.0" width="30.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.6" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (137 samples, 2.52%)</title><rect x="932.8" y="739.0" width="29.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.8" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.11%)</title><rect x="933.5" y="723.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="936.5" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="934.1" y="707.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="937.1" y="718.0"></text>
</g>
<g>
<title>send (128 samples, 2.35%)</title><rect x="934.8" y="723.0" width="27.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="937.8" y="734.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (127 samples, 2.34%)</title><rect x="935.0" y="707.0" width="27.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="938.0" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (127 samples, 2.34%)</title><rect x="935.0" y="691.0" width="27.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="938.0" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (125 samples, 2.30%)</title><rect x="935.2" y="675.0" width="27.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="938.2" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (125 samples, 2.30%)</title><rect x="935.2" y="659.0" width="27.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="938.2" y="670.0">_..</text>
</g>
<g>
<title>sock_sendmsg (124 samples, 2.28%)</title><rect x="935.2" y="643.0" width="26.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="938.2" y="654.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (123 samples, 2.26%)</title><rect x="935.4" y="627.0" width="26.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="938.4" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (123 samples, 2.26%)</title><rect x="935.4" y="611.0" width="26.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.4" y="622.0">t..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="935.6" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="938.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (119 samples, 2.19%)</title><rect x="936.3" y="595.0" width="25.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="939.3" y="606.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.18%)</title><rect x="936.7" y="579.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="939.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.18%)</title><rect x="936.7" y="563.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="939.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.06%)</title><rect x="936.7" y="547.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="939.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.06%)</title><rect x="936.7" y="531.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="939.7" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.09%)</title><rect x="937.4" y="547.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="940.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (106 samples, 1.95%)</title><rect x="939.1" y="579.0" width="23.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="942.1" y="590.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (106 samples, 1.95%)</title><rect x="939.1" y="563.0" width="23.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="942.1" y="574.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (106 samples, 1.95%)</title><rect x="939.1" y="547.0" width="23.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="942.1" y="558.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (102 samples, 1.88%)</title><rect x="939.5" y="531.0" width="22.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.5" y="542.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (100 samples, 1.84%)</title><rect x="940.0" y="515.0" width="21.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="943.0" y="526.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (100 samples, 1.84%)</title><rect x="940.0" y="499.0" width="21.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="943.0" y="510.0">_..</text>
</g>
<g>
<title>ip_local_out (100 samples, 1.84%)</title><rect x="940.0" y="483.0" width="21.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="943.0" y="494.0">i..</text>
</g>
<g>
<title>ip_output (100 samples, 1.84%)</title><rect x="940.0" y="467.0" width="21.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="943.0" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (99 samples, 1.82%)</title><rect x="940.2" y="451.0" width="21.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="943.2" y="462.0">i..</text>
</g>
<g>
<title>__ip_finish_output (98 samples, 1.80%)</title><rect x="940.4" y="435.0" width="21.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="943.4" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (97 samples, 1.78%)</title><rect x="940.6" y="419.0" width="21.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="943.6" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (91 samples, 1.67%)</title><rect x="940.8" y="403.0" width="19.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="943.8" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (91 samples, 1.67%)</title><rect x="940.8" y="387.0" width="19.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="943.8" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (91 samples, 1.67%)</title><rect x="940.8" y="371.0" width="19.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="943.8" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (91 samples, 1.67%)</title><rect x="940.8" y="355.0" width="19.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="943.8" y="366.0"></text>
</g>
<g>
<title>net_rx_action (91 samples, 1.67%)</title><rect x="940.8" y="339.0" width="19.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="943.8" y="350.0"></text>
</g>
<g>
<title>process_backlog (91 samples, 1.67%)</title><rect x="940.8" y="323.0" width="19.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="943.8" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (89 samples, 1.64%)</title><rect x="941.3" y="307.0" width="19.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="944.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (89 samples, 1.64%)</title><rect x="941.3" y="291.0" width="19.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="944.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (89 samples, 1.64%)</title><rect x="941.3" y="275.0" width="19.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="944.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (88 samples, 1.62%)</title><rect x="941.5" y="259.0" width="19.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="944.5" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (88 samples, 1.62%)</title><rect x="941.5" y="243.0" width="19.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="944.5" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (88 samples, 1.62%)</title><rect x="941.5" y="227.0" width="19.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="944.5" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (88 samples, 1.62%)</title><rect x="941.5" y="211.0" width="19.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="944.5" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (88 samples, 1.62%)</title><rect x="941.5" y="195.0" width="19.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="944.5" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.09%)</title><rect x="941.7" y="179.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (80 samples, 1.47%)</title><rect x="943.2" y="179.0" width="17.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="946.2" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="943.2" y="163.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="946.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (77 samples, 1.42%)</title><rect x="943.9" y="163.0" width="16.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="946.9" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.04%)</title><rect x="944.3" y="147.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="947.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="944.3" y="131.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="947.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="944.3" y="115.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="947.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="944.3" y="99.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="947.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="944.3" y="83.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="947.3" y="94.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.22%)</title><rect x="945.0" y="147.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="948.0" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.11%)</title><rect x="946.3" y="131.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="949.3" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.06%)</title><rect x="946.5" y="115.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="949.5" y="126.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="946.5" y="99.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="949.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="946.5" y="83.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="949.5" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.04%)</title><rect x="947.1" y="115.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="950.1" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (57 samples, 1.05%)</title><rect x="947.6" y="147.0" width="12.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="950.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (57 samples, 1.05%)</title><rect x="947.6" y="131.0" width="12.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="950.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (56 samples, 1.03%)</title><rect x="947.8" y="115.0" width="12.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="950.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (56 samples, 1.03%)</title><rect x="947.8" y="99.0" width="12.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="950.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (56 samples, 1.03%)</title><rect x="947.8" y="83.0" width="12.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="950.8" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.09%)</title><rect x="960.6" y="403.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="963.6" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.09%)</title><rect x="960.6" y="387.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="963.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.07%)</title><rect x="960.8" y="371.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="963.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (427 samples, 7.85%)</title><rect x="962.6" y="819.0" width="92.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.6" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (427 samples, 7.85%)</title><rect x="962.6" y="803.0" width="92.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.6" y="814.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (424 samples, 7.80%)</title><rect x="963.2" y="787.0" width="92.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.2" y="798.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (246 samples, 4.52%)</title><rect x="964.1" y="771.0" width="53.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="967.1" y="782.0">Java_..</text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.04%)</title><rect x="964.5" y="755.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="967.5" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (241 samples, 4.43%)</title><rect x="965.2" y="755.0" width="52.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="968.2" y="766.0">rocks..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="965.4" y="739.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="968.4" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.04%)</title><rect x="965.4" y="723.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="968.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (237 samples, 4.36%)</title><rect x="965.8" y="739.0" width="51.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="968.8" y="750.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (235 samples, 4.32%)</title><rect x="966.2" y="723.0" width="51.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="969.2" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (233 samples, 4.29%)</title><rect x="966.2" y="707.0" width="50.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="969.2" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (225 samples, 4.14%)</title><rect x="966.2" y="691.0" width="48.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="969.2" y="702.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (222 samples, 4.08%)</title><rect x="966.7" y="675.0" width="48.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="969.7" y="686.0">rock..</text>
</g>
<g>
<title>__sched_yield (32 samples, 0.59%)</title><rect x="967.8" y="659.0" width="6.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="970.8" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.50%)</title><rect x="968.8" y="643.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="971.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.48%)</title><rect x="969.1" y="627.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="972.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (18 samples, 0.33%)</title><rect x="970.8" y="611.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="973.8" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (18 samples, 0.33%)</title><rect x="970.8" y="595.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="973.8" y="606.0"></text>
</g>
<g>
<title>schedule (18 samples, 0.33%)</title><rect x="970.8" y="579.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="973.8" y="590.0"></text>
</g>
<g>
<title>__schedule (18 samples, 0.33%)</title><rect x="970.8" y="563.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="973.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (16 samples, 0.29%)</title><rect x="975.6" y="659.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="978.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (16 samples, 0.29%)</title><rect x="975.6" y="643.0" width="3.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="978.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (16 samples, 0.29%)</title><rect x="975.6" y="627.0" width="3.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="978.6" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (2 samples, 0.04%)</title><rect x="975.6" y="611.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="978.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (11 samples, 0.20%)</title><rect x="976.2" y="611.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="979.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (11 samples, 0.20%)</title><rect x="976.2" y="595.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="979.2" y="606.0"></text>
</g>
<g>
<title>__write (11 samples, 0.20%)</title><rect x="976.2" y="579.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="979.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.20%)</title><rect x="976.2" y="563.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="979.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.20%)</title><rect x="976.2" y="547.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="979.2" y="558.0"></text>
</g>
<g>
<title>__x64_sys_write (11 samples, 0.20%)</title><rect x="976.2" y="531.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="979.2" y="542.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 0.20%)</title><rect x="976.2" y="515.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="979.2" y="526.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.20%)</title><rect x="976.2" y="499.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="979.2" y="510.0"></text>
</g>
<g>
<title>__vfs_write (9 samples, 0.17%)</title><rect x="976.4" y="483.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="979.4" y="494.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.17%)</title><rect x="976.4" y="467.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="979.4" y="478.0"></text>
</g>
<g>
<title>ext4_file_write_iter (9 samples, 0.17%)</title><rect x="976.4" y="451.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="979.4" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (8 samples, 0.15%)</title><rect x="976.4" y="435.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="979.4" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (8 samples, 0.15%)</title><rect x="976.4" y="419.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="979.4" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.04%)</title><rect x="976.7" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="979.7" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.04%)</title><rect x="976.7" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="979.7" y="398.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.04%)</title><rect x="976.7" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="979.7" y="382.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="976.7" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="979.7" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_end (5 samples, 0.09%)</title><rect x="977.1" y="403.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="980.1" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.04%)</title><rect x="977.1" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="980.1" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.04%)</title><rect x="977.1" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="980.1" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="977.1" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.1" y="366.0"></text>
</g>
<g>
<title>generic_write_end (3 samples, 0.06%)</title><rect x="977.5" y="387.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="980.5" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.06%)</title><rect x="977.5" y="371.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="980.5" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.06%)</title><rect x="977.5" y="355.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="980.5" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.06%)</title><rect x="977.5" y="339.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.5" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.06%)</title><rect x="977.5" y="323.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.5" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.06%)</title><rect x="977.5" y="307.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="980.5" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.06%)</title><rect x="977.5" y="291.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="980.5" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (2 samples, 0.04%)</title><rect x="977.7" y="275.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="980.7" y="286.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="978.6" y="611.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="981.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.07%)</title><rect x="979.0" y="659.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="982.0" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="979.0" y="643.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="982.0" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="979.5" y="643.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="982.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.04%)</title><rect x="979.9" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="982.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (47 samples, 0.86%)</title><rect x="980.3" y="659.0" width="10.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="983.3" y="670.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.04%)</title><rect x="980.6" y="643.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="983.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (43 samples, 0.79%)</title><rect x="981.2" y="643.0" width="9.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="984.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (41 samples, 0.75%)</title><rect x="981.6" y="627.0" width="8.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="984.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (39 samples, 0.72%)</title><rect x="981.9" y="611.0" width="8.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="984.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (35 samples, 0.64%)</title><rect x="982.3" y="595.0" width="7.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="985.3" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="982.5" y="579.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="985.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (28 samples, 0.51%)</title><rect x="983.4" y="579.0" width="6.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="986.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (25 samples, 0.46%)</title><rect x="983.8" y="563.0" width="5.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="986.8" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (25 samples, 0.46%)</title><rect x="983.8" y="547.0" width="5.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="986.8" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (24 samples, 0.44%)</title><rect x="983.8" y="531.0" width="5.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="986.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (11 samples, 0.20%)</title><rect x="985.3" y="515.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="988.3" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.07%)</title><rect x="985.6" y="499.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="988.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.11%)</title><rect x="986.4" y="499.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="989.4" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.06%)</title><rect x="986.6" y="483.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="989.6" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="987.3" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="990.3" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="987.3" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.3" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="987.3" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="990.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.06%)</title><rect x="987.7" y="515.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="990.7" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="988.4" y="515.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="991.4" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="988.4" y="499.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="991.4" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="988.4" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="991.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (50 samples, 0.92%)</title><rect x="990.5" y="659.0" width="10.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="993.5" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="1001.0" y="643.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1004.0" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="1001.0" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1004.0" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="1001.0" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1004.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (56 samples, 1.03%)</title><rect x="1001.4" y="659.0" width="12.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1004.4" y="670.0"></text>
</g>
<g>
<title>__sched_yield (21 samples, 0.39%)</title><rect x="1001.4" y="643.0" width="4.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1004.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.33%)</title><rect x="1002.1" y="627.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1005.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.33%)</title><rect x="1002.1" y="611.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1005.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (13 samples, 0.24%)</title><rect x="1003.1" y="595.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1006.1" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (13 samples, 0.24%)</title><rect x="1003.1" y="579.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1006.1" y="590.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.24%)</title><rect x="1003.1" y="563.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1006.1" y="574.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.24%)</title><rect x="1003.1" y="547.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1006.1" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="1005.5" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1008.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (33 samples, 0.61%)</title><rect x="1006.0" y="643.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.0" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="1012.3" y="627.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1015.3" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="1012.3" y="611.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1015.3" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="1012.3" y="595.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1015.3" y="606.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.04%)</title><rect x="1013.1" y="643.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1016.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (3 samples, 0.06%)</title><rect x="1013.8" y="659.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1016.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.04%)</title><rect x="1014.0" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1017.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.09%)</title><rect x="1015.1" y="691.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1018.1" y="702.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.06%)</title><rect x="1015.5" y="675.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1018.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.97%)</title><rect x="1017.5" y="771.0" width="11.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1020.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (48 samples, 0.88%)</title><rect x="1017.7" y="755.0" width="10.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1020.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.83%)</title><rect x="1018.3" y="739.0" width="9.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1021.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.83%)</title><rect x="1018.3" y="723.0" width="9.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1021.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (44 samples, 0.81%)</title><rect x="1018.5" y="707.0" width="9.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1021.5" y="718.0"></text>
</g>
<g>
<title>do_futex (44 samples, 0.81%)</title><rect x="1018.5" y="691.0" width="9.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1021.5" y="702.0"></text>
</g>
<g>
<title>futex_wait (44 samples, 0.81%)</title><rect x="1018.5" y="675.0" width="9.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1021.5" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (41 samples, 0.75%)</title><rect x="1018.5" y="659.0" width="8.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1021.5" y="670.0"></text>
</g>
<g>
<title>schedule (41 samples, 0.75%)</title><rect x="1018.5" y="643.0" width="8.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1021.5" y="654.0"></text>
</g>
<g>
<title>__schedule (41 samples, 0.75%)</title><rect x="1018.5" y="627.0" width="8.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1021.5" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (38 samples, 0.70%)</title><rect x="1019.2" y="611.0" width="8.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1022.2" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.06%)</title><rect x="1027.4" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1030.4" y="670.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="1027.4" y="643.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1030.4" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.04%)</title><rect x="1028.5" y="755.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1031.5" y="766.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="1028.5" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1031.5" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.04%)</title><rect x="1029.0" y="771.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1032.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (100 samples, 1.84%)</title><rect x="1029.4" y="771.0" width="21.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1032.4" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 1.84%)</title><rect x="1029.4" y="755.0" width="21.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1032.4" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (100 samples, 1.84%)</title><rect x="1029.4" y="739.0" width="21.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1032.4" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (100 samples, 1.84%)</title><rect x="1029.4" y="723.0" width="21.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1032.4" y="734.0">_..</text>
</g>
<g>
<title>do_futex (100 samples, 1.84%)</title><rect x="1029.4" y="707.0" width="21.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1032.4" y="718.0">d..</text>
</g>
<g>
<title>futex_wake (100 samples, 1.84%)</title><rect x="1029.4" y="691.0" width="21.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1032.4" y="702.0">f..</text>
</g>
<g>
<title>wake_up_q (96 samples, 1.77%)</title><rect x="1030.3" y="675.0" width="20.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1033.3" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (96 samples, 1.77%)</title><rect x="1030.3" y="659.0" width="20.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1033.3" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (96 samples, 1.77%)</title><rect x="1030.3" y="643.0" width="20.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1033.3" y="654.0"></text>
</g>
<g>
<title>clock_gettime (18 samples, 0.33%)</title><rect x="1051.1" y="771.0" width="3.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1054.1" y="782.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.18%)</title><rect x="1052.8" y="755.0" width="2.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1055.8" y="766.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.18%)</title><rect x="1052.8" y="739.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1055.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (6 samples, 0.11%)</title><rect x="1055.2" y="883.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.11%)</title><rect x="1055.2" y="867.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.11%)</title><rect x="1055.2" y="851.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.13%)</title><rect x="1056.5" y="883.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.13%)</title><rect x="1056.5" y="867.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.06%)</title><rect x="1056.5" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1059.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="1056.7" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="1056.7" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1056.7" y="803.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1059.7" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="1056.7" y="787.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1059.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1056.7" y="771.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1059.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1056.7" y="755.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1059.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="1056.7" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1059.7" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="1056.7" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1059.7" y="734.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="1056.7" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1059.7" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="1056.7" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1059.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.07%)</title><rect x="1057.2" y="851.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.07%)</title><rect x="1057.2" y="835.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.07%)</title><rect x="1057.2" y="819.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="1057.6" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="1057.6" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.6" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="1057.6" y="771.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1060.6" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1057.6" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1060.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1057.6" y="739.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1060.6" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="1057.6" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1060.6" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="1057.6" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1060.6" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="1057.6" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1060.6" y="702.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="1057.6" y="675.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1060.6" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="1057.6" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1060.6" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="1057.6" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1060.6" y="654.0"></text>
</g>
<g>
<title>[async_worker-7 tid=44757] (584 samples, 10.74%)</title><rect x="1058.0" y="947.0" width="126.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1061.0" y="958.0">[async_worker-7 ..</text>
</g>
<g>
<title>java/lang/Thread.run (584 samples, 10.74%)</title><rect x="1058.0" y="931.0" width="126.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.0" y="942.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (584 samples, 10.74%)</title><rect x="1058.0" y="915.0" width="126.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1061.0" y="926.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (584 samples, 10.74%)</title><rect x="1058.0" y="899.0" width="126.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.0" y="910.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (577 samples, 10.61%)</title><rect x="1058.0" y="883.0" width="125.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.0" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (577 samples, 10.61%)</title><rect x="1058.0" y="867.0" width="125.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.0" y="878.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (576 samples, 10.59%)</title><rect x="1058.3" y="851.0" width="125.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.3" y="862.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (576 samples, 10.59%)</title><rect x="1058.3" y="835.0" width="125.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.3" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (152 samples, 2.80%)</title><rect x="1059.1" y="819.0" width="33.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.1" y="830.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="1059.8" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="1059.8" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="1059.8" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (144 samples, 2.65%)</title><rect x="1060.6" y="803.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.6" y="814.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (143 samples, 2.63%)</title><rect x="1060.9" y="787.0" width="31.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.9" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (143 samples, 2.63%)</title><rect x="1060.9" y="771.0" width="31.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.9" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (142 samples, 2.61%)</title><rect x="1061.1" y="755.0" width="30.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.1" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (142 samples, 2.61%)</title><rect x="1061.1" y="739.0" width="30.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.1" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.09%)</title><rect x="1061.3" y="723.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1064.3" y="734.0"></text>
</g>
<g>
<title>send (135 samples, 2.48%)</title><rect x="1062.6" y="723.0" width="29.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1065.6" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (135 samples, 2.48%)</title><rect x="1062.6" y="707.0" width="29.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1065.6" y="718.0">en..</text>
</g>
<g>
<title>do_syscall_64 (135 samples, 2.48%)</title><rect x="1062.6" y="691.0" width="29.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1065.6" y="702.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (134 samples, 2.46%)</title><rect x="1062.8" y="675.0" width="29.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1065.8" y="686.0">__..</text>
</g>
<g>
<title>__sys_sendto (134 samples, 2.46%)</title><rect x="1062.8" y="659.0" width="29.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1065.8" y="670.0">__..</text>
</g>
<g>
<title>sock_sendmsg (132 samples, 2.43%)</title><rect x="1062.8" y="643.0" width="28.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1065.8" y="654.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (132 samples, 2.43%)</title><rect x="1062.8" y="627.0" width="28.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1065.8" y="638.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (132 samples, 2.43%)</title><rect x="1062.8" y="611.0" width="28.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1065.8" y="622.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (129 samples, 2.37%)</title><rect x="1063.5" y="595.0" width="28.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1066.5" y="606.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.20%)</title><rect x="1064.3" y="579.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1067.3" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.18%)</title><rect x="1064.3" y="563.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1067.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.11%)</title><rect x="1064.6" y="547.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1067.6" y="558.0"></text>
</g>
<g>
<title>memset (4 samples, 0.07%)</title><rect x="1065.0" y="531.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1068.0" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="1066.1" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1069.1" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.04%)</title><rect x="1066.1" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1069.1" y="542.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="1066.7" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1069.7" y="590.0"></text>
</g>
<g>
<title>tcp_push (111 samples, 2.04%)</title><rect x="1067.2" y="579.0" width="24.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1070.2" y="590.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (110 samples, 2.02%)</title><rect x="1067.2" y="563.0" width="23.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1070.2" y="574.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (110 samples, 2.02%)</title><rect x="1067.2" y="547.0" width="23.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.2" y="558.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (104 samples, 1.91%)</title><rect x="1067.4" y="531.0" width="22.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1070.4" y="542.0">_..</text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="1067.6" y="515.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1070.6" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (100 samples, 1.84%)</title><rect x="1068.0" y="515.0" width="21.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1071.0" y="526.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (99 samples, 1.82%)</title><rect x="1068.0" y="499.0" width="21.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.0" y="510.0">_..</text>
</g>
<g>
<title>ip_local_out (99 samples, 1.82%)</title><rect x="1068.0" y="483.0" width="21.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1071.0" y="494.0">i..</text>
</g>
<g>
<title>ip_output (98 samples, 1.80%)</title><rect x="1068.2" y="467.0" width="21.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1071.2" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (97 samples, 1.78%)</title><rect x="1068.5" y="451.0" width="21.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1071.5" y="462.0">i..</text>
</g>
<g>
<title>__ip_finish_output (97 samples, 1.78%)</title><rect x="1068.5" y="435.0" width="21.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1071.5" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (97 samples, 1.78%)</title><rect x="1068.5" y="419.0" width="21.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1071.5" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (90 samples, 1.66%)</title><rect x="1068.9" y="403.0" width="19.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1071.9" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (88 samples, 1.62%)</title><rect x="1069.3" y="387.0" width="19.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1072.3" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (88 samples, 1.62%)</title><rect x="1069.3" y="371.0" width="19.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1072.3" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (88 samples, 1.62%)</title><rect x="1069.3" y="355.0" width="19.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1072.3" y="366.0"></text>
</g>
<g>
<title>net_rx_action (84 samples, 1.54%)</title><rect x="1070.2" y="339.0" width="18.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1073.2" y="350.0"></text>
</g>
<g>
<title>process_backlog (83 samples, 1.53%)</title><rect x="1070.4" y="323.0" width="18.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1073.4" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (83 samples, 1.53%)</title><rect x="1070.4" y="307.0" width="18.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1073.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (83 samples, 1.53%)</title><rect x="1070.4" y="291.0" width="18.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1073.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv (81 samples, 1.49%)</title><rect x="1070.8" y="275.0" width="17.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1073.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (80 samples, 1.47%)</title><rect x="1071.1" y="259.0" width="17.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1074.1" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (80 samples, 1.47%)</title><rect x="1071.1" y="243.0" width="17.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1074.1" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (80 samples, 1.47%)</title><rect x="1071.1" y="227.0" width="17.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1074.1" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (80 samples, 1.47%)</title><rect x="1071.1" y="211.0" width="17.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1074.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (79 samples, 1.45%)</title><rect x="1071.3" y="195.0" width="17.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1074.3" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.09%)</title><rect x="1071.5" y="179.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.06%)</title><rect x="1072.6" y="179.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1075.6" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="1072.6" y="163.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1075.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (70 samples, 1.29%)</title><rect x="1073.2" y="179.0" width="15.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1076.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (69 samples, 1.27%)</title><rect x="1073.5" y="163.0" width="14.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1076.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.22%)</title><rect x="1074.1" y="147.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1077.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.17%)</title><rect x="1074.5" y="131.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1077.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.15%)</title><rect x="1074.5" y="115.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1077.5" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.06%)</title><rect x="1074.5" y="99.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1077.5" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="1074.8" y="83.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1077.8" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="1074.8" y="67.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1077.8" y="78.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.09%)</title><rect x="1075.2" y="99.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1078.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.07%)</title><rect x="1075.4" y="83.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1078.4" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (53 samples, 0.97%)</title><rect x="1076.7" y="147.0" width="11.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1079.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (53 samples, 0.97%)</title><rect x="1076.7" y="131.0" width="11.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1079.7" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (51 samples, 0.94%)</title><rect x="1077.1" y="115.0" width="11.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1080.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (51 samples, 0.94%)</title><rect x="1077.1" y="99.0" width="11.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1080.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (50 samples, 0.92%)</title><rect x="1077.1" y="83.0" width="10.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1080.1" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.09%)</title><rect x="1088.4" y="403.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1091.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.09%)</title><rect x="1088.4" y="387.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1091.4" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.06%)</title><rect x="1088.9" y="371.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1091.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="1089.1" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1092.1" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.06%)</title><rect x="1090.4" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1093.4" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="1091.5" y="643.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1094.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (420 samples, 7.72%)</title><rect x="1092.1" y="819.0" width="91.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.1" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (420 samples, 7.72%)</title><rect x="1092.1" y="803.0" width="91.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.1" y="814.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (418 samples, 7.69%)</title><rect x="1092.6" y="787.0" width="90.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.6" y="798.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (264 samples, 4.86%)</title><rect x="1092.8" y="771.0" width="57.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1095.8" y="782.0">Java_o..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (261 samples, 4.80%)</title><rect x="1093.4" y="755.0" width="56.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1096.4" y="766.0">rocksd..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="1093.4" y="739.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1096.4" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="1094.3" y="739.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1097.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (255 samples, 4.69%)</title><rect x="1094.7" y="739.0" width="55.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.7" y="750.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (254 samples, 4.67%)</title><rect x="1094.9" y="723.0" width="55.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1097.9" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (251 samples, 4.62%)</title><rect x="1094.9" y="707.0" width="54.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1097.9" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (238 samples, 4.38%)</title><rect x="1095.4" y="691.0" width="51.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1098.4" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (233 samples, 4.29%)</title><rect x="1095.8" y="675.0" width="50.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1098.8" y="686.0">rocks..</text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="1097.1" y="659.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1100.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1097.1" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1100.1" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1097.1" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1100.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="1097.1" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1100.1" y="622.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="1097.1" y="595.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1100.1" y="606.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="1097.1" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1100.1" y="590.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="1097.1" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1100.1" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="1097.1" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1100.1" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="1097.1" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1100.1" y="542.0"></text>
</g>
<g>
<title>__sched_yield (28 samples, 0.51%)</title><rect x="1097.5" y="659.0" width="6.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1100.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.46%)</title><rect x="1098.2" y="643.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1101.2" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.46%)</title><rect x="1098.2" y="627.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1101.2" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (19 samples, 0.35%)</title><rect x="1099.5" y="611.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1102.5" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (19 samples, 0.35%)</title><rect x="1099.5" y="595.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.5" y="606.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.35%)</title><rect x="1099.5" y="579.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1102.5" y="590.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.35%)</title><rect x="1099.5" y="563.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1102.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1103.6" y="659.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1106.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (21 samples, 0.39%)</title><rect x="1104.3" y="659.0" width="4.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1107.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (20 samples, 0.37%)</title><rect x="1104.5" y="643.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1107.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (20 samples, 0.37%)</title><rect x="1104.5" y="627.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1107.5" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="1104.7" y="611.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1107.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (15 samples, 0.28%)</title><rect x="1105.6" y="611.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1108.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (14 samples, 0.26%)</title><rect x="1105.8" y="595.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1108.8" y="606.0"></text>
</g>
<g>
<title>__write (13 samples, 0.24%)</title><rect x="1106.0" y="579.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1109.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.24%)</title><rect x="1106.0" y="563.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1109.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.24%)</title><rect x="1106.0" y="547.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1109.0" y="558.0"></text>
</g>
<g>
<title>__x64_sys_write (13 samples, 0.24%)</title><rect x="1106.0" y="531.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1109.0" y="542.0"></text>
</g>
<g>
<title>ksys_write (13 samples, 0.24%)</title><rect x="1106.0" y="515.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1109.0" y="526.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.20%)</title><rect x="1106.4" y="499.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1109.4" y="510.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.18%)</title><rect x="1106.4" y="483.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1109.4" y="494.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.18%)</title><rect x="1106.4" y="467.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1109.4" y="478.0"></text>
</g>
<g>
<title>ext4_file_write_iter (10 samples, 0.18%)</title><rect x="1106.4" y="451.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1109.4" y="462.0"></text>
</g>
<g>
<title>__generic_file_write_iter (10 samples, 0.18%)</title><rect x="1106.4" y="435.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1109.4" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (10 samples, 0.18%)</title><rect x="1106.4" y="419.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1109.4" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.06%)</title><rect x="1106.4" y="403.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1109.4" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.04%)</title><rect x="1106.7" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.7" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_end (7 samples, 0.13%)</title><rect x="1107.1" y="403.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1110.1" y="414.0"></text>
</g>
<g>
<title>generic_write_end (5 samples, 0.09%)</title><rect x="1107.5" y="387.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1110.5" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.07%)</title><rect x="1107.5" y="371.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1110.5" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.07%)</title><rect x="1107.5" y="355.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.5" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.06%)</title><rect x="1107.7" y="339.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1110.7" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.06%)</title><rect x="1107.7" y="323.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1110.7" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.06%)</title><rect x="1107.7" y="307.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1110.7" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.04%)</title><rect x="1108.0" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1111.0" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (2 samples, 0.04%)</title><rect x="1108.0" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1111.0" y="286.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (50 samples, 0.92%)</title><rect x="1109.5" y="659.0" width="10.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1112.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.04%)</title><rect x="1109.9" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1112.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (43 samples, 0.79%)</title><rect x="1110.3" y="643.0" width="9.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1113.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (41 samples, 0.75%)</title><rect x="1110.8" y="627.0" width="8.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1113.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (38 samples, 0.70%)</title><rect x="1111.0" y="611.0" width="8.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1114.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.04%)</title><rect x="1111.4" y="595.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1114.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (34 samples, 0.63%)</title><rect x="1111.9" y="595.0" width="7.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1114.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (29 samples, 0.53%)</title><rect x="1112.7" y="579.0" width="6.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (27 samples, 0.50%)</title><rect x="1113.2" y="563.0" width="5.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1116.2" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (27 samples, 0.50%)</title><rect x="1113.2" y="547.0" width="5.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1116.2" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (27 samples, 0.50%)</title><rect x="1113.2" y="531.0" width="5.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1116.2" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (17 samples, 0.31%)</title><rect x="1114.7" y="515.0" width="3.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1117.7" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="1114.7" y="499.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1117.7" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.13%)</title><rect x="1115.3" y="499.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1118.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.13%)</title><rect x="1116.9" y="499.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1119.9" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.04%)</title><rect x="1117.9" y="483.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1120.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="1118.4" y="515.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (2 samples, 0.04%)</title><rect x="1119.7" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1122.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (59 samples, 1.09%)</title><rect x="1120.3" y="659.0" width="12.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.3" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="1131.4" y="643.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1134.4" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="1131.8" y="643.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1134.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (49 samples, 0.90%)</title><rect x="1133.4" y="659.0" width="10.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1136.4" y="670.0"></text>
</g>
<g>
<title>__sched_yield (21 samples, 0.39%)</title><rect x="1133.4" y="643.0" width="4.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1136.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.33%)</title><rect x="1134.0" y="627.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1137.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.31%)</title><rect x="1134.2" y="611.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1137.2" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (16 samples, 0.29%)</title><rect x="1134.4" y="595.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1137.4" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (16 samples, 0.29%)</title><rect x="1134.4" y="579.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1137.4" y="590.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.29%)</title><rect x="1134.4" y="563.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1137.4" y="574.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.29%)</title><rect x="1134.4" y="547.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1137.4" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="1137.5" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (28 samples, 0.51%)</title><rect x="1137.9" y="643.0" width="6.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (4 samples, 0.07%)</title><rect x="1144.0" y="659.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (3 samples, 0.06%)</title><rect x="1144.2" y="643.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.2" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.06%)</title><rect x="1144.2" y="627.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1147.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.06%)</title><rect x="1144.9" y="659.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1147.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.06%)</title><rect x="1144.9" y="643.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1147.9" y="654.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.04%)</title><rect x="1145.9" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.04%)</title><rect x="1147.0" y="691.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.13%)</title><rect x="1147.5" y="691.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1150.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="1147.7" y="675.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.7" y="686.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.04%)</title><rect x="1149.0" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.81%)</title><rect x="1150.1" y="771.0" width="9.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1153.1" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (41 samples, 0.75%)</title><rect x="1150.5" y="755.0" width="8.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1153.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.74%)</title><rect x="1150.5" y="739.0" width="8.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.74%)</title><rect x="1150.5" y="723.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (37 samples, 0.68%)</title><rect x="1151.2" y="707.0" width="8.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1154.2" y="718.0"></text>
</g>
<g>
<title>do_futex (37 samples, 0.68%)</title><rect x="1151.2" y="691.0" width="8.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1154.2" y="702.0"></text>
</g>
<g>
<title>futex_wait (37 samples, 0.68%)</title><rect x="1151.2" y="675.0" width="8.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1154.2" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (35 samples, 0.64%)</title><rect x="1151.4" y="659.0" width="7.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1154.4" y="670.0"></text>
</g>
<g>
<title>schedule (34 samples, 0.63%)</title><rect x="1151.6" y="643.0" width="7.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1154.6" y="654.0"></text>
</g>
<g>
<title>__schedule (34 samples, 0.63%)</title><rect x="1151.6" y="627.0" width="7.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.6" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (32 samples, 0.59%)</title><rect x="1152.0" y="611.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1155.0" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (98 samples, 1.80%)</title><rect x="1159.8" y="771.0" width="21.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1162.8" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (98 samples, 1.80%)</title><rect x="1159.8" y="755.0" width="21.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1162.8" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (98 samples, 1.80%)</title><rect x="1159.8" y="739.0" width="21.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1162.8" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (98 samples, 1.80%)</title><rect x="1159.8" y="723.0" width="21.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.8" y="734.0">_..</text>
</g>
<g>
<title>do_futex (98 samples, 1.80%)</title><rect x="1159.8" y="707.0" width="21.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1162.8" y="718.0">d..</text>
</g>
<g>
<title>futex_wake (97 samples, 1.78%)</title><rect x="1159.8" y="691.0" width="21.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1162.8" y="702.0">f..</text>
</g>
<g>
<title>wake_up_q (94 samples, 1.73%)</title><rect x="1160.5" y="675.0" width="20.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.5" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (94 samples, 1.73%)</title><rect x="1160.5" y="659.0" width="20.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.5" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (94 samples, 1.73%)</title><rect x="1160.5" y="643.0" width="20.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1163.5" y="654.0"></text>
</g>
<g>
<title>clock_gettime (9 samples, 0.17%)</title><rect x="1181.1" y="771.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1184.1" y="782.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.15%)</title><rect x="1181.3" y="755.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1184.3" y="766.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.15%)</title><rect x="1181.3" y="739.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1184.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.04%)</title><rect x="1183.3" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1186.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="1183.3" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="1183.3" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.09%)</title><rect x="1183.7" y="883.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.09%)</title><rect x="1183.7" y="867.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="1183.9" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="1183.9" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.04%)</title><rect x="1183.9" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="1184.4" y="851.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="1184.4" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1187.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="1184.4" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="1184.4" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1187.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="1184.4" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="1184.4" y="771.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1187.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1184.4" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1187.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1184.4" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1187.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="1184.4" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.4" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="1184.4" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1187.4" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="1184.4" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1187.4" y="702.0"></text>
</g>
<g>
<title>[rocksdb:high0 tid=44715] (24 samples, 0.44%)</title><rect x="1184.8" y="947.0" width="5.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1187.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.44%)</title><rect x="1184.8" y="931.0" width="5.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1187.8" y="942.0"></text>
</g>
<g>
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)(void*), rocksdb::BGThreadMetadata*&gt; &gt; &gt;::~_State_impl() (23 samples, 0.42%)</title><rect x="1185.0" y="915.0" width="5.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.42%)</title><rect x="1185.0" y="899.0" width="5.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1188.0" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (23 samples, 0.42%)</title><rect x="1185.0" y="883.0" width="5.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1188.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (23 samples, 0.42%)</title><rect x="1185.0" y="867.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (23 samples, 0.42%)</title><rect x="1185.0" y="851.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (23 samples, 0.42%)</title><rect x="1185.0" y="835.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (23 samples, 0.42%)</title><rect x="1185.0" y="819.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, 8ul&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (23 samples, 0.42%)</title><rect x="1185.0" y="803.0" width="5.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (23 samples, 0.42%)</title><rect x="1185.0" y="787.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*) (23 samples, 0.42%)</title><rect x="1185.0" y="771.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::WriteLevel0Table() (23 samples, 0.42%)</title><rect x="1185.0" y="755.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::BuildTable(std::string const&amp;, rocksdb::Env*, rocksdb::FileSystem*, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&amp;, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_delete&lt;rocksdb::IntTblPropCollectorFactory&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_del (22 samples, 0.40%)</title><rect x="1185.0" y="739.0" width="4.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="1185.0" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::Next() (18 samples, 0.33%)</title><rect x="1185.4" y="723.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.4" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="1185.4" y="707.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1188.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (10 samples, 0.18%)</title><rect x="1186.1" y="707.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.1" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2365434197430348496.so (3 samples, 0.06%)</title><rect x="1186.7" y="691.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1189.7" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1187.6" y="691.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1190.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Valid() const (2 samples, 0.04%)</title><rect x="1188.5" y="707.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::key() const (2 samples, 0.04%)</title><rect x="1188.9" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.9" y="718.0"></text>
</g>
</g>
</svg>
