<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="293"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="293"> </text>
<g id="frames">
<g>
<title>all (11,842 samples, 100.00%)</title><rect x="10.0" y="259.0" width="1180.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="270.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=44734] (774 samples, 6.54%)</title><rect x="10.0" y="243.0" width="77.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="254.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (774 samples, 6.54%)</title><rect x="10.0" y="227.0" width="77.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="238.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/Session.process (774 samples, 6.54%)</title><rect x="10.0" y="211.0" width="77.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="222.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (774 samples, 6.54%)</title><rect x="10.0" y="195.0" width="77.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="206.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (774 samples, 6.54%)</title><rect x="10.0" y="179.0" width="77.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="190.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (187 samples, 1.58%)</title><rect x="10.0" y="163.0" width="18.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (187 samples, 1.58%)</title><rect x="10.0" y="147.0" width="18.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (135 samples, 1.14%)</title><rect x="10.0" y="131.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (46 samples, 0.39%)</title><rect x="10.0" y="115.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.39%)</title><rect x="10.0" y="99.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.39%)</title><rect x="10.0" y="83.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.18%)</title><rect x="10.0" y="67.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.21%)</title><rect x="12.1" y="67.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.1" y="78.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.21%)</title><rect x="12.1" y="51.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="15.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (89 samples, 0.75%)</title><rect x="14.6" y="115.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.38%)</title><rect x="14.6" y="99.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.6" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.38%)</title><rect x="14.6" y="83.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.get$Lambda (45 samples, 0.38%)</title><rect x="14.6" y="67.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$66 (45 samples, 0.38%)</title><rect x="14.6" y="51.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="17.6" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (44 samples, 0.37%)</title><rect x="19.1" y="99.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (43 samples, 0.36%)</title><rect x="19.1" y="83.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.1" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (23 samples, 0.19%)</title><rect x="19.1" y="67.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="22.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (20 samples, 0.17%)</title><rect x="21.4" y="67.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (20 samples, 0.17%)</title><rect x="21.4" y="51.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (20 samples, 0.17%)</title><rect x="21.4" y="35.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="24.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (52 samples, 0.44%)</title><rect x="23.5" y="131.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.44%)</title><rect x="23.5" y="115.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.44%)</title><rect x="23.5" y="99.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.20%)</title><rect x="23.5" y="83.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="26.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.24%)</title><rect x="25.8" y="83.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.8" y="94.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.24%)</title><rect x="25.8" y="67.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="28.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (247 samples, 2.09%)</title><rect x="28.6" y="163.0" width="24.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.6" y="174.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (32 samples, 0.27%)</title><rect x="28.6" y="147.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="31.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (80 samples, 0.68%)</title><rect x="31.8" y="147.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (80 samples, 0.68%)</title><rect x="31.8" y="131.0" width="8.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="34.8" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (135 samples, 1.14%)</title><rect x="39.8" y="147.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.8" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (135 samples, 1.14%)</title><rect x="39.8" y="131.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.8" y="142.0"></text>
</g>
<g>
<title>char[] (59 samples, 0.50%)</title><rect x="39.8" y="115.0" width="5.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="42.8" y="126.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.18%)</title><rect x="45.7" y="115.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="48.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (55 samples, 0.46%)</title><rect x="47.8" y="115.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (55 samples, 0.46%)</title><rect x="47.8" y="99.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (55 samples, 0.46%)</title><rect x="47.8" y="83.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.8" y="94.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.46%)</title><rect x="47.8" y="67.0" width="5.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="50.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (37 samples, 0.31%)</title><rect x="53.2" y="163.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.2" y="174.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.31%)</title><rect x="53.2" y="147.0" width="3.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="56.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (52 samples, 0.44%)</title><rect x="56.9" y="163.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.44%)</title><rect x="56.9" y="147.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.44%)</title><rect x="56.9" y="131.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.19%)</title><rect x="56.9" y="115.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="59.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.24%)</title><rect x="59.2" y="115.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.2" y="126.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.24%)</title><rect x="59.2" y="99.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="62.2" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (251 samples, 2.12%)</title><rect x="62.1" y="163.0" width="25.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.1" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (251 samples, 2.12%)</title><rect x="62.1" y="147.0" width="25.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.1" y="158.0">o..</text>
</g>
<g>
<title>char[] (101 samples, 0.85%)</title><rect x="62.1" y="131.0" width="10.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="65.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.43%)</title><rect x="72.2" y="131.0" width="5.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="75.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (99 samples, 0.84%)</title><rect x="77.3" y="131.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (99 samples, 0.84%)</title><rect x="77.3" y="115.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (99 samples, 0.84%)</title><rect x="77.3" y="99.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.3" y="110.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.84%)</title><rect x="77.3" y="83.0" width="9.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="80.3" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=44735] (772 samples, 6.52%)</title><rect x="87.1" y="243.0" width="77.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="90.1" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (772 samples, 6.52%)</title><rect x="87.1" y="227.0" width="77.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.1" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (40 samples, 0.34%)</title><rect x="87.1" y="211.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.1" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (40 samples, 0.34%)</title><rect x="87.1" y="195.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="90.1" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (732 samples, 6.18%)</title><rect x="91.1" y="211.0" width="73.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.1" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (732 samples, 6.18%)</title><rect x="91.1" y="195.0" width="73.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.1" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (732 samples, 6.18%)</title><rect x="91.1" y="179.0" width="73.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.1" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (198 samples, 1.67%)</title><rect x="91.1" y="163.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (198 samples, 1.67%)</title><rect x="91.1" y="147.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.1" y="158.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (144 samples, 1.22%)</title><rect x="91.1" y="131.0" width="14.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (58 samples, 0.49%)</title><rect x="91.1" y="115.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.49%)</title><rect x="91.1" y="99.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.49%)</title><rect x="91.1" y="83.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.1" y="94.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.14%)</title><rect x="91.1" y="67.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="94.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.35%)</title><rect x="92.7" y="67.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.7" y="78.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.35%)</title><rect x="92.7" y="51.0" width="4.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="95.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (86 samples, 0.73%)</title><rect x="96.9" y="115.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.27%)</title><rect x="96.9" y="99.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.9" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.27%)</title><rect x="96.9" y="83.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.get$Lambda (32 samples, 0.27%)</title><rect x="96.9" y="67.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$66 (32 samples, 0.27%)</title><rect x="96.9" y="51.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="99.9" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (54 samples, 0.46%)</title><rect x="100.1" y="99.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (54 samples, 0.46%)</title><rect x="100.1" y="83.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.1" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (33 samples, 0.28%)</title><rect x="100.1" y="67.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="103.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (21 samples, 0.18%)</title><rect x="103.4" y="67.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (21 samples, 0.18%)</title><rect x="103.4" y="51.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (21 samples, 0.18%)</title><rect x="103.4" y="35.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="106.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (54 samples, 0.46%)</title><rect x="105.5" y="131.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (54 samples, 0.46%)</title><rect x="105.5" y="115.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 0.46%)</title><rect x="105.5" y="99.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.21%)</title><rect x="105.5" y="83.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="108.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.24%)</title><rect x="108.0" y="83.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.0" y="94.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.24%)</title><rect x="108.0" y="67.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="111.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (230 samples, 1.94%)</title><rect x="110.8" y="163.0" width="23.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.8" y="174.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 0.32%)</title><rect x="110.8" y="147.0" width="3.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="113.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (69 samples, 0.58%)</title><rect x="114.6" y="147.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (69 samples, 0.58%)</title><rect x="114.6" y="131.0" width="6.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="117.6" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 1.04%)</title><rect x="121.5" y="147.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 1.04%)</title><rect x="121.5" y="131.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.5" y="142.0"></text>
</g>
<g>
<title>char[] (57 samples, 0.48%)</title><rect x="121.5" y="115.0" width="5.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="124.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.16%)</title><rect x="127.2" y="115.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="130.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (47 samples, 0.40%)</title><rect x="129.1" y="115.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (47 samples, 0.40%)</title><rect x="129.1" y="99.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (47 samples, 0.40%)</title><rect x="129.1" y="83.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.1" y="94.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.40%)</title><rect x="129.1" y="67.0" width="4.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="132.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (36 samples, 0.30%)</title><rect x="133.8" y="163.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.8" y="174.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.30%)</title><rect x="133.8" y="147.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (56 samples, 0.47%)</title><rect x="137.3" y="163.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (56 samples, 0.47%)</title><rect x="137.3" y="147.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 0.47%)</title><rect x="137.3" y="131.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.26%)</title><rect x="137.3" y="115.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="140.3" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.21%)</title><rect x="140.4" y="115.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.4" y="126.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.21%)</title><rect x="140.4" y="99.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="143.4" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (212 samples, 1.79%)</title><rect x="142.9" y="163.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.9" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (212 samples, 1.79%)</title><rect x="142.9" y="147.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.9" y="158.0">o..</text>
</g>
<g>
<title>char[] (97 samples, 0.82%)</title><rect x="142.9" y="131.0" width="9.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="145.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.33%)</title><rect x="152.6" y="131.0" width="3.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="155.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (76 samples, 0.64%)</title><rect x="156.5" y="131.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (76 samples, 0.64%)</title><rect x="156.5" y="115.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (76 samples, 0.64%)</title><rect x="156.5" y="99.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.5" y="110.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.64%)</title><rect x="156.5" y="83.0" width="7.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="159.5" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=44736] (746 samples, 6.30%)</title><rect x="164.1" y="243.0" width="74.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="167.1" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (746 samples, 6.30%)</title><rect x="164.1" y="227.0" width="74.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.1" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (37 samples, 0.31%)</title><rect x="164.1" y="211.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.1" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (37 samples, 0.31%)</title><rect x="164.1" y="195.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="167.1" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (709 samples, 5.99%)</title><rect x="167.7" y="211.0" width="70.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.7" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (709 samples, 5.99%)</title><rect x="167.7" y="195.0" width="70.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.7" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (709 samples, 5.99%)</title><rect x="167.7" y="179.0" width="70.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.7" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (185 samples, 1.56%)</title><rect x="167.7" y="163.0" width="18.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (185 samples, 1.56%)</title><rect x="167.7" y="147.0" width="18.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.7" y="158.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (139 samples, 1.17%)</title><rect x="167.7" y="131.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (62 samples, 0.52%)</title><rect x="167.7" y="115.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.52%)</title><rect x="167.7" y="99.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.52%)</title><rect x="167.7" y="83.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.7" y="94.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.20%)</title><rect x="167.7" y="67.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="170.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.32%)</title><rect x="170.1" y="67.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.1" y="78.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.32%)</title><rect x="170.1" y="51.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="173.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (77 samples, 0.65%)</title><rect x="173.9" y="115.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.21%)</title><rect x="173.9" y="99.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.9" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.21%)</title><rect x="173.9" y="83.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.get$Lambda (25 samples, 0.21%)</title><rect x="173.9" y="67.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$66 (25 samples, 0.21%)</title><rect x="173.9" y="51.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="176.9" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (52 samples, 0.44%)</title><rect x="176.4" y="99.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (51 samples, 0.43%)</title><rect x="176.4" y="83.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.4" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (25 samples, 0.21%)</title><rect x="176.4" y="67.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="179.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (26 samples, 0.22%)</title><rect x="178.9" y="67.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (26 samples, 0.22%)</title><rect x="178.9" y="51.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (26 samples, 0.22%)</title><rect x="178.9" y="35.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="181.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (46 samples, 0.39%)</title><rect x="181.6" y="131.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.39%)</title><rect x="181.6" y="115.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.39%)</title><rect x="181.6" y="99.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.14%)</title><rect x="181.6" y="83.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="184.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.24%)</title><rect x="183.3" y="83.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.3" y="94.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.24%)</title><rect x="183.3" y="67.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="186.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (221 samples, 1.87%)</title><rect x="186.2" y="163.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.2" y="174.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (28 samples, 0.24%)</title><rect x="186.2" y="147.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="189.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (74 samples, 0.62%)</title><rect x="189.0" y="147.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (74 samples, 0.62%)</title><rect x="189.0" y="131.0" width="7.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="192.0" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (119 samples, 1.00%)</title><rect x="196.3" y="147.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (119 samples, 1.00%)</title><rect x="196.3" y="131.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.3" y="142.0"></text>
</g>
<g>
<title>char[] (37 samples, 0.31%)</title><rect x="196.3" y="115.0" width="3.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="199.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.24%)</title><rect x="200.0" y="115.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="203.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.45%)</title><rect x="202.9" y="115.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.45%)</title><rect x="202.9" y="99.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (53 samples, 0.45%)</title><rect x="202.9" y="83.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.9" y="94.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.45%)</title><rect x="202.9" y="67.0" width="5.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="205.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (32 samples, 0.27%)</title><rect x="208.2" y="163.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.2" y="174.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.27%)</title><rect x="208.2" y="147.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="211.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (32 samples, 0.27%)</title><rect x="211.4" y="163.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.27%)</title><rect x="211.4" y="147.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.27%)</title><rect x="211.4" y="131.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.14%)</title><rect x="211.4" y="115.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="214.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.13%)</title><rect x="213.1" y="115.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.1" y="126.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.13%)</title><rect x="213.1" y="99.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="216.1" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (239 samples, 2.02%)</title><rect x="214.6" y="163.0" width="23.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.6" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (239 samples, 2.02%)</title><rect x="214.6" y="147.0" width="23.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.6" y="158.0">o..</text>
</g>
<g>
<title>char[] (114 samples, 0.96%)</title><rect x="214.6" y="131.0" width="11.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="217.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.38%)</title><rect x="225.9" y="131.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="228.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (80 samples, 0.68%)</title><rect x="230.4" y="131.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (80 samples, 0.68%)</title><rect x="230.4" y="115.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="233.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (80 samples, 0.68%)</title><rect x="230.4" y="99.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.4" y="110.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.68%)</title><rect x="230.4" y="83.0" width="8.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="233.4" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=44737] (766 samples, 6.47%)</title><rect x="238.4" y="243.0" width="76.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="241.4" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (766 samples, 6.47%)</title><rect x="238.4" y="227.0" width="76.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.4" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (766 samples, 6.47%)</title><rect x="238.4" y="211.0" width="76.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.4" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (766 samples, 6.47%)</title><rect x="238.4" y="195.0" width="76.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.4" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (766 samples, 6.47%)</title><rect x="238.4" y="179.0" width="76.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.4" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (204 samples, 1.72%)</title><rect x="238.4" y="163.0" width="20.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (204 samples, 1.72%)</title><rect x="238.4" y="147.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.4" y="158.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (156 samples, 1.32%)</title><rect x="238.4" y="131.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (63 samples, 0.53%)</title><rect x="238.4" y="115.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (63 samples, 0.53%)</title><rect x="238.4" y="99.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (63 samples, 0.53%)</title><rect x="238.4" y="83.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.19%)</title><rect x="238.4" y="67.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="241.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (40 samples, 0.34%)</title><rect x="240.7" y="67.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.7" y="78.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.34%)</title><rect x="240.7" y="51.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="243.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (93 samples, 0.79%)</title><rect x="244.7" y="115.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.35%)</title><rect x="244.7" y="99.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.35%)</title><rect x="244.7" y="83.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.get$Lambda (41 samples, 0.35%)</title><rect x="244.7" y="67.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$66 (41 samples, 0.35%)</title><rect x="244.7" y="51.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="247.7" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (52 samples, 0.44%)</title><rect x="248.8" y="99.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (52 samples, 0.44%)</title><rect x="248.8" y="83.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.8" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (32 samples, 0.27%)</title><rect x="248.8" y="67.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="251.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (20 samples, 0.17%)</title><rect x="251.9" y="67.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (20 samples, 0.17%)</title><rect x="251.9" y="51.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (20 samples, 0.17%)</title><rect x="251.9" y="35.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="254.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (48 samples, 0.41%)</title><rect x="253.9" y="131.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.41%)</title><rect x="253.9" y="115.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.41%)</title><rect x="253.9" y="99.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.17%)</title><rect x="253.9" y="83.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="256.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.24%)</title><rect x="255.9" y="83.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.9" y="94.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.24%)</title><rect x="255.9" y="67.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="258.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (246 samples, 2.08%)</title><rect x="258.7" y="163.0" width="24.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.7" y="174.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (47 samples, 0.40%)</title><rect x="258.7" y="147.0" width="4.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="261.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (83 samples, 0.70%)</title><rect x="263.4" y="147.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (83 samples, 0.70%)</title><rect x="263.4" y="131.0" width="8.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="266.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (116 samples, 0.98%)</title><rect x="271.7" y="147.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.7" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (116 samples, 0.98%)</title><rect x="271.7" y="131.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.7" y="142.0"></text>
</g>
<g>
<title>char[] (55 samples, 0.46%)</title><rect x="271.7" y="115.0" width="5.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="274.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.25%)</title><rect x="277.1" y="115.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="280.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.26%)</title><rect x="280.1" y="115.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.26%)</title><rect x="280.1" y="99.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.26%)</title><rect x="280.1" y="83.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.1" y="94.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.26%)</title><rect x="280.1" y="67.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="283.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (46 samples, 0.39%)</title><rect x="283.2" y="163.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.2" y="174.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.39%)</title><rect x="283.2" y="147.0" width="4.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="286.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (45 samples, 0.38%)</title><rect x="287.8" y="163.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 0.38%)</title><rect x="287.8" y="147.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.38%)</title><rect x="287.8" y="131.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.20%)</title><rect x="287.8" y="115.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="290.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.18%)</title><rect x="290.2" y="115.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.2" y="126.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.18%)</title><rect x="290.2" y="99.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="293.2" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (225 samples, 1.90%)</title><rect x="292.3" y="163.0" width="22.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.3" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (225 samples, 1.90%)</title><rect x="292.3" y="147.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.3" y="158.0">o..</text>
</g>
<g>
<title>char[] (95 samples, 0.80%)</title><rect x="292.3" y="131.0" width="9.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="295.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.44%)</title><rect x="301.8" y="131.0" width="5.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="304.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (78 samples, 0.66%)</title><rect x="306.9" y="131.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (78 samples, 0.66%)</title><rect x="306.9" y="115.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (78 samples, 0.66%)</title><rect x="306.9" y="99.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.9" y="110.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.66%)</title><rect x="306.9" y="83.0" width="7.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="309.9" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=44738] (758 samples, 6.40%)</title><rect x="314.7" y="243.0" width="75.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="317.7" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (758 samples, 6.40%)</title><rect x="314.7" y="227.0" width="75.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.7" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (38 samples, 0.32%)</title><rect x="314.7" y="211.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.7" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (38 samples, 0.32%)</title><rect x="314.7" y="195.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="317.7" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (720 samples, 6.08%)</title><rect x="318.5" y="211.0" width="71.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.5" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (720 samples, 6.08%)</title><rect x="318.5" y="195.0" width="71.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.5" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (720 samples, 6.08%)</title><rect x="318.5" y="179.0" width="71.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.5" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (170 samples, 1.44%)</title><rect x="318.5" y="163.0" width="16.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (170 samples, 1.44%)</title><rect x="318.5" y="147.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.5" y="158.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (126 samples, 1.06%)</title><rect x="318.5" y="131.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (59 samples, 0.50%)</title><rect x="318.5" y="115.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (59 samples, 0.50%)</title><rect x="318.5" y="99.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (59 samples, 0.50%)</title><rect x="318.5" y="83.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.19%)</title><rect x="318.5" y="67.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="321.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.31%)</title><rect x="320.7" y="67.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.7" y="78.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.31%)</title><rect x="320.7" y="51.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="323.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (67 samples, 0.57%)</title><rect x="324.4" y="115.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.24%)</title><rect x="324.4" y="99.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.24%)</title><rect x="324.4" y="83.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.get$Lambda (29 samples, 0.24%)</title><rect x="324.4" y="67.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="327.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$66 (29 samples, 0.24%)</title><rect x="324.4" y="51.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="327.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (38 samples, 0.32%)</title><rect x="327.3" y="99.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (38 samples, 0.32%)</title><rect x="327.3" y="83.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.3" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (23 samples, 0.19%)</title><rect x="327.3" y="67.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="330.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (15 samples, 0.13%)</title><rect x="329.6" y="67.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="332.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (15 samples, 0.13%)</title><rect x="329.6" y="51.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (15 samples, 0.13%)</title><rect x="329.6" y="35.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="332.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (44 samples, 0.37%)</title><rect x="331.1" y="131.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 0.37%)</title><rect x="331.1" y="115.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.37%)</title><rect x="331.1" y="99.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.19%)</title><rect x="331.1" y="83.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="334.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.18%)</title><rect x="333.3" y="83.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.3" y="94.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.18%)</title><rect x="333.3" y="67.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="336.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (248 samples, 2.09%)</title><rect x="335.4" y="163.0" width="24.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.4" y="174.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (36 samples, 0.30%)</title><rect x="335.4" y="147.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="338.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (89 samples, 0.75%)</title><rect x="339.0" y="147.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (89 samples, 0.75%)</title><rect x="339.0" y="131.0" width="8.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="342.0" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 1.04%)</title><rect x="347.9" y="147.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="350.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 1.04%)</title><rect x="347.9" y="131.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.9" y="142.0"></text>
</g>
<g>
<title>char[] (61 samples, 0.52%)</title><rect x="347.9" y="115.0" width="6.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="350.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.20%)</title><rect x="354.0" y="115.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="357.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.32%)</title><rect x="356.4" y="115.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.32%)</title><rect x="356.4" y="99.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.32%)</title><rect x="356.4" y="83.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.4" y="94.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.32%)</title><rect x="356.4" y="67.0" width="3.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="359.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (27 samples, 0.23%)</title><rect x="360.2" y="163.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.2" y="174.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.23%)</title><rect x="360.2" y="147.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="363.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (34 samples, 0.29%)</title><rect x="362.8" y="163.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.29%)</title><rect x="362.8" y="147.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.29%)</title><rect x="362.8" y="131.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="365.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.14%)</title><rect x="362.8" y="115.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="365.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.15%)</title><rect x="364.4" y="115.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.4" y="126.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.15%)</title><rect x="364.4" y="99.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="367.4" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (241 samples, 2.04%)</title><rect x="366.2" y="163.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.2" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (241 samples, 2.04%)</title><rect x="366.2" y="147.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.2" y="158.0">o..</text>
</g>
<g>
<title>char[] (100 samples, 0.84%)</title><rect x="366.2" y="131.0" width="10.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="369.2" y="142.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.48%)</title><rect x="376.2" y="131.0" width="5.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="379.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (84 samples, 0.71%)</title><rect x="381.9" y="131.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (84 samples, 0.71%)</title><rect x="381.9" y="115.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (84 samples, 0.71%)</title><rect x="381.9" y="99.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.9" y="110.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.71%)</title><rect x="381.9" y="83.0" width="8.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="384.9" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=44739] (739 samples, 6.24%)</title><rect x="390.2" y="243.0" width="73.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="393.2" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (739 samples, 6.24%)</title><rect x="390.2" y="227.0" width="73.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.2" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (32 samples, 0.27%)</title><rect x="390.2" y="211.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.2" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (32 samples, 0.27%)</title><rect x="390.2" y="195.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="393.2" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (707 samples, 5.97%)</title><rect x="393.4" y="211.0" width="70.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.4" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (707 samples, 5.97%)</title><rect x="393.4" y="195.0" width="70.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.4" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (707 samples, 5.97%)</title><rect x="393.4" y="179.0" width="70.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.4" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (191 samples, 1.61%)</title><rect x="393.4" y="163.0" width="19.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (191 samples, 1.61%)</title><rect x="393.4" y="147.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.4" y="158.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (144 samples, 1.22%)</title><rect x="393.4" y="131.0" width="14.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (60 samples, 0.51%)</title><rect x="393.4" y="115.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (60 samples, 0.51%)</title><rect x="393.4" y="99.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 0.51%)</title><rect x="393.4" y="83.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.24%)</title><rect x="393.4" y="67.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="396.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.26%)</title><rect x="396.3" y="67.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.3" y="78.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.26%)</title><rect x="396.3" y="51.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="399.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (84 samples, 0.71%)</title><rect x="399.4" y="115.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.22%)</title><rect x="399.4" y="99.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.22%)</title><rect x="399.4" y="83.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.get$Lambda (26 samples, 0.22%)</title><rect x="399.4" y="67.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$66 (26 samples, 0.22%)</title><rect x="399.4" y="51.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="402.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (58 samples, 0.49%)</title><rect x="402.0" y="99.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (57 samples, 0.48%)</title><rect x="402.0" y="83.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.0" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (27 samples, 0.23%)</title><rect x="402.0" y="67.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="405.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (30 samples, 0.25%)</title><rect x="404.7" y="67.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.7" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (30 samples, 0.25%)</title><rect x="404.7" y="51.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (30 samples, 0.25%)</title><rect x="404.7" y="35.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="407.7" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (47 samples, 0.40%)</title><rect x="407.8" y="131.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.40%)</title><rect x="407.8" y="115.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.40%)</title><rect x="407.8" y="99.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.19%)</title><rect x="407.8" y="83.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="410.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.21%)</title><rect x="410.0" y="83.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.0" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.21%)</title><rect x="410.0" y="67.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="413.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (235 samples, 1.98%)</title><rect x="412.5" y="163.0" width="23.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.5" y="174.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (36 samples, 0.30%)</title><rect x="412.5" y="147.0" width="3.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="415.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (95 samples, 0.80%)</title><rect x="416.1" y="147.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (95 samples, 0.80%)</title><rect x="416.1" y="131.0" width="9.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="419.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 0.88%)</title><rect x="425.5" y="147.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 0.88%)</title><rect x="425.5" y="131.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.5" y="142.0"></text>
</g>
<g>
<title>char[] (50 samples, 0.42%)</title><rect x="425.5" y="115.0" width="5.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="428.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.14%)</title><rect x="430.5" y="115.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="433.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.32%)</title><rect x="432.1" y="115.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.32%)</title><rect x="432.1" y="99.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.32%)</title><rect x="432.1" y="83.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.1" y="94.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.32%)</title><rect x="432.1" y="67.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="435.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (29 samples, 0.24%)</title><rect x="435.9" y="163.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.9" y="174.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.24%)</title><rect x="435.9" y="147.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="438.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (42 samples, 0.35%)</title><rect x="438.8" y="163.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.35%)</title><rect x="438.8" y="147.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.35%)</title><rect x="438.8" y="131.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.18%)</title><rect x="438.8" y="115.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="441.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.18%)</title><rect x="440.9" y="115.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.9" y="126.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.18%)</title><rect x="440.9" y="99.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="443.9" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (210 samples, 1.77%)</title><rect x="443.0" y="163.0" width="20.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (210 samples, 1.77%)</title><rect x="443.0" y="147.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.0" y="158.0"></text>
</g>
<g>
<title>char[] (98 samples, 0.83%)</title><rect x="443.0" y="131.0" width="9.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="446.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.29%)</title><rect x="452.7" y="131.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="455.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (78 samples, 0.66%)</title><rect x="456.1" y="131.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (78 samples, 0.66%)</title><rect x="456.1" y="115.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (78 samples, 0.66%)</title><rect x="456.1" y="99.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.1" y="110.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.66%)</title><rect x="456.1" y="83.0" width="7.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="459.1" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=44740] (773 samples, 6.53%)</title><rect x="463.9" y="243.0" width="77.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="466.9" y="254.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (773 samples, 6.53%)</title><rect x="463.9" y="227.0" width="77.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.9" y="238.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/Session.process (773 samples, 6.53%)</title><rect x="463.9" y="211.0" width="77.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.9" y="222.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (773 samples, 6.53%)</title><rect x="463.9" y="195.0" width="77.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.9" y="206.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (773 samples, 6.53%)</title><rect x="463.9" y="179.0" width="77.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.9" y="190.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (200 samples, 1.69%)</title><rect x="463.9" y="163.0" width="19.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (200 samples, 1.69%)</title><rect x="463.9" y="147.0" width="19.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.9" y="158.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (153 samples, 1.29%)</title><rect x="463.9" y="131.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (47 samples, 0.40%)</title><rect x="463.9" y="115.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.40%)</title><rect x="463.9" y="99.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.40%)</title><rect x="463.9" y="83.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.9" y="94.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.17%)</title><rect x="463.9" y="67.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="466.9" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.23%)</title><rect x="465.9" y="67.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.9" y="78.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.23%)</title><rect x="465.9" y="51.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="468.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (106 samples, 0.90%)</title><rect x="468.6" y="115.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.42%)</title><rect x="468.6" y="99.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.6" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.42%)</title><rect x="468.6" y="83.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.get$Lambda (50 samples, 0.42%)</title><rect x="468.6" y="67.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$66 (50 samples, 0.42%)</title><rect x="468.6" y="51.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="471.6" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (56 samples, 0.47%)</title><rect x="473.6" y="99.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (56 samples, 0.47%)</title><rect x="473.6" y="83.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.6" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (25 samples, 0.21%)</title><rect x="473.6" y="67.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="476.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (31 samples, 0.26%)</title><rect x="476.0" y="67.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (31 samples, 0.26%)</title><rect x="476.0" y="51.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (31 samples, 0.26%)</title><rect x="476.0" y="35.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="479.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (47 samples, 0.40%)</title><rect x="479.1" y="131.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.40%)</title><rect x="479.1" y="115.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.40%)</title><rect x="479.1" y="99.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.15%)</title><rect x="479.1" y="83.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="482.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.24%)</title><rect x="480.9" y="83.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.9" y="94.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.24%)</title><rect x="480.9" y="67.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="483.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (263 samples, 2.22%)</title><rect x="483.8" y="163.0" width="26.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.8" y="174.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (31 samples, 0.26%)</title><rect x="483.8" y="147.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="486.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (83 samples, 0.70%)</title><rect x="486.9" y="147.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (83 samples, 0.70%)</title><rect x="486.9" y="131.0" width="8.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="489.9" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (149 samples, 1.26%)</title><rect x="495.2" y="147.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (149 samples, 1.26%)</title><rect x="495.2" y="131.0" width="14.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.2" y="142.0"></text>
</g>
<g>
<title>char[] (74 samples, 0.62%)</title><rect x="495.2" y="115.0" width="7.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="498.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.27%)</title><rect x="502.5" y="115.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="505.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.36%)</title><rect x="505.7" y="115.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.36%)</title><rect x="505.7" y="99.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (43 samples, 0.36%)</title><rect x="505.7" y="83.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.7" y="94.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.36%)</title><rect x="505.7" y="67.0" width="4.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="508.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (31 samples, 0.26%)</title><rect x="510.0" y="163.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.0" y="174.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.26%)</title><rect x="510.0" y="147.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="513.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (35 samples, 0.30%)</title><rect x="513.1" y="163.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 0.30%)</title><rect x="513.1" y="147.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.30%)</title><rect x="513.1" y="131.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.14%)</title><rect x="513.1" y="115.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="516.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.16%)</title><rect x="514.7" y="115.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.7" y="126.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.16%)</title><rect x="514.7" y="99.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="517.7" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (244 samples, 2.06%)</title><rect x="516.6" y="163.0" width="24.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.6" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (244 samples, 2.06%)</title><rect x="516.6" y="147.0" width="24.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.6" y="158.0">o..</text>
</g>
<g>
<title>char[] (92 samples, 0.78%)</title><rect x="516.6" y="131.0" width="9.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="519.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.54%)</title><rect x="525.8" y="131.0" width="6.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="528.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (88 samples, 0.74%)</title><rect x="532.1" y="131.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (88 samples, 0.74%)</title><rect x="532.1" y="115.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (88 samples, 0.74%)</title><rect x="532.1" y="99.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.1" y="110.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.74%)</title><rect x="532.1" y="83.0" width="8.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="535.1" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=44741] (744 samples, 6.28%)</title><rect x="540.9" y="243.0" width="74.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="543.9" y="254.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (744 samples, 6.28%)</title><rect x="540.9" y="227.0" width="74.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.9" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (744 samples, 6.28%)</title><rect x="540.9" y="211.0" width="74.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.9" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (744 samples, 6.28%)</title><rect x="540.9" y="195.0" width="74.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.9" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (744 samples, 6.28%)</title><rect x="540.9" y="179.0" width="74.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.9" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (203 samples, 1.71%)</title><rect x="540.9" y="163.0" width="20.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (203 samples, 1.71%)</title><rect x="540.9" y="147.0" width="20.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.9" y="158.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (136 samples, 1.15%)</title><rect x="540.9" y="131.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (46 samples, 0.39%)</title><rect x="540.9" y="115.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.39%)</title><rect x="540.9" y="99.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.39%)</title><rect x="540.9" y="83.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.9" y="94.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.19%)</title><rect x="540.9" y="67.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="543.9" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.19%)</title><rect x="543.2" y="67.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.2" y="78.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.19%)</title><rect x="543.2" y="51.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="546.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.put (90 samples, 0.76%)</title><rect x="545.5" y="115.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.35%)</title><rect x="545.5" y="99.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.5" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.35%)</title><rect x="545.5" y="83.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.get$Lambda (41 samples, 0.35%)</title><rect x="545.5" y="67.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.AsyncServiceImpl$$Lambda$66 (41 samples, 0.35%)</title><rect x="545.5" y="51.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="548.5" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (49 samples, 0.41%)</title><rect x="549.6" y="99.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (48 samples, 0.41%)</title><rect x="549.6" y="83.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.6" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (30 samples, 0.25%)</title><rect x="549.6" y="67.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="552.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (18 samples, 0.15%)</title><rect x="552.6" y="67.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (18 samples, 0.15%)</title><rect x="552.6" y="51.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (18 samples, 0.15%)</title><rect x="552.6" y="35.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="555.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (67 samples, 0.57%)</title><rect x="554.5" y="131.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (67 samples, 0.57%)</title><rect x="554.5" y="115.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (67 samples, 0.57%)</title><rect x="554.5" y="99.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.19%)</title><rect x="554.5" y="83.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="557.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.38%)</title><rect x="556.7" y="83.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.7" y="94.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.38%)</title><rect x="556.7" y="67.0" width="4.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="559.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (245 samples, 2.07%)</title><rect x="561.1" y="163.0" width="24.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.1" y="174.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (43 samples, 0.36%)</title><rect x="561.1" y="147.0" width="4.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="564.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (68 samples, 0.57%)</title><rect x="565.4" y="147.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (68 samples, 0.57%)</title><rect x="565.4" y="131.0" width="6.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="568.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (134 samples, 1.13%)</title><rect x="572.2" y="147.0" width="13.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (134 samples, 1.13%)</title><rect x="572.2" y="131.0" width="13.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.2" y="142.0"></text>
</g>
<g>
<title>char[] (71 samples, 0.60%)</title><rect x="572.2" y="115.0" width="7.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="575.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.22%)</title><rect x="579.3" y="115.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="582.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.31%)</title><rect x="581.9" y="115.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.31%)</title><rect x="581.9" y="99.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.31%)</title><rect x="581.9" y="83.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.9" y="94.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.31%)</title><rect x="581.9" y="67.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="584.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (28 samples, 0.24%)</title><rect x="585.6" y="163.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.6" y="174.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.24%)</title><rect x="585.6" y="147.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="588.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (48 samples, 0.41%)</title><rect x="588.3" y="163.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.41%)</title><rect x="588.3" y="147.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.41%)</title><rect x="588.3" y="131.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.22%)</title><rect x="588.3" y="115.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="591.3" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.19%)</title><rect x="590.9" y="115.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.9" y="126.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.19%)</title><rect x="590.9" y="99.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="593.9" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (220 samples, 1.86%)</title><rect x="593.1" y="163.0" width="21.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.1" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (220 samples, 1.86%)</title><rect x="593.1" y="147.0" width="21.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.1" y="158.0">o..</text>
</g>
<g>
<title>char[] (98 samples, 0.83%)</title><rect x="593.1" y="131.0" width="9.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="596.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.35%)</title><rect x="602.9" y="131.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="605.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (80 samples, 0.68%)</title><rect x="607.1" y="131.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (80 samples, 0.68%)</title><rect x="607.1" y="115.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (80 samples, 0.68%)</title><rect x="607.1" y="99.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.1" y="110.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.68%)</title><rect x="607.1" y="83.0" width="7.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="610.1" y="94.0"></text>
</g>
<g>
<title>[async_worker-0 tid=44750] (731 samples, 6.17%)</title><rect x="615.0" y="243.0" width="72.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="618.0" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (731 samples, 6.17%)</title><rect x="615.0" y="227.0" width="72.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.0" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (731 samples, 6.17%)</title><rect x="615.0" y="211.0" width="72.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.0" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (731 samples, 6.17%)</title><rect x="615.0" y="195.0" width="72.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.0" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (722 samples, 6.10%)</title><rect x="615.0" y="179.0" width="72.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.0" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (722 samples, 6.10%)</title><rect x="615.0" y="163.0" width="72.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.0" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (722 samples, 6.10%)</title><rect x="615.0" y="147.0" width="72.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.0" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (722 samples, 6.10%)</title><rect x="615.0" y="131.0" width="72.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.0" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (70 samples, 0.59%)</title><rect x="615.0" y="115.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (70 samples, 0.59%)</title><rect x="615.0" y="99.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (70 samples, 0.59%)</title><rect x="615.0" y="83.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (70 samples, 0.59%)</title><rect x="615.0" y="67.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.0" y="78.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.59%)</title><rect x="615.0" y="51.0" width="7.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="618.0" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (134 samples, 1.13%)</title><rect x="622.0" y="115.0" width="13.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (134 samples, 1.13%)</title><rect x="622.0" y="99.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (134 samples, 1.13%)</title><rect x="622.0" y="83.0" width="13.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="625.0" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (44 samples, 0.37%)</title><rect x="635.4" y="115.0" width="4.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="638.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (212 samples, 1.79%)</title><rect x="639.8" y="115.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.8" y="126.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (212 samples, 1.79%)</title><rect x="639.8" y="99.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.8" y="110.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (150 samples, 1.27%)</title><rect x="639.8" y="83.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.8" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (150 samples, 1.27%)</title><rect x="639.8" y="67.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.8" y="78.0"></text>
</g>
<g>
<title>byte[] (150 samples, 1.27%)</title><rect x="639.8" y="51.0" width="14.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="642.8" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 0.52%)</title><rect x="654.7" y="83.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.7" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (62 samples, 0.52%)</title><rect x="654.7" y="67.0" width="6.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="657.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (158 samples, 1.33%)</title><rect x="660.9" y="115.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.9" y="126.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.60%)</title><rect x="660.9" y="99.0" width="7.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="663.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 0.40%)</title><rect x="668.0" y="99.0" width="4.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="671.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.34%)</title><rect x="672.6" y="99.0" width="4.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="675.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (104 samples, 0.88%)</title><rect x="676.6" y="115.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.unfoldToBytes (42 samples, 0.35%)</title><rect x="676.6" y="99.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.6" y="110.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.35%)</title><rect x="676.6" y="83.0" width="4.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="679.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (62 samples, 0.52%)</title><rect x="680.8" y="99.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (62 samples, 0.52%)</title><rect x="680.8" y="83.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.8" y="94.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.52%)</title><rect x="680.8" y="67.0" width="6.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="683.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.08%)</title><rect x="687.0" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.08%)</title><rect x="687.0" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.03%)</title><rect x="687.0" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.03%)</title><rect x="687.0" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="687.0" y="115.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="690.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.05%)</title><rect x="687.3" y="147.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.05%)</title><rect x="687.3" y="131.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (6 samples, 0.05%)</title><rect x="687.3" y="115.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.05%)</title><rect x="687.3" y="99.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.3" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.05%)</title><rect x="687.3" y="83.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="690.3" y="94.0"></text>
</g>
<g>
<title>[async_worker-1 tid=44755] (729 samples, 6.16%)</title><rect x="687.9" y="243.0" width="72.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="690.9" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (729 samples, 6.16%)</title><rect x="687.9" y="227.0" width="72.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.9" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (729 samples, 6.16%)</title><rect x="687.9" y="211.0" width="72.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.9" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (729 samples, 6.16%)</title><rect x="687.9" y="195.0" width="72.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.9" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (720 samples, 6.08%)</title><rect x="687.9" y="179.0" width="71.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.9" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (720 samples, 6.08%)</title><rect x="687.9" y="163.0" width="71.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.9" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (720 samples, 6.08%)</title><rect x="687.9" y="147.0" width="71.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.9" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (720 samples, 6.08%)</title><rect x="687.9" y="131.0" width="71.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.9" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (68 samples, 0.57%)</title><rect x="687.9" y="115.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (68 samples, 0.57%)</title><rect x="687.9" y="99.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (68 samples, 0.57%)</title><rect x="687.9" y="83.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (68 samples, 0.57%)</title><rect x="687.9" y="67.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.9" y="78.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.57%)</title><rect x="687.9" y="51.0" width="6.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="690.9" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (148 samples, 1.25%)</title><rect x="694.7" y="115.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (148 samples, 1.25%)</title><rect x="694.7" y="99.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (148 samples, 1.25%)</title><rect x="694.7" y="83.0" width="14.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="697.7" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (54 samples, 0.46%)</title><rect x="709.4" y="115.0" width="5.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="712.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (205 samples, 1.73%)</title><rect x="714.8" y="115.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (205 samples, 1.73%)</title><rect x="714.8" y="99.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (152 samples, 1.28%)</title><rect x="714.8" y="83.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.8" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (152 samples, 1.28%)</title><rect x="714.8" y="67.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.8" y="78.0"></text>
</g>
<g>
<title>byte[] (152 samples, 1.28%)</title><rect x="714.8" y="51.0" width="15.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="717.8" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (53 samples, 0.45%)</title><rect x="729.9" y="83.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.9" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (53 samples, 0.45%)</title><rect x="729.9" y="67.0" width="5.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="732.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (150 samples, 1.27%)</title><rect x="735.2" y="115.0" width="15.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.2" y="126.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.53%)</title><rect x="735.2" y="99.0" width="6.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="738.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (58 samples, 0.49%)</title><rect x="741.5" y="99.0" width="5.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="744.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.24%)</title><rect x="747.3" y="99.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="750.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (95 samples, 0.80%)</title><rect x="750.2" y="115.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.unfoldToBytes (48 samples, 0.41%)</title><rect x="750.2" y="99.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.2" y="110.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.41%)</title><rect x="750.2" y="83.0" width="4.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="753.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (47 samples, 0.40%)</title><rect x="754.9" y="99.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (47 samples, 0.40%)</title><rect x="754.9" y="83.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.9" y="94.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.40%)</title><rect x="754.9" y="67.0" width="4.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="757.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.08%)</title><rect x="759.6" y="179.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.08%)</title><rect x="759.6" y="163.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.05%)</title><rect x="759.6" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.05%)</title><rect x="759.6" y="131.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.05%)</title><rect x="759.6" y="115.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="762.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="760.2" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="760.2" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="760.2" y="115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="760.2" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="763.2" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="760.2" y="83.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="763.2" y="94.0"></text>
</g>
<g>
<title>[async_worker-2 tid=44753] (715 samples, 6.04%)</title><rect x="760.5" y="243.0" width="71.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="763.5" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (715 samples, 6.04%)</title><rect x="760.5" y="227.0" width="71.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.5" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (715 samples, 6.04%)</title><rect x="760.5" y="211.0" width="71.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.5" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (715 samples, 6.04%)</title><rect x="760.5" y="195.0" width="71.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.5" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (706 samples, 5.96%)</title><rect x="760.5" y="179.0" width="70.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.5" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (706 samples, 5.96%)</title><rect x="760.5" y="163.0" width="70.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.5" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (706 samples, 5.96%)</title><rect x="760.5" y="147.0" width="70.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.5" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (706 samples, 5.96%)</title><rect x="760.5" y="131.0" width="70.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.5" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (48 samples, 0.41%)</title><rect x="760.5" y="115.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (48 samples, 0.41%)</title><rect x="760.5" y="99.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (48 samples, 0.41%)</title><rect x="760.5" y="83.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.41%)</title><rect x="760.5" y="67.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.5" y="78.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.41%)</title><rect x="760.5" y="51.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="763.5" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (151 samples, 1.28%)</title><rect x="765.3" y="115.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (151 samples, 1.28%)</title><rect x="765.3" y="99.0" width="15.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (151 samples, 1.28%)</title><rect x="765.3" y="83.0" width="15.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="768.3" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (49 samples, 0.41%)</title><rect x="780.4" y="115.0" width="4.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="783.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (210 samples, 1.77%)</title><rect x="785.2" y="115.0" width="21.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (210 samples, 1.77%)</title><rect x="785.2" y="99.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (141 samples, 1.19%)</title><rect x="785.2" y="83.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.2" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (141 samples, 1.19%)</title><rect x="785.2" y="67.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.2" y="78.0"></text>
</g>
<g>
<title>byte[] (141 samples, 1.19%)</title><rect x="785.2" y="51.0" width="14.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="788.2" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 0.58%)</title><rect x="799.3" y="83.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.3" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (69 samples, 0.58%)</title><rect x="799.3" y="67.0" width="6.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="802.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (139 samples, 1.17%)</title><rect x="806.2" y="115.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.2" y="126.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.52%)</title><rect x="806.2" y="99.0" width="6.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="809.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 0.41%)</title><rect x="812.3" y="99.0" width="4.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="815.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.24%)</title><rect x="817.1" y="99.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="820.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (109 samples, 0.92%)</title><rect x="820.0" y="115.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.unfoldToBytes (51 samples, 0.43%)</title><rect x="820.0" y="99.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.0" y="110.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.43%)</title><rect x="820.0" y="83.0" width="5.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="823.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (58 samples, 0.49%)</title><rect x="825.1" y="99.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (58 samples, 0.49%)</title><rect x="825.1" y="83.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.1" y="94.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.49%)</title><rect x="825.1" y="67.0" width="5.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="828.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.08%)</title><rect x="830.9" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="833.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.08%)</title><rect x="830.9" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.06%)</title><rect x="830.9" y="147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.06%)</title><rect x="830.9" y="131.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.9" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.06%)</title><rect x="830.9" y="115.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="833.9" y="126.0"></text>
</g>
<g>
<title>[async_worker-3 tid=44754] (715 samples, 6.04%)</title><rect x="831.8" y="243.0" width="71.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="834.8" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (715 samples, 6.04%)</title><rect x="831.8" y="227.0" width="71.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.8" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (715 samples, 6.04%)</title><rect x="831.8" y="211.0" width="71.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.8" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (715 samples, 6.04%)</title><rect x="831.8" y="195.0" width="71.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.8" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (709 samples, 5.99%)</title><rect x="831.8" y="179.0" width="70.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.8" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (709 samples, 5.99%)</title><rect x="831.8" y="163.0" width="70.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.8" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (709 samples, 5.99%)</title><rect x="831.8" y="147.0" width="70.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="834.8" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (709 samples, 5.99%)</title><rect x="831.8" y="131.0" width="70.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.8" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (58 samples, 0.49%)</title><rect x="831.8" y="115.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (58 samples, 0.49%)</title><rect x="831.8" y="99.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (58 samples, 0.49%)</title><rect x="831.8" y="83.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.49%)</title><rect x="831.8" y="67.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.8" y="78.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.49%)</title><rect x="831.8" y="51.0" width="5.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="834.8" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (154 samples, 1.30%)</title><rect x="837.6" y="115.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (154 samples, 1.30%)</title><rect x="837.6" y="99.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (154 samples, 1.30%)</title><rect x="837.6" y="83.0" width="15.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="840.6" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (50 samples, 0.42%)</title><rect x="852.9" y="115.0" width="5.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="855.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (185 samples, 1.56%)</title><rect x="857.9" y="115.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (185 samples, 1.56%)</title><rect x="857.9" y="99.0" width="18.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (124 samples, 1.05%)</title><rect x="857.9" y="83.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.9" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (124 samples, 1.05%)</title><rect x="857.9" y="67.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.9" y="78.0"></text>
</g>
<g>
<title>byte[] (124 samples, 1.05%)</title><rect x="857.9" y="51.0" width="12.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="860.9" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 0.52%)</title><rect x="870.2" y="83.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="873.2" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (61 samples, 0.52%)</title><rect x="870.2" y="67.0" width="6.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="873.2" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (149 samples, 1.26%)</title><rect x="876.3" y="115.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="879.3" y="126.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.55%)</title><rect x="876.3" y="99.0" width="6.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="879.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (54 samples, 0.46%)</title><rect x="882.8" y="99.0" width="5.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="885.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.25%)</title><rect x="888.2" y="99.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="891.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (113 samples, 0.95%)</title><rect x="891.2" y="115.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.unfoldToBytes (62 samples, 0.52%)</title><rect x="891.2" y="99.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.2" y="110.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.52%)</title><rect x="891.2" y="83.0" width="6.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="894.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (51 samples, 0.43%)</title><rect x="897.3" y="99.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (51 samples, 0.43%)</title><rect x="897.3" y="83.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.3" y="94.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.43%)</title><rect x="897.3" y="67.0" width="5.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="900.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.05%)</title><rect x="902.4" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.05%)</title><rect x="902.4" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.04%)</title><rect x="902.4" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.04%)</title><rect x="902.4" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.04%)</title><rect x="902.4" y="115.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="905.4" y="126.0"></text>
</g>
<g>
<title>[async_worker-4 tid=44752] (721 samples, 6.09%)</title><rect x="903.0" y="243.0" width="71.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="906.0" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (721 samples, 6.09%)</title><rect x="903.0" y="227.0" width="71.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.0" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (721 samples, 6.09%)</title><rect x="903.0" y="211.0" width="71.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.0" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (721 samples, 6.09%)</title><rect x="903.0" y="195.0" width="71.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.0" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (709 samples, 5.99%)</title><rect x="903.0" y="179.0" width="70.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.0" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (709 samples, 5.99%)</title><rect x="903.0" y="163.0" width="70.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.0" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (709 samples, 5.99%)</title><rect x="903.0" y="147.0" width="70.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.0" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (709 samples, 5.99%)</title><rect x="903.0" y="131.0" width="70.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.0" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (52 samples, 0.44%)</title><rect x="903.0" y="115.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (52 samples, 0.44%)</title><rect x="903.0" y="99.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (52 samples, 0.44%)</title><rect x="903.0" y="83.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 0.44%)</title><rect x="903.0" y="67.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.0" y="78.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.44%)</title><rect x="903.0" y="51.0" width="5.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="906.0" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (154 samples, 1.30%)</title><rect x="908.2" y="115.0" width="15.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (154 samples, 1.30%)</title><rect x="908.2" y="99.0" width="15.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (154 samples, 1.30%)</title><rect x="908.2" y="83.0" width="15.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="911.2" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (36 samples, 0.30%)</title><rect x="923.5" y="115.0" width="3.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="926.5" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (211 samples, 1.78%)</title><rect x="927.1" y="115.0" width="21.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.1" y="126.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (211 samples, 1.78%)</title><rect x="927.1" y="99.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.1" y="110.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (142 samples, 1.20%)</title><rect x="927.1" y="83.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.1" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (142 samples, 1.20%)</title><rect x="927.1" y="67.0" width="14.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.1" y="78.0"></text>
</g>
<g>
<title>byte[] (142 samples, 1.20%)</title><rect x="927.1" y="51.0" width="14.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="930.1" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 0.58%)</title><rect x="941.3" y="83.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.3" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (69 samples, 0.58%)</title><rect x="941.3" y="67.0" width="6.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="944.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (149 samples, 1.26%)</title><rect x="948.2" y="115.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.2" y="126.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.54%)</title><rect x="948.2" y="99.0" width="6.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="951.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (50 samples, 0.42%)</title><rect x="954.5" y="99.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="957.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.30%)</title><rect x="959.5" y="99.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="962.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (107 samples, 0.90%)</title><rect x="963.0" y="115.0" width="10.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.unfoldToBytes (61 samples, 0.52%)</title><rect x="963.0" y="99.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.0" y="110.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.52%)</title><rect x="963.0" y="83.0" width="6.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="966.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (46 samples, 0.39%)</title><rect x="969.1" y="99.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="972.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (46 samples, 0.39%)</title><rect x="969.1" y="83.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="972.1" y="94.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.39%)</title><rect x="969.1" y="67.0" width="4.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="972.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.10%)</title><rect x="973.7" y="179.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12 samples, 0.10%)</title><rect x="973.7" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.06%)</title><rect x="973.7" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.06%)</title><rect x="973.7" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.06%)</title><rect x="973.7" y="115.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="976.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.04%)</title><rect x="974.4" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="977.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.04%)</title><rect x="974.4" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.04%)</title><rect x="974.4" y="115.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (5 samples, 0.04%)</title><rect x="974.4" y="99.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="977.4" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.04%)</title><rect x="974.4" y="83.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="977.4" y="94.0"></text>
</g>
<g>
<title>[async_worker-5 tid=44751] (722 samples, 6.10%)</title><rect x="974.9" y="243.0" width="71.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="977.9" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (722 samples, 6.10%)</title><rect x="974.9" y="227.0" width="71.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.9" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (722 samples, 6.10%)</title><rect x="974.9" y="211.0" width="71.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.9" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (722 samples, 6.10%)</title><rect x="974.9" y="195.0" width="71.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.9" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (711 samples, 6.00%)</title><rect x="974.9" y="179.0" width="70.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.9" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (711 samples, 6.00%)</title><rect x="974.9" y="163.0" width="70.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="977.9" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (711 samples, 6.00%)</title><rect x="974.9" y="147.0" width="70.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.9" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (711 samples, 6.00%)</title><rect x="974.9" y="131.0" width="70.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="977.9" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (63 samples, 0.53%)</title><rect x="974.9" y="115.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (63 samples, 0.53%)</title><rect x="974.9" y="99.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (63 samples, 0.53%)</title><rect x="974.9" y="83.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="977.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (63 samples, 0.53%)</title><rect x="974.9" y="67.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="977.9" y="78.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.53%)</title><rect x="974.9" y="51.0" width="6.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="977.9" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (154 samples, 1.30%)</title><rect x="981.1" y="115.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (154 samples, 1.30%)</title><rect x="981.1" y="99.0" width="15.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (154 samples, 1.30%)</title><rect x="981.1" y="83.0" width="15.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="984.1" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (46 samples, 0.39%)</title><rect x="996.5" y="115.0" width="4.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="999.5" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (201 samples, 1.70%)</title><rect x="1001.1" y="115.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1004.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (201 samples, 1.70%)</title><rect x="1001.1" y="99.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.1" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (142 samples, 1.20%)</title><rect x="1001.1" y="83.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1004.1" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (142 samples, 1.20%)</title><rect x="1001.1" y="67.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.1" y="78.0"></text>
</g>
<g>
<title>byte[] (142 samples, 1.20%)</title><rect x="1001.1" y="51.0" width="14.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1004.1" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (59 samples, 0.50%)</title><rect x="1015.2" y="83.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1018.2" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (59 samples, 0.50%)</title><rect x="1015.2" y="67.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1018.2" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (150 samples, 1.27%)</title><rect x="1021.1" y="115.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.1" y="126.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.57%)</title><rect x="1021.1" y="99.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1024.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (56 samples, 0.47%)</title><rect x="1027.8" y="99.0" width="5.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1030.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.23%)</title><rect x="1033.4" y="99.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1036.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (97 samples, 0.82%)</title><rect x="1036.0" y="115.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.unfoldToBytes (57 samples, 0.48%)</title><rect x="1036.0" y="99.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1039.0" y="110.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.48%)</title><rect x="1036.0" y="83.0" width="5.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1039.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (40 samples, 0.34%)</title><rect x="1041.7" y="99.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (40 samples, 0.34%)</title><rect x="1041.7" y="83.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.7" y="94.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.34%)</title><rect x="1041.7" y="67.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1044.7" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.09%)</title><rect x="1045.7" y="179.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 0.09%)</title><rect x="1045.7" y="163.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.07%)</title><rect x="1045.7" y="147.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.07%)</title><rect x="1045.7" y="131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.07%)</title><rect x="1045.7" y="115.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1048.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="1046.5" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="1046.5" y="131.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1049.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="1046.5" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="1046.5" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.5" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="1046.5" y="83.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1049.5" y="94.0"></text>
</g>
<g>
<title>[async_worker-6 tid=44756] (718 samples, 6.06%)</title><rect x="1046.8" y="243.0" width="71.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1049.8" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (718 samples, 6.06%)</title><rect x="1046.8" y="227.0" width="71.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.8" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (718 samples, 6.06%)</title><rect x="1046.8" y="211.0" width="71.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.8" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (718 samples, 6.06%)</title><rect x="1046.8" y="195.0" width="71.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.8" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (708 samples, 5.98%)</title><rect x="1046.8" y="179.0" width="70.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.8" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (708 samples, 5.98%)</title><rect x="1046.8" y="163.0" width="70.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.8" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (708 samples, 5.98%)</title><rect x="1046.8" y="147.0" width="70.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.8" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (708 samples, 5.98%)</title><rect x="1046.8" y="131.0" width="70.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.8" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (68 samples, 0.57%)</title><rect x="1046.8" y="115.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (68 samples, 0.57%)</title><rect x="1046.8" y="99.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (68 samples, 0.57%)</title><rect x="1046.8" y="83.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (68 samples, 0.57%)</title><rect x="1046.8" y="67.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.8" y="78.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.57%)</title><rect x="1046.8" y="51.0" width="6.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1049.8" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (144 samples, 1.22%)</title><rect x="1053.6" y="115.0" width="14.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1056.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (144 samples, 1.22%)</title><rect x="1053.6" y="99.0" width="14.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (144 samples, 1.22%)</title><rect x="1053.6" y="83.0" width="14.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1056.6" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (43 samples, 0.36%)</title><rect x="1067.9" y="115.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1070.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (208 samples, 1.76%)</title><rect x="1072.2" y="115.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (208 samples, 1.76%)</title><rect x="1072.2" y="99.0" width="20.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (138 samples, 1.17%)</title><rect x="1072.2" y="83.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.2" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (138 samples, 1.17%)</title><rect x="1072.2" y="67.0" width="13.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.2" y="78.0"></text>
</g>
<g>
<title>byte[] (138 samples, 1.17%)</title><rect x="1072.2" y="51.0" width="13.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1075.2" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 0.59%)</title><rect x="1086.0" y="83.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.0" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (70 samples, 0.59%)</title><rect x="1086.0" y="67.0" width="6.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1089.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (145 samples, 1.22%)</title><rect x="1092.9" y="115.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.9" y="126.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.52%)</title><rect x="1092.9" y="99.0" width="6.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1095.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (55 samples, 0.46%)</title><rect x="1099.0" y="99.0" width="5.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1102.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.24%)</title><rect x="1104.5" y="99.0" width="2.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1107.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (100 samples, 0.84%)</title><rect x="1107.4" y="115.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.unfoldToBytes (54 samples, 0.46%)</title><rect x="1107.4" y="99.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.4" y="110.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.46%)</title><rect x="1107.4" y="83.0" width="5.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1110.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (46 samples, 0.39%)</title><rect x="1112.8" y="99.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1115.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (46 samples, 0.39%)</title><rect x="1112.8" y="83.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.8" y="94.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.39%)</title><rect x="1112.8" y="67.0" width="4.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1115.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.08%)</title><rect x="1117.4" y="179.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 0.08%)</title><rect x="1117.4" y="163.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.07%)</title><rect x="1117.4" y="147.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.07%)</title><rect x="1117.4" y="131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.07%)</title><rect x="1117.4" y="115.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1120.4" y="126.0"></text>
</g>
<g>
<title>[async_worker-7 tid=44757] (719 samples, 6.07%)</title><rect x="1118.4" y="243.0" width="71.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1121.4" y="254.0">[async_w..</text>
</g>
<g>
<title>java/lang/Thread.run (719 samples, 6.07%)</title><rect x="1118.4" y="227.0" width="71.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1121.4" y="238.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (719 samples, 6.07%)</title><rect x="1118.4" y="211.0" width="71.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.4" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (719 samples, 6.07%)</title><rect x="1118.4" y="195.0" width="71.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.4" y="206.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (712 samples, 6.01%)</title><rect x="1118.4" y="179.0" width="70.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.4" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (712 samples, 6.01%)</title><rect x="1118.4" y="163.0" width="70.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.4" y="174.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl$$Lambda$66/1939404989.run (712 samples, 6.01%)</title><rect x="1118.4" y="147.0" width="70.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1121.4" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/AsyncServiceImpl.lambda$put$3 (712 samples, 6.01%)</title><rect x="1118.4" y="131.0" width="70.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.4" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (70 samples, 0.59%)</title><rect x="1118.4" y="115.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (70 samples, 0.59%)</title><rect x="1118.4" y="99.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (70 samples, 0.59%)</title><rect x="1118.4" y="83.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (70 samples, 0.59%)</title><rect x="1118.4" y="67.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.4" y="78.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.59%)</title><rect x="1118.4" y="51.0" width="6.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1121.4" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (146 samples, 1.23%)</title><rect x="1125.3" y="115.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (146 samples, 1.23%)</title><rect x="1125.3" y="99.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (146 samples, 1.23%)</title><rect x="1125.3" y="83.0" width="14.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1128.3" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (41 samples, 0.35%)</title><rect x="1139.9" y="115.0" width="4.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1142.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (207 samples, 1.75%)</title><rect x="1144.0" y="115.0" width="20.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (207 samples, 1.75%)</title><rect x="1144.0" y="99.0" width="20.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.0" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (146 samples, 1.23%)</title><rect x="1144.0" y="83.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.0" y="94.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (146 samples, 1.23%)</title><rect x="1144.0" y="67.0" width="14.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.0" y="78.0"></text>
</g>
<g>
<title>byte[] (146 samples, 1.23%)</title><rect x="1144.0" y="51.0" width="14.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1147.0" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 0.52%)</title><rect x="1158.5" y="83.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.5" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (61 samples, 0.52%)</title><rect x="1158.5" y="67.0" width="6.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1161.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (152 samples, 1.28%)</title><rect x="1164.6" y="115.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.6" y="126.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.45%)</title><rect x="1164.6" y="99.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1167.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (64 samples, 0.54%)</title><rect x="1169.9" y="99.0" width="6.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1172.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.30%)</title><rect x="1176.2" y="99.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1179.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (96 samples, 0.81%)</title><rect x="1179.7" y="115.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1182.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.unfoldToBytes (39 samples, 0.33%)</title><rect x="1179.7" y="99.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1182.7" y="110.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.33%)</title><rect x="1179.7" y="83.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1182.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (57 samples, 0.48%)</title><rect x="1183.6" y="99.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (57 samples, 0.48%)</title><rect x="1183.6" y="83.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.6" y="94.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.48%)</title><rect x="1183.6" y="67.0" width="5.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1186.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.06%)</title><rect x="1189.3" y="179.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.06%)</title><rect x="1189.3" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.03%)</title><rect x="1189.3" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.03%)</title><rect x="1189.3" y="131.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.03%)</title><rect x="1189.3" y="115.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1192.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="1189.7" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="1189.7" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="1189.7" y="115.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="1189.7" y="99.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.7" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="1189.7" y="83.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1192.7" y="94.0"></text>
</g>
</g>
</svg>
