<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (4,746 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=44074] (645 samples, 13.59%)</title><rect x="10.0" y="931.0" width="160.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="942.0">[NIO Selector #0 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (645 samples, 13.59%)</title><rect x="10.0" y="915.0" width="160.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="926.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.27%)</title><rect x="10.2" y="899.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 0.27%)</title><rect x="10.2" y="883.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.2" y="894.0"></text>
</g>
<g>
<title>epoll_wait (12 samples, 0.25%)</title><rect x="10.5" y="867.0" width="3.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.25%)</title><rect x="10.5" y="851.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.25%)</title><rect x="10.5" y="835.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.5" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (11 samples, 0.23%)</title><rect x="10.5" y="819.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="13.5" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (11 samples, 0.23%)</title><rect x="10.5" y="803.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="13.5" y="814.0"></text>
</g>
<g>
<title>ep_poll (11 samples, 0.23%)</title><rect x="10.5" y="787.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.5" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (7 samples, 0.15%)</title><rect x="10.5" y="771.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="13.5" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.15%)</title><rect x="10.5" y="755.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.5" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.13%)</title><rect x="10.5" y="739.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="13.5" y="750.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.11%)</title><rect x="10.7" y="723.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="13.7" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.04%)</title><rect x="11.5" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="14.5" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.08%)</title><rect x="12.2" y="771.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="15.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.08%)</title><rect x="12.2" y="755.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="15.2" y="766.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.08%)</title><rect x="12.2" y="739.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="15.2" y="750.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.08%)</title><rect x="12.2" y="723.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="15.2" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.08%)</title><rect x="12.2" y="707.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="15.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (631 samples, 13.30%)</title><rect x="13.5" y="899.0" width="156.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.5" y="910.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (629 samples, 13.25%)</title><rect x="14.0" y="883.0" width="156.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.0" y="894.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (613 samples, 12.92%)</title><rect x="14.0" y="867.0" width="152.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.0" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (597 samples, 12.58%)</title><rect x="14.5" y="851.0" width="148.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.5" y="862.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (595 samples, 12.54%)</title><rect x="15.0" y="835.0" width="147.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.0" y="846.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (593 samples, 12.49%)</title><rect x="15.0" y="819.0" width="147.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.0" y="830.0">RequestHandler1_put..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (142 samples, 2.99%)</title><rect x="15.2" y="803.0" width="35.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.2" y="814.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="15.7" y="787.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="15.7" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="15.7" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (136 samples, 2.87%)</title><rect x="16.5" y="787.0" width="33.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.5" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="16.5" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (134 samples, 2.82%)</title><rect x="17.0" y="771.0" width="33.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.0" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (134 samples, 2.82%)</title><rect x="17.0" y="755.0" width="33.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.0" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (134 samples, 2.82%)</title><rect x="17.0" y="739.0" width="33.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.0" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (134 samples, 2.82%)</title><rect x="17.0" y="723.0" width="33.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.0" y="734.0">on..</text>
</g>
<g>
<title>send (133 samples, 2.80%)</title><rect x="17.2" y="707.0" width="33.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="20.2" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (133 samples, 2.80%)</title><rect x="17.2" y="691.0" width="33.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="20.2" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (132 samples, 2.78%)</title><rect x="17.5" y="675.0" width="32.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="20.5" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (131 samples, 2.76%)</title><rect x="17.7" y="659.0" width="32.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="20.7" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (131 samples, 2.76%)</title><rect x="17.7" y="643.0" width="32.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="20.7" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (131 samples, 2.76%)</title><rect x="17.7" y="627.0" width="32.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="20.7" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (128 samples, 2.70%)</title><rect x="18.0" y="611.0" width="31.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="21.0" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (128 samples, 2.70%)</title><rect x="18.0" y="595.0" width="31.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="21.0" y="606.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (127 samples, 2.68%)</title><rect x="18.2" y="579.0" width="31.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.2" y="590.0">tc..</text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.06%)</title><rect x="18.7" y="563.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="21.7" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.06%)</title><rect x="18.7" y="547.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="21.7" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.11%)</title><rect x="19.4" y="563.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="22.4" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.11%)</title><rect x="19.4" y="547.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="22.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.06%)</title><rect x="19.4" y="531.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.4" y="542.0"></text>
</g>
<g>
<title>memset (3 samples, 0.06%)</title><rect x="19.4" y="515.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="22.4" y="526.0"></text>
</g>
<g>
<title>tcp_push (115 samples, 2.42%)</title><rect x="20.9" y="563.0" width="28.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="23.9" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (114 samples, 2.40%)</title><rect x="20.9" y="547.0" width="28.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.9" y="558.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (113 samples, 2.38%)</title><rect x="21.2" y="531.0" width="28.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="24.2" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (106 samples, 2.23%)</title><rect x="21.7" y="515.0" width="26.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="24.7" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (103 samples, 2.17%)</title><rect x="21.9" y="499.0" width="25.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="24.9" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (100 samples, 2.11%)</title><rect x="21.9" y="483.0" width="24.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="24.9" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (98 samples, 2.06%)</title><rect x="22.4" y="467.0" width="24.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="25.4" y="478.0">i..</text>
</g>
<g>
<title>ip_output (98 samples, 2.06%)</title><rect x="22.4" y="451.0" width="24.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.4" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (98 samples, 2.06%)</title><rect x="22.4" y="435.0" width="24.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.4" y="446.0">i..</text>
</g>
<g>
<title>__ip_finish_output (97 samples, 2.04%)</title><rect x="22.7" y="419.0" width="24.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.7" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (96 samples, 2.02%)</title><rect x="22.9" y="403.0" width="23.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="25.9" y="414.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (86 samples, 1.81%)</title><rect x="24.4" y="387.0" width="21.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="27.4" y="398.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (86 samples, 1.81%)</title><rect x="24.4" y="371.0" width="21.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.4" y="382.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (86 samples, 1.81%)</title><rect x="24.4" y="355.0" width="21.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="27.4" y="366.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (86 samples, 1.81%)</title><rect x="24.4" y="339.0" width="21.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="27.4" y="350.0">_..</text>
</g>
<g>
<title>net_rx_action (84 samples, 1.77%)</title><rect x="24.7" y="323.0" width="20.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="27.7" y="334.0"></text>
</g>
<g>
<title>process_backlog (82 samples, 1.73%)</title><rect x="25.2" y="307.0" width="20.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="28.2" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (81 samples, 1.71%)</title><rect x="25.4" y="291.0" width="20.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="28.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (81 samples, 1.71%)</title><rect x="25.4" y="275.0" width="20.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="28.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.06%)</title><rect x="25.4" y="259.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="28.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv (78 samples, 1.64%)</title><rect x="26.2" y="259.0" width="19.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="29.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (77 samples, 1.62%)</title><rect x="26.4" y="243.0" width="19.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (77 samples, 1.62%)</title><rect x="26.4" y="227.0" width="19.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (76 samples, 1.60%)</title><rect x="26.4" y="211.0" width="18.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="29.4" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (76 samples, 1.60%)</title><rect x="26.4" y="195.0" width="18.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (75 samples, 1.58%)</title><rect x="26.7" y="179.0" width="18.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="29.7" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="26.9" y="163.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (72 samples, 1.52%)</title><rect x="27.4" y="163.0" width="17.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.4" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (71 samples, 1.50%)</title><rect x="27.7" y="147.0" width="17.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="30.7" y="158.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.15%)</title><rect x="28.2" y="131.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.13%)</title><rect x="28.4" y="115.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="31.4" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.06%)</title><rect x="29.1" y="99.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.1" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (62 samples, 1.31%)</title><rect x="29.9" y="131.0" width="15.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.9" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (62 samples, 1.31%)</title><rect x="29.9" y="115.0" width="15.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="32.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (62 samples, 1.31%)</title><rect x="29.9" y="99.0" width="15.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.9" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (62 samples, 1.31%)</title><rect x="29.9" y="83.0" width="15.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.9" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (62 samples, 1.31%)</title><rect x="29.9" y="67.0" width="15.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="32.9" y="78.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.08%)</title><rect x="45.8" y="387.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="48.8" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.08%)</title><rect x="45.8" y="371.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="48.8" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.06%)</title><rect x="45.8" y="355.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.8" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="45.8" y="339.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.8" y="350.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.04%)</title><rect x="46.8" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="49.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.put (449 samples, 9.46%)</title><rect x="50.8" y="803.0" width="111.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.8" y="814.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.06%)</title><rect x="50.8" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.06%)</title><rect x="50.8" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="50.8" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="50.8" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="50.8" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="50.8" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="53.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="50.8" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (446 samples, 9.40%)</title><rect x="51.5" y="787.0" width="110.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.5" y="798.0">ru/mail/polis..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (443 samples, 9.33%)</title><rect x="51.5" y="771.0" width="110.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.5" y="782.0">org/rocksdb/R..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="51.5" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.5" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (441 samples, 9.29%)</title><rect x="52.0" y="755.0" width="109.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.0" y="766.0">org/rocksdb/R..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (343 samples, 7.23%)</title><rect x="52.5" y="739.0" width="85.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="55.5" y="750.0">Java_org_r..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (340 samples, 7.16%)</title><rect x="53.3" y="723.0" width="84.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="56.3" y="734.0">rocksdb_pu..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="53.8" y="707.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="56.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (336 samples, 7.08%)</title><rect x="54.3" y="707.0" width="83.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="57.3" y="718.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (335 samples, 7.06%)</title><rect x="54.5" y="691.0" width="83.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="57.5" y="702.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (334 samples, 7.04%)</title><rect x="54.5" y="675.0" width="83.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="57.5" y="686.0">rocksdb::..</text>
</g>
<g>
<title>cfree (2 samples, 0.04%)</title><rect x="55.0" y="659.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="58.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (320 samples, 6.74%)</title><rect x="55.7" y="659.0" width="79.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="58.7" y="670.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.04%)</title><rect x="56.7" y="643.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="59.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (310 samples, 6.53%)</title><rect x="57.2" y="643.0" width="77.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="60.2" y="654.0">rocksdb::..</text>
</g>
<g>
<title>__sched_yield (67 samples, 1.41%)</title><rect x="59.7" y="627.0" width="16.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="62.7" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 1.24%)</title><rect x="61.7" y="611.0" width="14.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="64.7" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.04%)</title><rect x="61.7" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="64.7" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 1.20%)</title><rect x="62.2" y="595.0" width="14.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="65.2" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (51 samples, 1.07%)</title><rect x="63.7" y="579.0" width="12.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="66.7" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (51 samples, 1.07%)</title><rect x="63.7" y="563.0" width="12.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="66.7" y="574.0"></text>
</g>
<g>
<title>schedule (51 samples, 1.07%)</title><rect x="63.7" y="547.0" width="12.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="66.7" y="558.0"></text>
</g>
<g>
<title>__schedule (51 samples, 1.07%)</title><rect x="63.7" y="531.0" width="12.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="66.7" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.11%)</title><rect x="75.1" y="515.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="78.1" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="76.4" y="627.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="79.4" y="638.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="77.1" y="627.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="80.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (27 samples, 0.57%)</title><rect x="77.9" y="627.0" width="6.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="80.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (27 samples, 0.57%)</title><rect x="77.9" y="611.0" width="6.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="80.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (25 samples, 0.53%)</title><rect x="78.4" y="595.0" width="6.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="81.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (22 samples, 0.46%)</title><rect x="79.1" y="579.0" width="5.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="82.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (21 samples, 0.44%)</title><rect x="79.4" y="563.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="82.4" y="574.0"></text>
</g>
<g>
<title>__write (20 samples, 0.42%)</title><rect x="79.6" y="547.0" width="5.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="82.6" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.38%)</title><rect x="80.1" y="531.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.38%)</title><rect x="80.1" y="515.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.1" y="526.0"></text>
</g>
<g>
<title>__x64_sys_write (18 samples, 0.38%)</title><rect x="80.1" y="499.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.1" y="510.0"></text>
</g>
<g>
<title>ksys_write (18 samples, 0.38%)</title><rect x="80.1" y="483.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="83.1" y="494.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.36%)</title><rect x="80.4" y="467.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="83.4" y="478.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.34%)</title><rect x="80.6" y="451.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.6" y="462.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.32%)</title><rect x="80.9" y="435.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="83.9" y="446.0"></text>
</g>
<g>
<title>ext4_file_write_iter (15 samples, 0.32%)</title><rect x="80.9" y="419.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="83.9" y="430.0"></text>
</g>
<g>
<title>__generic_file_write_iter (15 samples, 0.32%)</title><rect x="80.9" y="403.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="83.9" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (14 samples, 0.29%)</title><rect x="81.1" y="387.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="84.1" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (5 samples, 0.11%)</title><rect x="81.4" y="371.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="84.4" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.04%)</title><rect x="81.4" y="355.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="84.4" y="366.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.04%)</title><rect x="81.4" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="84.4" y="350.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.06%)</title><rect x="81.9" y="355.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="84.9" y="366.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.06%)</title><rect x="81.9" y="339.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="84.9" y="350.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (2 samples, 0.04%)</title><rect x="81.9" y="323.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="84.9" y="334.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (2 samples, 0.04%)</title><rect x="81.9" y="307.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="84.9" y="318.0"></text>
</g>
<g>
<title>mem_cgroup_commit_charge (2 samples, 0.04%)</title><rect x="81.9" y="291.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="84.9" y="302.0"></text>
</g>
<g>
<title>ext4_da_write_end (7 samples, 0.15%)</title><rect x="82.6" y="371.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.6" y="382.0"></text>
</g>
<g>
<title>generic_write_end (6 samples, 0.13%)</title><rect x="82.8" y="355.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="85.8" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (5 samples, 0.11%)</title><rect x="82.8" y="339.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="85.8" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (5 samples, 0.11%)</title><rect x="82.8" y="323.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.8" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (5 samples, 0.11%)</title><rect x="82.8" y="307.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="85.8" y="318.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="82.8" y="291.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="85.8" y="302.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.04%)</title><rect x="82.8" y="275.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="85.8" y="286.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.06%)</title><rect x="83.3" y="291.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="86.3" y="302.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.06%)</title><rect x="83.3" y="275.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="86.3" y="286.0"></text>
</g>
<g>
<title>ext4_get_group_desc (2 samples, 0.04%)</title><rect x="83.6" y="259.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.6" y="270.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.04%)</title><rect x="84.8" y="627.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="87.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (7 samples, 0.15%)</title><rect x="85.6" y="627.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="88.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 0.15%)</title><rect x="85.6" y="611.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="88.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (7 samples, 0.15%)</title><rect x="85.6" y="595.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="88.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.13%)</title><rect x="85.8" y="579.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="88.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.13%)</title><rect x="85.8" y="563.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="88.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.11%)</title><rect x="86.1" y="547.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="89.1" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.08%)</title><rect x="86.3" y="531.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="89.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.08%)</title><rect x="86.3" y="515.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="89.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.08%)</title><rect x="86.3" y="499.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="89.3" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="86.3" y="483.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="89.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (40 samples, 0.84%)</title><rect x="87.3" y="627.0" width="10.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="90.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (36 samples, 0.76%)</title><rect x="87.8" y="611.0" width="9.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="90.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (34 samples, 0.72%)</title><rect x="88.3" y="595.0" width="8.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="91.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (32 samples, 0.67%)</title><rect x="88.6" y="579.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="91.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (32 samples, 0.67%)</title><rect x="88.6" y="563.0" width="7.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="91.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (30 samples, 0.63%)</title><rect x="88.8" y="547.0" width="7.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="91.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (26 samples, 0.55%)</title><rect x="89.6" y="531.0" width="6.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="92.6" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (26 samples, 0.55%)</title><rect x="89.6" y="515.0" width="6.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="92.6" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (20 samples, 0.42%)</title><rect x="90.1" y="499.0" width="4.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="93.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (15 samples, 0.32%)</title><rect x="91.3" y="483.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="94.3" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="91.3" y="467.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="94.3" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.13%)</title><rect x="92.0" y="467.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="95.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.13%)</title><rect x="93.5" y="467.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="96.5" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="94.3" y="451.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="97.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (4 samples, 0.08%)</title><rect x="95.0" y="499.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="98.0" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="95.3" y="483.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="98.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (53 samples, 1.12%)</title><rect x="97.3" y="627.0" width="13.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="100.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (86 samples, 1.81%)</title><rect x="110.7" y="627.0" width="21.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="113.7" y="638.0">r..</text>
</g>
<g>
<title>__sched_yield (56 samples, 1.18%)</title><rect x="111.2" y="611.0" width="13.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="114.2" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.07%)</title><rect x="112.4" y="595.0" width="12.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="115.4" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 1.05%)</title><rect x="112.7" y="579.0" width="12.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="115.7" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (43 samples, 0.91%)</title><rect x="114.4" y="563.0" width="10.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="117.4" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (43 samples, 0.91%)</title><rect x="114.4" y="547.0" width="10.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="117.4" y="558.0"></text>
</g>
<g>
<title>schedule (42 samples, 0.88%)</title><rect x="114.7" y="531.0" width="10.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="117.7" y="542.0"></text>
</g>
<g>
<title>__schedule (42 samples, 0.88%)</title><rect x="114.7" y="515.0" width="10.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="117.7" y="526.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.13%)</title><rect x="125.1" y="611.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="128.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (20 samples, 0.42%)</title><rect x="126.6" y="611.0" width="5.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="129.6" y="622.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.04%)</title><rect x="131.6" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="134.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="132.6" y="627.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="135.6" y="638.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.04%)</title><rect x="133.8" y="627.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="136.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.08%)</title><rect x="135.3" y="659.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="138.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="135.6" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="138.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.04%)</title><rect x="136.3" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="139.3" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.04%)</title><rect x="137.1" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="140.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.42%)</title><rect x="137.8" y="739.0" width="5.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="140.8" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (15 samples, 0.32%)</title><rect x="137.8" y="723.0" width="3.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="140.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.32%)</title><rect x="137.8" y="707.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="140.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.32%)</title><rect x="137.8" y="691.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="140.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.29%)</title><rect x="138.0" y="675.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="141.0" y="686.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.29%)</title><rect x="138.0" y="659.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="141.0" y="670.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.29%)</title><rect x="138.0" y="643.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="141.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.25%)</title><rect x="138.0" y="627.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.0" y="638.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.25%)</title><rect x="138.0" y="611.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.0" y="622.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.25%)</title><rect x="138.0" y="595.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="141.0" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.25%)</title><rect x="138.0" y="579.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="141.0" y="590.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="141.8" y="723.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="144.8" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (68 samples, 1.43%)</title><rect x="143.0" y="739.0" width="16.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="146.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 1.43%)</title><rect x="143.0" y="723.0" width="16.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="146.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 1.43%)</title><rect x="143.0" y="707.0" width="16.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (68 samples, 1.43%)</title><rect x="143.0" y="691.0" width="16.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="146.0" y="702.0"></text>
</g>
<g>
<title>do_futex (68 samples, 1.43%)</title><rect x="143.0" y="675.0" width="16.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="146.0" y="686.0"></text>
</g>
<g>
<title>futex_wake (68 samples, 1.43%)</title><rect x="143.0" y="659.0" width="16.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="146.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (67 samples, 1.41%)</title><rect x="143.3" y="643.0" width="16.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="146.3" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (67 samples, 1.41%)</title><rect x="143.3" y="627.0" width="16.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="146.3" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (67 samples, 1.41%)</title><rect x="143.3" y="611.0" width="16.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="146.3" y="622.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.15%)</title><rect x="159.9" y="739.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="162.9" y="750.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="160.9" y="723.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="163.9" y="734.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="160.9" y="707.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="163.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (3 samples, 0.06%)</title><rect x="161.7" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="162.4" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="162.4" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="162.4" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.21%)</title><rect x="162.9" y="851.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="163.4" y="835.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="163.4" y="819.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.08%)</title><rect x="164.4" y="835.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="165.4" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="165.4" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="165.4" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="165.9" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="165.9" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.34%)</title><rect x="166.4" y="867.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.34%)</title><rect x="166.4" y="851.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.4" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="166.9" y="835.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="169.9" y="846.0"></text>
</g>
<g>
<title>__recv (12 samples, 0.25%)</title><rect x="167.4" y="835.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="170.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.23%)</title><rect x="167.6" y="819.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.21%)</title><rect x="167.9" y="803.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="170.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 0.21%)</title><rect x="167.9" y="787.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="170.9" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.21%)</title><rect x="167.9" y="771.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="170.9" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (8 samples, 0.17%)</title><rect x="168.4" y="755.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="171.4" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (6 samples, 0.13%)</title><rect x="168.6" y="739.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="171.6" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.13%)</title><rect x="168.6" y="723.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="171.6" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="168.6" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="171.6" y="718.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="168.6" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="171.6" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="168.6" y="675.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="171.6" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.04%)</title><rect x="168.6" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="171.6" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.04%)</title><rect x="169.4" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="172.4" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.04%)</title><rect x="169.4" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="172.4" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=44075] (595 samples, 12.54%)</title><rect x="170.4" y="931.0" width="147.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="173.4" y="942.0">[NIO Selector #1 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (595 samples, 12.54%)</title><rect x="170.4" y="915.0" width="147.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.4" y="926.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 0.40%)</title><rect x="170.9" y="899.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (19 samples, 0.40%)</title><rect x="170.9" y="883.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.9" y="894.0"></text>
</g>
<g>
<title>epoll_wait (18 samples, 0.38%)</title><rect x="171.1" y="867.0" width="4.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="174.1" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.38%)</title><rect x="171.1" y="851.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="174.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.38%)</title><rect x="171.1" y="835.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="174.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (18 samples, 0.38%)</title><rect x="171.1" y="819.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="174.1" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (17 samples, 0.36%)</title><rect x="171.4" y="803.0" width="4.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.4" y="814.0"></text>
</g>
<g>
<title>ep_poll (16 samples, 0.34%)</title><rect x="171.6" y="787.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="174.6" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (7 samples, 0.15%)</title><rect x="171.6" y="771.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="174.6" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.13%)</title><rect x="171.9" y="755.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="174.9" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.08%)</title><rect x="172.1" y="739.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="175.1" y="750.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.06%)</title><rect x="172.1" y="723.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="175.1" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.04%)</title><rect x="172.4" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="175.4" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.17%)</title><rect x="173.6" y="771.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="176.6" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.17%)</title><rect x="173.6" y="755.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.6" y="766.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.17%)</title><rect x="173.6" y="739.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="176.6" y="750.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.17%)</title><rect x="173.6" y="723.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="176.6" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.15%)</title><rect x="173.8" y="707.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="176.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (574 samples, 12.09%)</title><rect x="175.6" y="899.0" width="142.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.6" y="910.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (573 samples, 12.07%)</title><rect x="175.8" y="883.0" width="142.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.8" y="894.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (557 samples, 11.74%)</title><rect x="175.8" y="867.0" width="138.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.8" y="878.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (548 samples, 11.55%)</title><rect x="176.1" y="851.0" width="136.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.1" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (548 samples, 11.55%)</title><rect x="176.1" y="835.0" width="136.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.1" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (545 samples, 11.48%)</title><rect x="176.1" y="819.0" width="135.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.1" y="830.0">RequestHandler1_p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (127 samples, 2.68%)</title><rect x="176.1" y="803.0" width="31.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.1" y="814.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="176.1" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="176.1" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="176.1" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (124 samples, 2.61%)</title><rect x="176.8" y="787.0" width="30.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.8" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 2.59%)</title><rect x="177.1" y="771.0" width="30.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.1" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 2.59%)</title><rect x="177.1" y="755.0" width="30.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.1" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (122 samples, 2.57%)</title><rect x="177.3" y="739.0" width="30.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.3" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (122 samples, 2.57%)</title><rect x="177.3" y="723.0" width="30.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.3" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.06%)</title><rect x="177.8" y="707.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="180.8" y="718.0"></text>
</g>
<g>
<title>send (117 samples, 2.47%)</title><rect x="178.6" y="707.0" width="29.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="181.6" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (116 samples, 2.44%)</title><rect x="178.8" y="691.0" width="28.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="181.8" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (116 samples, 2.44%)</title><rect x="178.8" y="675.0" width="28.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="181.8" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (116 samples, 2.44%)</title><rect x="178.8" y="659.0" width="28.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.8" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (116 samples, 2.44%)</title><rect x="178.8" y="643.0" width="28.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.8" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (114 samples, 2.40%)</title><rect x="178.8" y="627.0" width="28.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="181.8" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (111 samples, 2.34%)</title><rect x="179.1" y="611.0" width="27.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.1" y="622.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (111 samples, 2.34%)</title><rect x="179.1" y="595.0" width="27.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="182.1" y="606.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (109 samples, 2.30%)</title><rect x="179.6" y="579.0" width="27.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="182.6" y="590.0">t..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.04%)</title><rect x="179.6" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="182.6" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.13%)</title><rect x="180.3" y="563.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="183.3" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.13%)</title><rect x="180.3" y="547.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="183.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.06%)</title><rect x="180.6" y="531.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="183.6" y="542.0"></text>
</g>
<g>
<title>memset (2 samples, 0.04%)</title><rect x="181.3" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="184.3" y="542.0"></text>
</g>
<g>
<title>tcp_push (100 samples, 2.11%)</title><rect x="181.8" y="563.0" width="24.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.8" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (100 samples, 2.11%)</title><rect x="181.8" y="547.0" width="24.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="184.8" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (100 samples, 2.11%)</title><rect x="181.8" y="531.0" width="24.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="184.8" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (94 samples, 1.98%)</title><rect x="182.1" y="515.0" width="23.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="185.1" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (91 samples, 1.92%)</title><rect x="182.5" y="499.0" width="22.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="185.5" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (91 samples, 1.92%)</title><rect x="182.5" y="483.0" width="22.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="185.5" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (89 samples, 1.88%)</title><rect x="183.0" y="467.0" width="22.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="186.0" y="478.0">i..</text>
</g>
<g>
<title>ip_output (86 samples, 1.81%)</title><rect x="183.3" y="451.0" width="21.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="186.3" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (85 samples, 1.79%)</title><rect x="183.5" y="435.0" width="21.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="186.5" y="446.0">i..</text>
</g>
<g>
<title>__ip_finish_output (85 samples, 1.79%)</title><rect x="183.5" y="419.0" width="21.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="186.5" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (85 samples, 1.79%)</title><rect x="183.5" y="403.0" width="21.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="186.5" y="414.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (78 samples, 1.64%)</title><rect x="184.3" y="387.0" width="19.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="187.3" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (78 samples, 1.64%)</title><rect x="184.3" y="371.0" width="19.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.3" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (78 samples, 1.64%)</title><rect x="184.3" y="355.0" width="19.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="187.3" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (78 samples, 1.64%)</title><rect x="184.3" y="339.0" width="19.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="187.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (77 samples, 1.62%)</title><rect x="184.5" y="323.0" width="19.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="187.5" y="334.0"></text>
</g>
<g>
<title>process_backlog (77 samples, 1.62%)</title><rect x="184.5" y="307.0" width="19.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="187.5" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (76 samples, 1.60%)</title><rect x="184.8" y="291.0" width="18.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="187.8" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (75 samples, 1.58%)</title><rect x="184.8" y="275.0" width="18.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv (75 samples, 1.58%)</title><rect x="184.8" y="259.0" width="18.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="187.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (75 samples, 1.58%)</title><rect x="184.8" y="243.0" width="18.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="187.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (75 samples, 1.58%)</title><rect x="184.8" y="227.0" width="18.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.8" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (75 samples, 1.58%)</title><rect x="184.8" y="211.0" width="18.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="187.8" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (75 samples, 1.58%)</title><rect x="184.8" y="195.0" width="18.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="187.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (74 samples, 1.56%)</title><rect x="185.0" y="179.0" width="18.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="188.0" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="185.8" y="163.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="188.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (67 samples, 1.41%)</title><rect x="186.8" y="163.0" width="16.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="189.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (66 samples, 1.39%)</title><rect x="187.0" y="147.0" width="16.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="190.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.06%)</title><rect x="187.5" y="131.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="190.5" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (61 samples, 1.29%)</title><rect x="188.3" y="131.0" width="15.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="191.3" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (61 samples, 1.29%)</title><rect x="188.3" y="115.0" width="15.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="191.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (60 samples, 1.26%)</title><rect x="188.5" y="99.0" width="14.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="191.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (60 samples, 1.26%)</title><rect x="188.5" y="83.0" width="14.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.5" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (60 samples, 1.26%)</title><rect x="188.5" y="67.0" width="14.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.5" y="78.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.08%)</title><rect x="203.7" y="387.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="206.7" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.08%)</title><rect x="203.7" y="371.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="206.7" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.06%)</title><rect x="203.9" y="355.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="206.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.06%)</title><rect x="203.9" y="339.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="206.9" y="350.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.04%)</title><rect x="204.7" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="207.7" y="462.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="206.7" y="611.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="209.7" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.04%)</title><rect x="206.7" y="595.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="209.7" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="206.7" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.7" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="207.2" y="627.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="210.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="207.2" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="210.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.put (418 samples, 8.81%)</title><rect x="207.7" y="803.0" width="103.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.7" y="814.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="207.7" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="207.7" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="207.7" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="207.7" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="207.7" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="207.7" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="207.7" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (416 samples, 8.77%)</title><rect x="208.2" y="787.0" width="103.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.2" y="798.0">ru/mail/poli..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (413 samples, 8.70%)</title><rect x="208.2" y="771.0" width="102.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.2" y="782.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (412 samples, 8.68%)</title><rect x="208.4" y="755.0" width="102.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.4" y="766.0">org/rocksdb/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (281 samples, 5.92%)</title><rect x="208.4" y="739.0" width="69.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="211.4" y="750.0">Java_or..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (278 samples, 5.86%)</title><rect x="209.2" y="723.0" width="69.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="212.2" y="734.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (274 samples, 5.77%)</title><rect x="209.7" y="707.0" width="68.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="212.7" y="718.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (274 samples, 5.77%)</title><rect x="209.7" y="691.0" width="68.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="212.7" y="702.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (274 samples, 5.77%)</title><rect x="209.7" y="675.0" width="68.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="212.7" y="686.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (270 samples, 5.69%)</title><rect x="209.7" y="659.0" width="67.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="212.7" y="670.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (268 samples, 5.65%)</title><rect x="209.9" y="643.0" width="66.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="212.9" y="654.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.06%)</title><rect x="210.6" y="627.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="213.6" y="638.0"></text>
</g>
<g>
<title>__sched_yield (64 samples, 1.35%)</title><rect x="211.6" y="627.0" width="16.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="214.6" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 1.18%)</title><rect x="213.6" y="611.0" width="14.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.6" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (5 samples, 0.11%)</title><rect x="213.6" y="595.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 1.07%)</title><rect x="214.9" y="595.0" width="12.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="217.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (43 samples, 0.91%)</title><rect x="216.9" y="579.0" width="10.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="219.9" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (43 samples, 0.91%)</title><rect x="216.9" y="563.0" width="10.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="219.9" y="574.0"></text>
</g>
<g>
<title>schedule (43 samples, 0.91%)</title><rect x="216.9" y="547.0" width="10.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="219.9" y="558.0"></text>
</g>
<g>
<title>__schedule (43 samples, 0.91%)</title><rect x="216.9" y="531.0" width="10.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.9" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.19%)</title><rect x="225.3" y="515.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="228.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (27 samples, 0.57%)</title><rect x="228.3" y="627.0" width="6.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="231.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.04%)</title><rect x="228.3" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="231.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (24 samples, 0.51%)</title><rect x="228.8" y="611.0" width="6.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="231.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (24 samples, 0.51%)</title><rect x="228.8" y="595.0" width="6.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="231.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (20 samples, 0.42%)</title><rect x="229.3" y="579.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="232.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (19 samples, 0.40%)</title><rect x="229.5" y="563.0" width="4.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="232.5" y="574.0"></text>
</g>
<g>
<title>__write (19 samples, 0.40%)</title><rect x="229.5" y="547.0" width="4.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="232.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.34%)</title><rect x="230.3" y="531.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="233.3" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.32%)</title><rect x="230.5" y="515.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="233.5" y="526.0"></text>
</g>
<g>
<title>__x64_sys_write (15 samples, 0.32%)</title><rect x="230.5" y="499.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="233.5" y="510.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.32%)</title><rect x="230.5" y="483.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="233.5" y="494.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.32%)</title><rect x="230.5" y="467.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.5" y="478.0"></text>
</g>
<g>
<title>__vfs_write (13 samples, 0.27%)</title><rect x="230.5" y="451.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="233.5" y="462.0"></text>
</g>
<g>
<title>new_sync_write (13 samples, 0.27%)</title><rect x="230.5" y="435.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="233.5" y="446.0"></text>
</g>
<g>
<title>ext4_file_write_iter (13 samples, 0.27%)</title><rect x="230.5" y="419.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="233.5" y="430.0"></text>
</g>
<g>
<title>__generic_file_write_iter (13 samples, 0.27%)</title><rect x="230.5" y="403.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="233.5" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (11 samples, 0.23%)</title><rect x="231.0" y="387.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="234.0" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.08%)</title><rect x="231.3" y="371.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="234.3" y="382.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.04%)</title><rect x="231.8" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="234.8" y="366.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.04%)</title><rect x="231.8" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="234.8" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end (5 samples, 0.11%)</title><rect x="232.3" y="371.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="235.3" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.06%)</title><rect x="232.3" y="355.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="235.3" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.06%)</title><rect x="232.3" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="235.3" y="350.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.04%)</title><rect x="233.0" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.0" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.04%)</title><rect x="233.0" y="339.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="236.0" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.04%)</title><rect x="233.0" y="323.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="236.0" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.04%)</title><rect x="233.8" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="236.8" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="233.8" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="236.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="234.3" y="579.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="237.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (5 samples, 0.11%)</title><rect x="235.0" y="627.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="238.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.11%)</title><rect x="235.0" y="611.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="238.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (5 samples, 0.11%)</title><rect x="235.0" y="595.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="238.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.11%)</title><rect x="235.0" y="579.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="238.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 0.11%)</title><rect x="235.0" y="563.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="238.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.11%)</title><rect x="235.0" y="547.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="238.0" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.06%)</title><rect x="235.0" y="531.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="238.0" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="235.0" y="515.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="238.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="235.0" y="499.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="238.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.04%)</title><rect x="235.8" y="531.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="238.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.04%)</title><rect x="235.8" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="238.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (36 samples, 0.76%)</title><rect x="236.3" y="627.0" width="8.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="239.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.04%)</title><rect x="236.5" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="239.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.04%)</title><rect x="236.5" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="239.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (33 samples, 0.70%)</title><rect x="237.0" y="611.0" width="8.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="240.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (33 samples, 0.70%)</title><rect x="237.0" y="595.0" width="8.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="240.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (33 samples, 0.70%)</title><rect x="237.0" y="579.0" width="8.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="240.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (2 samples, 0.04%)</title><rect x="237.0" y="563.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="240.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (30 samples, 0.63%)</title><rect x="237.7" y="563.0" width="7.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="240.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (27 samples, 0.57%)</title><rect x="238.5" y="547.0" width="6.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="241.5" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.08%)</title><rect x="238.5" y="531.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="241.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (22 samples, 0.46%)</title><rect x="239.7" y="531.0" width="5.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="242.7" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (22 samples, 0.46%)</title><rect x="239.7" y="515.0" width="5.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="242.7" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (18 samples, 0.38%)</title><rect x="240.2" y="499.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="243.2" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (9 samples, 0.19%)</title><rect x="242.5" y="483.0" width="2.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="245.5" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="242.5" y="467.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="245.5" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="243.2" y="467.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="246.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.08%)</title><rect x="243.7" y="467.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="246.7" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="244.0" y="451.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="247.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (45 samples, 0.95%)</title><rect x="245.2" y="627.0" width="11.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="248.2" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="255.1" y="611.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="258.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (73 samples, 1.54%)</title><rect x="256.4" y="627.0" width="18.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="259.4" y="638.0"></text>
</g>
<g>
<title>__sched_yield (39 samples, 0.82%)</title><rect x="256.6" y="611.0" width="9.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="259.6" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.76%)</title><rect x="257.4" y="595.0" width="8.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="260.4" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.04%)</title><rect x="257.4" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="260.4" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.72%)</title><rect x="257.9" y="579.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="260.9" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (30 samples, 0.63%)</title><rect x="258.9" y="563.0" width="7.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="261.9" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (30 samples, 0.63%)</title><rect x="258.9" y="547.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="261.9" y="558.0"></text>
</g>
<g>
<title>schedule (30 samples, 0.63%)</title><rect x="258.9" y="531.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="261.9" y="542.0"></text>
</g>
<g>
<title>__schedule (30 samples, 0.63%)</title><rect x="258.9" y="515.0" width="7.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="261.9" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="265.8" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="268.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (31 samples, 0.65%)</title><rect x="266.6" y="611.0" width="7.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="269.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.04%)</title><rect x="273.8" y="595.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="276.8" y="606.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (6 samples, 0.13%)</title><rect x="275.0" y="627.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="278.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.04%)</title><rect x="276.8" y="659.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="279.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.04%)</title><rect x="277.8" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="280.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.51%)</title><rect x="278.3" y="739.0" width="5.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="281.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (21 samples, 0.44%)</title><rect x="278.3" y="723.0" width="5.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="281.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.40%)</title><rect x="278.8" y="707.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.38%)</title><rect x="279.0" y="691.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="282.0" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.36%)</title><rect x="279.3" y="675.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="282.3" y="686.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.36%)</title><rect x="279.3" y="659.0" width="4.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="282.3" y="670.0"></text>
</g>
<g>
<title>futex_wait (17 samples, 0.36%)</title><rect x="279.3" y="643.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="282.3" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.29%)</title><rect x="279.3" y="627.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="282.3" y="638.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.29%)</title><rect x="279.3" y="611.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="282.3" y="622.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.29%)</title><rect x="279.3" y="595.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="282.3" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.29%)</title><rect x="279.3" y="579.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="282.3" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="282.7" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.7" y="638.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.04%)</title><rect x="284.2" y="739.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="287.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (83 samples, 1.75%)</title><rect x="284.7" y="739.0" width="20.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="287.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 1.75%)</title><rect x="284.7" y="723.0" width="20.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="287.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (83 samples, 1.75%)</title><rect x="284.7" y="707.0" width="20.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="287.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (83 samples, 1.75%)</title><rect x="284.7" y="691.0" width="20.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="287.7" y="702.0"></text>
</g>
<g>
<title>do_futex (83 samples, 1.75%)</title><rect x="284.7" y="675.0" width="20.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="287.7" y="686.0"></text>
</g>
<g>
<title>futex_wake (83 samples, 1.75%)</title><rect x="284.7" y="659.0" width="20.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="287.7" y="670.0"></text>
</g>
<g>
<title>wake_up_q (82 samples, 1.73%)</title><rect x="285.0" y="643.0" width="20.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.0" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (82 samples, 1.73%)</title><rect x="285.0" y="627.0" width="20.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="288.0" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (82 samples, 1.73%)</title><rect x="285.0" y="611.0" width="20.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="288.0" y="622.0"></text>
</g>
<g>
<title>clock_gettime (21 samples, 0.44%)</title><rect x="305.4" y="739.0" width="5.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="308.4" y="750.0"></text>
</g>
<g>
<title>clock_gettime (16 samples, 0.34%)</title><rect x="306.6" y="723.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="309.6" y="734.0"></text>
</g>
<g>
<title>[vdso] (16 samples, 0.34%)</title><rect x="306.6" y="707.0" width="4.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="309.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (3 samples, 0.06%)</title><rect x="310.8" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (2 samples, 0.04%)</title><rect x="311.1" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="311.1" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="311.1" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="311.1" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="311.1" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.06%)</title><rect x="311.6" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.06%)</title><rect x="311.6" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="311.6" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.11%)</title><rect x="312.3" y="851.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="312.3" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.06%)</title><rect x="312.8" y="835.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="313.6" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="313.8" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.34%)</title><rect x="314.3" y="867.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.34%)</title><rect x="314.3" y="851.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.3" y="862.0"></text>
</g>
<g>
<title>__recv (16 samples, 0.34%)</title><rect x="314.3" y="835.0" width="4.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="317.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.32%)</title><rect x="314.6" y="819.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="317.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.32%)</title><rect x="314.6" y="803.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="317.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.32%)</title><rect x="314.6" y="787.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="317.6" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.32%)</title><rect x="314.6" y="771.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="317.6" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.29%)</title><rect x="314.8" y="755.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="317.8" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (14 samples, 0.29%)</title><rect x="314.8" y="739.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="317.8" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.29%)</title><rect x="314.8" y="723.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="317.8" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.11%)</title><rect x="316.1" y="707.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="319.1" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.11%)</title><rect x="316.1" y="691.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="319.1" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.06%)</title><rect x="316.6" y="675.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="319.6" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.04%)</title><rect x="316.8" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="319.8" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.04%)</title><rect x="316.8" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="319.8" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.06%)</title><rect x="317.3" y="707.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="320.3" y="718.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=44076] (640 samples, 13.49%)</title><rect x="318.3" y="931.0" width="159.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="321.3" y="942.0">[NIO Selector #2 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (640 samples, 13.49%)</title><rect x="318.3" y="915.0" width="159.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.3" y="926.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.29%)</title><rect x="318.6" y="899.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 0.25%)</title><rect x="319.0" y="883.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.0" y="894.0"></text>
</g>
<g>
<title>epoll_wait (12 samples, 0.25%)</title><rect x="319.0" y="867.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="322.0" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.23%)</title><rect x="319.3" y="851.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="322.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.23%)</title><rect x="319.3" y="835.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="322.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (11 samples, 0.23%)</title><rect x="319.3" y="819.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="322.3" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (11 samples, 0.23%)</title><rect x="319.3" y="803.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="322.3" y="814.0"></text>
</g>
<g>
<title>ep_poll (11 samples, 0.23%)</title><rect x="319.3" y="787.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="322.3" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.11%)</title><rect x="319.3" y="771.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="322.3" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.11%)</title><rect x="319.3" y="755.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.3" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.06%)</title><rect x="319.8" y="739.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="322.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.06%)</title><rect x="319.8" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="322.8" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.13%)</title><rect x="320.5" y="771.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.5" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.13%)</title><rect x="320.5" y="755.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.5" y="766.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.13%)</title><rect x="320.5" y="739.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="323.5" y="750.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.13%)</title><rect x="320.5" y="723.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="323.5" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.13%)</title><rect x="320.5" y="707.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="323.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (625 samples, 13.17%)</title><rect x="322.0" y="899.0" width="155.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.0" y="910.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (625 samples, 13.17%)</title><rect x="322.0" y="883.0" width="155.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.0" y="894.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (604 samples, 12.73%)</title><rect x="322.0" y="867.0" width="150.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.0" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (597 samples, 12.58%)</title><rect x="322.3" y="851.0" width="148.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.3" y="862.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (596 samples, 12.56%)</title><rect x="322.5" y="835.0" width="148.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.5" y="846.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (593 samples, 12.49%)</title><rect x="322.5" y="819.0" width="147.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.5" y="830.0">RequestHandler1_put..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (133 samples, 2.80%)</title><rect x="322.8" y="803.0" width="33.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.8" y="814.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="322.8" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="322.8" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="322.8" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.8" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="322.8" y="739.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="325.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (130 samples, 2.74%)</title><rect x="323.5" y="787.0" width="32.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.5" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (129 samples, 2.72%)</title><rect x="323.8" y="771.0" width="32.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.8" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (129 samples, 2.72%)</title><rect x="323.8" y="755.0" width="32.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.8" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (129 samples, 2.72%)</title><rect x="323.8" y="739.0" width="32.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="326.8" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (128 samples, 2.70%)</title><rect x="324.0" y="723.0" width="31.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.0" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.15%)</title><rect x="324.3" y="707.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="327.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.08%)</title><rect x="325.0" y="691.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="328.0" y="702.0"></text>
</g>
<g>
<title>send (120 samples, 2.53%)</title><rect x="326.0" y="707.0" width="29.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="329.0" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (120 samples, 2.53%)</title><rect x="326.0" y="691.0" width="29.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="329.0" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (119 samples, 2.51%)</title><rect x="326.3" y="675.0" width="29.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="329.3" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (119 samples, 2.51%)</title><rect x="326.3" y="659.0" width="29.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="329.3" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (119 samples, 2.51%)</title><rect x="326.3" y="643.0" width="29.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="329.3" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (114 samples, 2.40%)</title><rect x="327.0" y="627.0" width="28.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="330.0" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (113 samples, 2.38%)</title><rect x="327.0" y="611.0" width="28.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="330.0" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (113 samples, 2.38%)</title><rect x="327.0" y="595.0" width="28.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="330.0" y="606.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (109 samples, 2.30%)</title><rect x="327.5" y="579.0" width="27.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="330.5" y="590.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.19%)</title><rect x="328.0" y="563.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="331.0" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.19%)</title><rect x="328.0" y="547.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.11%)</title><rect x="328.0" y="531.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.08%)</title><rect x="328.0" y="515.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.0" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.04%)</title><rect x="329.2" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="332.2" y="542.0"></text>
</g>
<g>
<title>tcp_push (98 samples, 2.06%)</title><rect x="330.2" y="563.0" width="24.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="333.2" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (97 samples, 2.04%)</title><rect x="330.2" y="547.0" width="24.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="333.2" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (97 samples, 2.04%)</title><rect x="330.2" y="531.0" width="24.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="333.2" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (92 samples, 1.94%)</title><rect x="330.2" y="515.0" width="22.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="333.2" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (91 samples, 1.92%)</title><rect x="330.2" y="499.0" width="22.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="333.2" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (91 samples, 1.92%)</title><rect x="330.2" y="483.0" width="22.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="333.2" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (90 samples, 1.90%)</title><rect x="330.5" y="467.0" width="22.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="333.5" y="478.0">i..</text>
</g>
<g>
<title>ip_output (90 samples, 1.90%)</title><rect x="330.5" y="451.0" width="22.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.5" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (90 samples, 1.90%)</title><rect x="330.5" y="435.0" width="22.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="333.5" y="446.0">i..</text>
</g>
<g>
<title>__ip_finish_output (89 samples, 1.88%)</title><rect x="330.7" y="419.0" width="22.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.7" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (89 samples, 1.88%)</title><rect x="330.7" y="403.0" width="22.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="333.7" y="414.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (82 samples, 1.73%)</title><rect x="331.0" y="387.0" width="20.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="334.0" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (82 samples, 1.73%)</title><rect x="331.0" y="371.0" width="20.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="334.0" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (82 samples, 1.73%)</title><rect x="331.0" y="355.0" width="20.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="334.0" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (82 samples, 1.73%)</title><rect x="331.0" y="339.0" width="20.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="334.0" y="350.0"></text>
</g>
<g>
<title>net_rx_action (82 samples, 1.73%)</title><rect x="331.0" y="323.0" width="20.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="334.0" y="334.0"></text>
</g>
<g>
<title>process_backlog (82 samples, 1.73%)</title><rect x="331.0" y="307.0" width="20.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="334.0" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (82 samples, 1.73%)</title><rect x="331.0" y="291.0" width="20.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="334.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (82 samples, 1.73%)</title><rect x="331.0" y="275.0" width="20.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="334.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (82 samples, 1.73%)</title><rect x="331.0" y="259.0" width="20.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="334.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (82 samples, 1.73%)</title><rect x="331.0" y="243.0" width="20.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="334.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (79 samples, 1.66%)</title><rect x="331.7" y="227.0" width="19.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="334.7" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (78 samples, 1.64%)</title><rect x="332.0" y="211.0" width="19.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="335.0" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (78 samples, 1.64%)</title><rect x="332.0" y="195.0" width="19.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="335.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (77 samples, 1.62%)</title><rect x="332.2" y="179.0" width="19.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="335.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (74 samples, 1.56%)</title><rect x="333.0" y="163.0" width="18.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="336.0" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (73 samples, 1.54%)</title><rect x="333.2" y="147.0" width="18.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.17%)</title><rect x="333.7" y="131.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="336.7" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.13%)</title><rect x="334.0" y="115.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="337.0" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="334.2" y="99.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="337.2" y="110.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="334.5" y="83.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="337.5" y="94.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="334.5" y="67.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="337.5" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="334.7" y="51.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="337.7" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="334.7" y="35.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="337.7" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (60 samples, 1.26%)</title><rect x="335.7" y="131.0" width="14.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="338.7" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (60 samples, 1.26%)</title><rect x="335.7" y="115.0" width="14.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (60 samples, 1.26%)</title><rect x="335.7" y="99.0" width="14.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="338.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (60 samples, 1.26%)</title><rect x="335.7" y="83.0" width="14.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="338.7" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (60 samples, 1.26%)</title><rect x="335.7" y="67.0" width="14.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="338.7" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.04%)</title><rect x="350.9" y="131.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="353.9" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.13%)</title><rect x="351.4" y="387.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="354.4" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.13%)</title><rect x="351.4" y="371.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="354.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="351.9" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="354.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="351.9" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="354.9" y="350.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.04%)</title><rect x="352.4" y="355.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.4" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.06%)</title><rect x="353.1" y="515.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="356.1" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.06%)</title><rect x="353.1" y="499.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="356.1" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="353.1" y="483.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="356.1" y="494.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.06%)</title><rect x="353.1" y="467.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="356.1" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="353.1" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.1" y="462.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="355.3" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="358.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.put (458 samples, 9.65%)</title><rect x="356.1" y="803.0" width="113.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.1" y="814.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="356.1" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="356.1" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="356.1" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="356.1" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.1" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="356.1" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (456 samples, 9.61%)</title><rect x="356.6" y="787.0" width="113.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.6" y="798.0">ru/mail/polis/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (454 samples, 9.57%)</title><rect x="356.6" y="771.0" width="112.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.6" y="782.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (454 samples, 9.57%)</title><rect x="356.6" y="755.0" width="112.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.6" y="766.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (313 samples, 6.60%)</title><rect x="356.6" y="739.0" width="77.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="359.6" y="750.0">Java_org_..</text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.06%)</title><rect x="356.6" y="723.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="359.6" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (305 samples, 6.43%)</title><rect x="358.6" y="723.0" width="75.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="361.6" y="734.0">rocksdb_..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (303 samples, 6.38%)</title><rect x="358.8" y="707.0" width="75.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="361.8" y="718.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (303 samples, 6.38%)</title><rect x="358.8" y="691.0" width="75.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="361.8" y="702.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (300 samples, 6.32%)</title><rect x="358.8" y="675.0" width="74.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="361.8" y="686.0">rocksdb:..</text>
</g>
<g>
<title>cfree (2 samples, 0.04%)</title><rect x="358.8" y="659.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="361.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (293 samples, 6.17%)</title><rect x="359.3" y="659.0" width="72.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="362.3" y="670.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::~ColumnFamilyHandleImpl() (2 samples, 0.04%)</title><rect x="359.6" y="643.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="362.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (286 samples, 6.03%)</title><rect x="360.1" y="643.0" width="71.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="363.1" y="654.0">rocksdb:..</text>
</g>
<g>
<title>__sched_yield (58 samples, 1.22%)</title><rect x="361.3" y="627.0" width="14.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="364.3" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.97%)</title><rect x="364.3" y="611.0" width="11.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="367.3" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 0.97%)</title><rect x="364.3" y="595.0" width="11.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="367.3" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (39 samples, 0.82%)</title><rect x="365.8" y="579.0" width="9.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="368.8" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (39 samples, 0.82%)</title><rect x="365.8" y="563.0" width="9.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="368.8" y="574.0"></text>
</g>
<g>
<title>schedule (39 samples, 0.82%)</title><rect x="365.8" y="547.0" width="9.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="368.8" y="558.0"></text>
</g>
<g>
<title>__schedule (39 samples, 0.82%)</title><rect x="365.8" y="531.0" width="9.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="368.8" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="374.7" y="515.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="377.7" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="375.7" y="627.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="378.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (37 samples, 0.78%)</title><rect x="376.5" y="627.0" width="9.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="379.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (3 samples, 0.06%)</title><rect x="376.5" y="611.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="379.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.04%)</title><rect x="376.7" y="595.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="379.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (34 samples, 0.72%)</title><rect x="377.2" y="611.0" width="8.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="380.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (33 samples, 0.70%)</title><rect x="377.5" y="595.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="380.5" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="377.5" y="579.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="380.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (28 samples, 0.59%)</title><rect x="378.0" y="579.0" width="6.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="381.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (26 samples, 0.55%)</title><rect x="378.5" y="563.0" width="6.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="381.5" y="574.0"></text>
</g>
<g>
<title>__write (26 samples, 0.55%)</title><rect x="378.5" y="547.0" width="6.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="381.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.53%)</title><rect x="378.7" y="531.0" width="6.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="381.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.53%)</title><rect x="378.7" y="515.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="381.7" y="526.0"></text>
</g>
<g>
<title>__x64_sys_write (25 samples, 0.53%)</title><rect x="378.7" y="499.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="381.7" y="510.0"></text>
</g>
<g>
<title>ksys_write (25 samples, 0.53%)</title><rect x="378.7" y="483.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.7" y="494.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="378.7" y="467.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.7" y="478.0"></text>
</g>
<g>
<title>vfs_write (23 samples, 0.48%)</title><rect x="379.2" y="467.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="382.2" y="478.0"></text>
</g>
<g>
<title>__vfs_write (20 samples, 0.42%)</title><rect x="379.5" y="451.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="382.5" y="462.0"></text>
</g>
<g>
<title>new_sync_write (20 samples, 0.42%)</title><rect x="379.5" y="435.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.5" y="446.0"></text>
</g>
<g>
<title>ext4_file_write_iter (20 samples, 0.42%)</title><rect x="379.5" y="419.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="382.5" y="430.0"></text>
</g>
<g>
<title>__generic_file_write_iter (20 samples, 0.42%)</title><rect x="379.5" y="403.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="382.5" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (19 samples, 0.40%)</title><rect x="379.7" y="387.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="382.7" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (11 samples, 0.23%)</title><rect x="379.7" y="371.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="382.7" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.06%)</title><rect x="379.7" y="355.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="382.7" y="366.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.06%)</title><rect x="379.7" y="339.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.7" y="350.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.04%)</title><rect x="380.0" y="323.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="383.0" y="334.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.04%)</title><rect x="380.0" y="307.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="383.0" y="318.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.06%)</title><rect x="380.5" y="355.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="383.5" y="366.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (5 samples, 0.11%)</title><rect x="381.2" y="355.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="384.2" y="366.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.11%)</title><rect x="381.2" y="339.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.2" y="350.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.11%)</title><rect x="381.2" y="323.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="384.2" y="334.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.06%)</title><rect x="381.7" y="307.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="384.7" y="318.0"></text>
</g>
<g>
<title>ext4_da_write_end (8 samples, 0.17%)</title><rect x="382.4" y="371.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="385.4" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.04%)</title><rect x="382.4" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="385.4" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.04%)</title><rect x="382.4" y="339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="385.4" y="350.0"></text>
</g>
<g>
<title>generic_write_end (6 samples, 0.13%)</title><rect x="382.9" y="355.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="385.9" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.08%)</title><rect x="382.9" y="339.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.9" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.08%)</title><rect x="382.9" y="323.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="385.9" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.08%)</title><rect x="382.9" y="307.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="385.9" y="318.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="382.9" y="291.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.9" y="302.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.04%)</title><rect x="382.9" y="275.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="385.9" y="286.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.04%)</title><rect x="383.4" y="291.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="386.4" y="302.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="383.4" y="275.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="386.4" y="286.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.04%)</title><rect x="383.9" y="339.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="386.9" y="350.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (2 samples, 0.04%)</title><rect x="383.9" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="386.9" y="334.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.04%)</title><rect x="383.9" y="307.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="386.9" y="318.0"></text>
</g>
<g>
<title>__set_page_dirty (2 samples, 0.04%)</title><rect x="383.9" y="291.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="386.9" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="383.9" y="275.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="386.9" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.04%)</title><rect x="384.4" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="387.4" y="462.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="384.4" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.4" y="446.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="384.4" y="419.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="387.4" y="430.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="384.4" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="385.2" y="579.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="388.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 0.19%)</title><rect x="386.4" y="627.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="389.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 0.19%)</title><rect x="386.4" y="611.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="389.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 0.19%)</title><rect x="386.4" y="595.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="389.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.17%)</title><rect x="386.7" y="579.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="389.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.17%)</title><rect x="386.7" y="563.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="389.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 0.13%)</title><rect x="386.9" y="547.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="389.9" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.11%)</title><rect x="387.2" y="531.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="390.2" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.08%)</title><rect x="387.2" y="515.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="390.2" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.06%)</title><rect x="387.2" y="499.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="390.2" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="387.2" y="483.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="390.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (32 samples, 0.67%)</title><rect x="388.7" y="627.0" width="7.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="391.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.04%)</title><rect x="388.7" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="391.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (29 samples, 0.61%)</title><rect x="389.2" y="611.0" width="7.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="392.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (28 samples, 0.59%)</title><rect x="389.4" y="595.0" width="7.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="392.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (25 samples, 0.53%)</title><rect x="389.7" y="579.0" width="6.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="392.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (24 samples, 0.51%)</title><rect x="389.9" y="563.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="392.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (21 samples, 0.44%)</title><rect x="390.4" y="547.0" width="5.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="393.4" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.06%)</title><rect x="390.4" y="531.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="393.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (16 samples, 0.34%)</title><rect x="391.6" y="531.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="394.6" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (16 samples, 0.34%)</title><rect x="391.6" y="515.0" width="4.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="394.6" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (14 samples, 0.29%)</title><rect x="391.9" y="499.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="394.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (9 samples, 0.19%)</title><rect x="393.1" y="483.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="396.1" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="393.1" y="467.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="396.1" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.06%)</title><rect x="393.6" y="467.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="396.6" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="394.4" y="467.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="397.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="394.9" y="467.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="397.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (46 samples, 0.97%)</title><rect x="396.6" y="627.0" width="11.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="399.6" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="406.8" y="611.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="409.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="406.8" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="409.8" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="406.8" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="409.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (82 samples, 1.73%)</title><rect x="408.1" y="627.0" width="20.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="411.1" y="638.0"></text>
</g>
<g>
<title>__sched_yield (57 samples, 1.20%)</title><rect x="408.3" y="611.0" width="14.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="411.3" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 1.16%)</title><rect x="408.8" y="595.0" width="13.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="411.8" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.06%)</title><rect x="408.8" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="411.8" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (52 samples, 1.10%)</title><rect x="409.5" y="579.0" width="13.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="412.5" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (45 samples, 0.95%)</title><rect x="411.3" y="563.0" width="11.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.3" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (45 samples, 0.95%)</title><rect x="411.3" y="547.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="414.3" y="558.0"></text>
</g>
<g>
<title>schedule (45 samples, 0.95%)</title><rect x="411.3" y="531.0" width="11.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="414.3" y="542.0"></text>
</g>
<g>
<title>__schedule (45 samples, 0.95%)</title><rect x="411.3" y="515.0" width="11.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="414.3" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.08%)</title><rect x="421.5" y="499.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="424.5" y="510.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="422.5" y="611.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="425.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (18 samples, 0.38%)</title><rect x="423.0" y="611.0" width="4.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="426.0" y="622.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (3 samples, 0.06%)</title><rect x="427.7" y="611.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="430.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="428.4" y="627.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="431.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="428.9" y="627.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="431.9" y="638.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (4 samples, 0.08%)</title><rect x="430.2" y="627.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="433.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="432.7" y="659.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="435.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="433.4" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="436.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.57%)</title><rect x="434.4" y="739.0" width="6.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="437.4" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (23 samples, 0.48%)</title><rect x="434.7" y="723.0" width="5.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="437.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.42%)</title><rect x="435.4" y="707.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="438.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.42%)</title><rect x="435.4" y="691.0" width="5.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="438.4" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.40%)</title><rect x="435.7" y="675.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.7" y="686.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.40%)</title><rect x="435.7" y="659.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="438.7" y="670.0"></text>
</g>
<g>
<title>futex_wait (19 samples, 0.40%)</title><rect x="435.7" y="643.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="438.7" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 0.38%)</title><rect x="435.7" y="627.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="438.7" y="638.0"></text>
</g>
<g>
<title>schedule (18 samples, 0.38%)</title><rect x="435.7" y="611.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.7" y="622.0"></text>
</g>
<g>
<title>__schedule (17 samples, 0.36%)</title><rect x="435.9" y="595.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="438.9" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.32%)</title><rect x="436.4" y="579.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="439.4" y="590.0"></text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.06%)</title><rect x="441.1" y="739.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="444.1" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (82 samples, 1.73%)</title><rect x="441.9" y="739.0" width="20.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="444.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 1.73%)</title><rect x="441.9" y="723.0" width="20.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="444.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (82 samples, 1.73%)</title><rect x="441.9" y="707.0" width="20.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="444.9" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (82 samples, 1.73%)</title><rect x="441.9" y="691.0" width="20.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="444.9" y="702.0"></text>
</g>
<g>
<title>do_futex (82 samples, 1.73%)</title><rect x="441.9" y="675.0" width="20.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="444.9" y="686.0"></text>
</g>
<g>
<title>futex_wake (82 samples, 1.73%)</title><rect x="441.9" y="659.0" width="20.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.9" y="670.0"></text>
</g>
<g>
<title>wake_up_q (80 samples, 1.69%)</title><rect x="442.4" y="643.0" width="19.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="445.4" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (80 samples, 1.69%)</title><rect x="442.4" y="627.0" width="19.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="445.4" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (80 samples, 1.69%)</title><rect x="442.4" y="611.0" width="19.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="445.4" y="622.0"></text>
</g>
<g>
<title>clock_gettime (29 samples, 0.61%)</title><rect x="462.3" y="739.0" width="7.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="465.3" y="750.0"></text>
</g>
<g>
<title>clock_gettime (18 samples, 0.38%)</title><rect x="465.0" y="723.0" width="4.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="468.0" y="734.0"></text>
</g>
<g>
<title>[vdso] (16 samples, 0.34%)</title><rect x="465.5" y="707.0" width="4.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="468.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (2 samples, 0.04%)</title><rect x="469.5" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (2 samples, 0.04%)</title><rect x="469.5" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="469.5" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="469.5" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="469.5" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="469.5" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="469.5" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.06%)</title><rect x="470.0" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.06%)</title><rect x="470.0" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="470.0" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.06%)</title><rect x="470.7" y="851.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="471.7" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="471.7" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (21 samples, 0.44%)</title><rect x="472.2" y="867.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (20 samples, 0.42%)</title><rect x="472.2" y="851.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.2" y="862.0"></text>
</g>
<g>
<title>__recv (18 samples, 0.38%)</title><rect x="472.7" y="835.0" width="4.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="475.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.36%)</title><rect x="472.9" y="819.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="475.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.36%)</title><rect x="472.9" y="803.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="475.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.32%)</title><rect x="473.4" y="787.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="476.4" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (13 samples, 0.27%)</title><rect x="473.4" y="771.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="476.4" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.27%)</title><rect x="473.4" y="755.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="476.4" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 0.27%)</title><rect x="473.4" y="739.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="476.4" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.23%)</title><rect x="473.9" y="723.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="476.9" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.08%)</title><rect x="474.9" y="707.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.9" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.06%)</title><rect x="475.2" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.2" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.06%)</title><rect x="475.2" y="675.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="478.2" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.04%)</title><rect x="475.2" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="478.2" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="475.9" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="478.9" y="718.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.04%)</title><rect x="476.7" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="479.7" y="782.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=44077] (644 samples, 13.57%)</title><rect x="477.4" y="931.0" width="160.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="480.4" y="942.0">[NIO Selector #3 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (644 samples, 13.57%)</title><rect x="477.4" y="915.0" width="160.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.4" y="926.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.25%)</title><rect x="477.4" y="899.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 0.21%)</title><rect x="477.9" y="883.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.9" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="477.9" y="867.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="480.9" y="878.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.17%)</title><rect x="478.4" y="867.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="481.4" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.15%)</title><rect x="478.7" y="851.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="481.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.15%)</title><rect x="478.7" y="835.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="481.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 0.15%)</title><rect x="478.7" y="819.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="481.7" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (7 samples, 0.15%)</title><rect x="478.7" y="803.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.7" y="814.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 0.11%)</title><rect x="479.2" y="787.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="482.2" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.08%)</title><rect x="479.4" y="771.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="482.4" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.08%)</title><rect x="479.4" y="755.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.4" y="766.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.08%)</title><rect x="479.4" y="739.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.4" y="750.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.08%)</title><rect x="479.4" y="723.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="482.4" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.08%)</title><rect x="479.4" y="707.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="482.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (632 samples, 13.32%)</title><rect x="480.4" y="899.0" width="157.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.4" y="910.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (629 samples, 13.25%)</title><rect x="481.2" y="883.0" width="156.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.2" y="894.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (609 samples, 12.83%)</title><rect x="481.2" y="867.0" width="151.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.2" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (601 samples, 12.66%)</title><rect x="481.4" y="851.0" width="149.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.4" y="862.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (601 samples, 12.66%)</title><rect x="481.4" y="835.0" width="149.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.4" y="846.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (595 samples, 12.54%)</title><rect x="481.4" y="819.0" width="147.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.4" y="830.0">RequestHandler1_put..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (111 samples, 2.34%)</title><rect x="481.7" y="803.0" width="27.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.7" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="481.9" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="481.9" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="481.9" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.9" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="482.1" y="739.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="485.1" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="482.1" y="723.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="485.1" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="482.1" y="707.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="485.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (106 samples, 2.23%)</title><rect x="482.6" y="787.0" width="26.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.6" y="798.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (105 samples, 2.21%)</title><rect x="482.9" y="771.0" width="26.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.9" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (105 samples, 2.21%)</title><rect x="482.9" y="755.0" width="26.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.9" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (105 samples, 2.21%)</title><rect x="482.9" y="739.0" width="26.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.9" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (105 samples, 2.21%)</title><rect x="482.9" y="723.0" width="26.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.9" y="734.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.11%)</title><rect x="482.9" y="707.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="485.9" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="483.4" y="691.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="486.4" y="702.0"></text>
</g>
<g>
<title>send (100 samples, 2.11%)</title><rect x="484.1" y="707.0" width="24.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="487.1" y="718.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (99 samples, 2.09%)</title><rect x="484.4" y="691.0" width="24.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="487.4" y="702.0">e..</text>
</g>
<g>
<title>do_syscall_64 (99 samples, 2.09%)</title><rect x="484.4" y="675.0" width="24.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="487.4" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (98 samples, 2.06%)</title><rect x="484.6" y="659.0" width="24.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="487.6" y="670.0">_..</text>
</g>
<g>
<title>__sys_sendto (96 samples, 2.02%)</title><rect x="484.6" y="643.0" width="23.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="487.6" y="654.0">_..</text>
</g>
<g>
<title>sock_sendmsg (94 samples, 1.98%)</title><rect x="484.9" y="627.0" width="23.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="487.9" y="638.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (93 samples, 1.96%)</title><rect x="485.1" y="611.0" width="23.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="488.1" y="622.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (92 samples, 1.94%)</title><rect x="485.1" y="595.0" width="22.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="488.1" y="606.0">t..</text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="485.6" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="488.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (88 samples, 1.85%)</title><rect x="486.1" y="579.0" width="21.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.1" y="590.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.08%)</title><rect x="486.9" y="563.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.9" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.08%)</title><rect x="486.9" y="547.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="489.9" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.04%)</title><rect x="487.1" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="490.1" y="542.0"></text>
</g>
<g>
<title>tcp_push (80 samples, 1.69%)</title><rect x="487.9" y="563.0" width="19.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="490.9" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (80 samples, 1.69%)</title><rect x="487.9" y="547.0" width="19.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="490.9" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (79 samples, 1.66%)</title><rect x="488.1" y="531.0" width="19.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="491.1" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (75 samples, 1.58%)</title><rect x="488.1" y="515.0" width="18.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="491.1" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (73 samples, 1.54%)</title><rect x="488.6" y="499.0" width="18.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="491.6" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (72 samples, 1.52%)</title><rect x="488.6" y="483.0" width="17.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="491.6" y="494.0"></text>
</g>
<g>
<title>ip_local_out (69 samples, 1.45%)</title><rect x="489.1" y="467.0" width="17.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="492.1" y="478.0"></text>
</g>
<g>
<title>ip_output (69 samples, 1.45%)</title><rect x="489.1" y="451.0" width="17.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="492.1" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (68 samples, 1.43%)</title><rect x="489.4" y="435.0" width="16.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.4" y="446.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="489.4" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.4" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (66 samples, 1.39%)</title><rect x="489.9" y="419.0" width="16.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="492.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (65 samples, 1.37%)</title><rect x="489.9" y="403.0" width="16.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="492.9" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (60 samples, 1.26%)</title><rect x="490.1" y="387.0" width="14.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="493.1" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (60 samples, 1.26%)</title><rect x="490.1" y="371.0" width="14.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.1" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (60 samples, 1.26%)</title><rect x="490.1" y="355.0" width="14.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.1" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (60 samples, 1.26%)</title><rect x="490.1" y="339.0" width="14.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (57 samples, 1.20%)</title><rect x="490.6" y="323.0" width="14.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.6" y="334.0"></text>
</g>
<g>
<title>process_backlog (57 samples, 1.20%)</title><rect x="490.6" y="307.0" width="14.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="493.6" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (57 samples, 1.20%)</title><rect x="490.6" y="291.0" width="14.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="493.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (57 samples, 1.20%)</title><rect x="490.6" y="275.0" width="14.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="493.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (56 samples, 1.18%)</title><rect x="490.6" y="259.0" width="13.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="493.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (56 samples, 1.18%)</title><rect x="490.6" y="243.0" width="13.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (56 samples, 1.18%)</title><rect x="490.6" y="227.0" width="13.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (56 samples, 1.18%)</title><rect x="490.6" y="211.0" width="13.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.6" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (56 samples, 1.18%)</title><rect x="490.6" y="195.0" width="13.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="493.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (56 samples, 1.18%)</title><rect x="490.6" y="179.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (54 samples, 1.14%)</title><rect x="491.1" y="163.0" width="13.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="494.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (52 samples, 1.10%)</title><rect x="491.6" y="147.0" width="12.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.17%)</title><rect x="491.6" y="131.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="494.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.15%)</title><rect x="491.8" y="115.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="494.8" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.13%)</title><rect x="491.8" y="99.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="494.8" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="491.8" y="83.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="494.8" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="491.8" y="67.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="494.8" y="78.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.08%)</title><rect x="492.3" y="83.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.3" y="94.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.08%)</title><rect x="492.3" y="67.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.3" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (43 samples, 0.91%)</title><rect x="493.6" y="131.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="496.6" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (43 samples, 0.91%)</title><rect x="493.6" y="115.0" width="10.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="496.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (43 samples, 0.91%)</title><rect x="493.6" y="99.0" width="10.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="496.6" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (42 samples, 0.88%)</title><rect x="493.6" y="83.0" width="10.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.6" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (42 samples, 0.88%)</title><rect x="493.6" y="67.0" width="10.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="496.6" y="78.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.08%)</title><rect x="505.0" y="387.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="508.0" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.08%)</title><rect x="505.0" y="371.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="508.0" y="382.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="506.8" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="509.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.put (482 samples, 10.16%)</title><rect x="509.5" y="803.0" width="119.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.5" y="814.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.08%)</title><rect x="509.5" y="787.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.08%)</title><rect x="509.5" y="771.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="509.5" y="755.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="509.5" y="739.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.5" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="509.5" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.08%)</title><rect x="509.5" y="707.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.08%)</title><rect x="509.5" y="691.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (478 samples, 10.07%)</title><rect x="510.5" y="787.0" width="118.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.5" y="798.0">ru/mail/polis/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (477 samples, 10.05%)</title><rect x="510.5" y="771.0" width="118.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.5" y="782.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (476 samples, 10.03%)</title><rect x="510.7" y="755.0" width="118.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.7" y="766.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (346 samples, 7.29%)</title><rect x="511.0" y="739.0" width="86.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="514.0" y="750.0">Java_org_r..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="511.7" y="723.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="514.7" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (339 samples, 7.14%)</title><rect x="512.7" y="723.0" width="84.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="515.7" y="734.0">rocksdb_pu..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.04%)</title><rect x="513.2" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="516.2" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.06%)</title><rect x="513.7" y="707.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="516.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (330 samples, 6.95%)</title><rect x="514.7" y="707.0" width="82.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="517.7" y="718.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (329 samples, 6.93%)</title><rect x="515.0" y="691.0" width="81.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="518.0" y="702.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (328 samples, 6.91%)</title><rect x="515.0" y="675.0" width="81.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="518.0" y="686.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (308 samples, 6.49%)</title><rect x="516.2" y="659.0" width="76.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="519.2" y="670.0">rocksdb:..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="516.5" y="643.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="519.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (301 samples, 6.34%)</title><rect x="517.0" y="643.0" width="74.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="520.0" y="654.0">rocksdb:..</text>
</g>
<g>
<title>__sched_yield (57 samples, 1.20%)</title><rect x="519.7" y="627.0" width="14.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="522.7" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 1.14%)</title><rect x="520.4" y="611.0" width="13.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="523.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.06%)</title><rect x="520.4" y="595.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="523.4" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 1.07%)</title><rect x="521.2" y="595.0" width="12.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="524.2" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (46 samples, 0.97%)</title><rect x="522.4" y="579.0" width="11.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="525.4" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (46 samples, 0.97%)</title><rect x="522.4" y="563.0" width="11.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="525.4" y="574.0"></text>
</g>
<g>
<title>schedule (46 samples, 0.97%)</title><rect x="522.4" y="547.0" width="11.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="525.4" y="558.0"></text>
</g>
<g>
<title>__schedule (44 samples, 0.93%)</title><rect x="522.9" y="531.0" width="11.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="525.9" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.13%)</title><rect x="532.4" y="515.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="535.4" y="526.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.11%)</title><rect x="534.1" y="627.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="537.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (19 samples, 0.40%)</title><rect x="535.6" y="627.0" width="4.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="538.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (18 samples, 0.38%)</title><rect x="535.9" y="611.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="538.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (18 samples, 0.38%)</title><rect x="535.9" y="595.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="538.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (16 samples, 0.34%)</title><rect x="535.9" y="579.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="538.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (15 samples, 0.32%)</title><rect x="536.1" y="563.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="539.1" y="574.0"></text>
</g>
<g>
<title>__write (15 samples, 0.32%)</title><rect x="536.1" y="547.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="539.1" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.32%)</title><rect x="536.1" y="531.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.32%)</title><rect x="536.1" y="515.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="539.1" y="526.0"></text>
</g>
<g>
<title>__x64_sys_write (15 samples, 0.32%)</title><rect x="536.1" y="499.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="539.1" y="510.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.32%)</title><rect x="536.1" y="483.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="539.1" y="494.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="536.1" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="539.1" y="478.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="536.1" y="451.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.1" y="462.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="536.1" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.1" y="446.0"></text>
</g>
<g>
<title>vfs_write (13 samples, 0.27%)</title><rect x="536.6" y="467.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="539.6" y="478.0"></text>
</g>
<g>
<title>__vfs_write (12 samples, 0.25%)</title><rect x="536.6" y="451.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="539.6" y="462.0"></text>
</g>
<g>
<title>new_sync_write (12 samples, 0.25%)</title><rect x="536.6" y="435.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="539.6" y="446.0"></text>
</g>
<g>
<title>ext4_file_write_iter (12 samples, 0.25%)</title><rect x="536.6" y="419.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="539.6" y="430.0"></text>
</g>
<g>
<title>__generic_file_write_iter (11 samples, 0.23%)</title><rect x="536.8" y="403.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="539.8" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (10 samples, 0.21%)</title><rect x="537.1" y="387.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="540.1" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.06%)</title><rect x="537.1" y="371.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="540.1" y="382.0"></text>
</g>
<g>
<title>ext4_da_write_end (7 samples, 0.15%)</title><rect x="537.8" y="371.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="540.8" y="382.0"></text>
</g>
<g>
<title>generic_write_end (6 samples, 0.13%)</title><rect x="538.1" y="355.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="541.1" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (6 samples, 0.13%)</title><rect x="538.1" y="339.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="541.1" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 0.13%)</title><rect x="538.1" y="323.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="541.1" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (5 samples, 0.11%)</title><rect x="538.1" y="307.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="541.1" y="318.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 0.08%)</title><rect x="538.1" y="291.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="541.1" y="302.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.06%)</title><rect x="538.3" y="275.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="541.3" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.06%)</title><rect x="538.3" y="259.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="541.3" y="270.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (2 samples, 0.04%)</title><rect x="538.6" y="243.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="541.6" y="254.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.04%)</title><rect x="538.6" y="227.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="541.6" y="238.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="538.6" y="211.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="541.6" y="222.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="539.8" y="579.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="542.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="539.8" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="542.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (14 samples, 0.29%)</title><rect x="540.6" y="627.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="543.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (14 samples, 0.29%)</title><rect x="540.6" y="611.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="543.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (14 samples, 0.29%)</title><rect x="540.6" y="595.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="543.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 0.29%)</title><rect x="540.6" y="579.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="543.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (14 samples, 0.29%)</title><rect x="540.6" y="563.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="543.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (13 samples, 0.27%)</title><rect x="540.8" y="547.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="543.8" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (13 samples, 0.27%)</title><rect x="540.8" y="531.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="543.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (13 samples, 0.27%)</title><rect x="540.8" y="515.0" width="3.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="543.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (9 samples, 0.19%)</title><rect x="541.3" y="499.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="544.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.11%)</title><rect x="541.8" y="483.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="544.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="543.1" y="483.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="546.1" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="543.1" y="467.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="546.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (37 samples, 0.78%)</title><rect x="544.1" y="627.0" width="9.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="547.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (32 samples, 0.67%)</title><rect x="545.1" y="611.0" width="7.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="548.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (32 samples, 0.67%)</title><rect x="545.1" y="595.0" width="7.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="548.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (32 samples, 0.67%)</title><rect x="545.1" y="579.0" width="7.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="548.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (31 samples, 0.65%)</title><rect x="545.3" y="563.0" width="7.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="548.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (29 samples, 0.61%)</title><rect x="545.8" y="547.0" width="7.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="548.8" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="545.8" y="531.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="548.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (26 samples, 0.55%)</title><rect x="546.5" y="531.0" width="6.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="549.5" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (26 samples, 0.55%)</title><rect x="546.5" y="515.0" width="6.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="549.5" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (26 samples, 0.55%)</title><rect x="546.5" y="499.0" width="6.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="549.5" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (18 samples, 0.38%)</title><rect x="548.3" y="483.0" width="4.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="551.3" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.17%)</title><rect x="548.3" y="467.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="551.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.21%)</title><rect x="550.3" y="467.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="553.3" y="478.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.06%)</title><rect x="550.5" y="451.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="553.5" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.11%)</title><rect x="551.3" y="451.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="554.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (65 samples, 1.37%)</title><rect x="553.3" y="627.0" width="16.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="556.3" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="568.2" y="611.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="571.2" y="622.0"></text>
</g>
<g>
<title>std::condition_variable::condition_variable() (2 samples, 0.04%)</title><rect x="568.7" y="611.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="571.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (84 samples, 1.77%)</title><rect x="569.4" y="627.0" width="20.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="572.4" y="638.0"></text>
</g>
<g>
<title>__sched_yield (51 samples, 1.07%)</title><rect x="569.7" y="611.0" width="12.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="572.7" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.86%)</title><rect x="572.2" y="595.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="575.2" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.84%)</title><rect x="572.4" y="579.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="575.4" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (32 samples, 0.67%)</title><rect x="574.4" y="563.0" width="7.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="577.4" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (32 samples, 0.67%)</title><rect x="574.4" y="547.0" width="7.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="577.4" y="558.0"></text>
</g>
<g>
<title>schedule (32 samples, 0.67%)</title><rect x="574.4" y="531.0" width="7.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="577.4" y="542.0"></text>
</g>
<g>
<title>__schedule (31 samples, 0.65%)</title><rect x="574.6" y="515.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="577.6" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="581.8" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="584.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (28 samples, 0.59%)</title><rect x="582.6" y="611.0" width="7.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="585.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.04%)</title><rect x="588.8" y="595.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="591.8" y="606.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (3 samples, 0.06%)</title><rect x="589.6" y="611.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="592.6" y="622.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.04%)</title><rect x="591.3" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="594.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.04%)</title><rect x="592.0" y="643.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="595.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.04%)</title><rect x="592.8" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="595.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.11%)</title><rect x="593.5" y="659.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="596.5" y="670.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="594.3" y="643.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="597.3" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (6 samples, 0.13%)</title><rect x="595.0" y="659.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="598.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.59%)</title><rect x="597.0" y="739.0" width="7.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="600.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (24 samples, 0.51%)</title><rect x="597.5" y="723.0" width="6.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="600.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.48%)</title><rect x="597.8" y="707.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.48%)</title><rect x="597.8" y="691.0" width="5.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="600.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.48%)</title><rect x="597.8" y="675.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.8" y="686.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.48%)</title><rect x="597.8" y="659.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="600.8" y="670.0"></text>
</g>
<g>
<title>futex_wait (23 samples, 0.48%)</title><rect x="597.8" y="643.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="600.8" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (19 samples, 0.40%)</title><rect x="598.0" y="627.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="601.0" y="638.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.40%)</title><rect x="598.0" y="611.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="601.0" y="622.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.40%)</title><rect x="598.0" y="595.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="601.0" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 0.38%)</title><rect x="598.3" y="579.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="601.3" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="602.7" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="605.7" y="638.0"></text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.06%)</title><rect x="604.0" y="739.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="607.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (71 samples, 1.50%)</title><rect x="604.7" y="739.0" width="17.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="607.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 1.50%)</title><rect x="604.7" y="723.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="607.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 1.50%)</title><rect x="604.7" y="707.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="607.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (71 samples, 1.50%)</title><rect x="604.7" y="691.0" width="17.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="607.7" y="702.0"></text>
</g>
<g>
<title>do_futex (71 samples, 1.50%)</title><rect x="604.7" y="675.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="607.7" y="686.0"></text>
</g>
<g>
<title>futex_wake (71 samples, 1.50%)</title><rect x="604.7" y="659.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.7" y="670.0"></text>
</g>
<g>
<title>wake_up_q (68 samples, 1.43%)</title><rect x="605.5" y="643.0" width="16.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="608.5" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (68 samples, 1.43%)</title><rect x="605.5" y="627.0" width="16.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="608.5" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (68 samples, 1.43%)</title><rect x="605.5" y="611.0" width="16.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="608.5" y="622.0"></text>
</g>
<g>
<title>clock_gettime (26 samples, 0.55%)</title><rect x="622.4" y="739.0" width="6.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="625.4" y="750.0"></text>
</g>
<g>
<title>clock_gettime (23 samples, 0.48%)</title><rect x="623.1" y="723.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="626.1" y="734.0"></text>
</g>
<g>
<title>[vdso] (22 samples, 0.46%)</title><rect x="623.4" y="707.0" width="5.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="626.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.13%)</title><rect x="629.3" y="819.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.13%)</title><rect x="629.3" y="803.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.13%)</title><rect x="629.3" y="787.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.11%)</title><rect x="630.8" y="851.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.06%)</title><rect x="631.3" y="835.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (20 samples, 0.42%)</title><rect x="632.6" y="867.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (20 samples, 0.42%)</title><rect x="632.6" y="851.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.6" y="862.0"></text>
</g>
<g>
<title>__recv (19 samples, 0.40%)</title><rect x="632.8" y="835.0" width="4.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="635.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.38%)</title><rect x="633.1" y="819.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="636.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.38%)</title><rect x="633.1" y="803.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (18 samples, 0.38%)</title><rect x="633.1" y="787.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="636.1" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (18 samples, 0.38%)</title><rect x="633.1" y="771.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="636.1" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.29%)</title><rect x="633.3" y="755.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.3" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="633.3" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.3" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (12 samples, 0.25%)</title><rect x="633.8" y="739.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="636.8" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.25%)</title><rect x="633.8" y="723.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="636.8" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.06%)</title><rect x="634.6" y="707.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="637.6" y="718.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="634.6" y="691.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.6" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="634.8" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="637.8" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.04%)</title><rect x="634.8" y="659.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="637.8" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.06%)</title><rect x="635.3" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="638.3" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.06%)</title><rect x="635.3" y="691.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="638.3" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.06%)</title><rect x="635.3" y="675.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="638.3" y="686.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="635.3" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="638.3" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="636.1" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.1" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="636.8" y="755.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.8" y="766.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="636.8" y="739.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="639.8" y="750.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="636.8" y="723.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="639.8" y="734.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="636.8" y="707.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.8" y="718.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=44078] (465 samples, 9.80%)</title><rect x="637.5" y="931.0" width="115.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="640.5" y="942.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (465 samples, 9.80%)</title><rect x="637.5" y="915.0" width="115.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.5" y="926.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.17%)</title><rect x="638.0" y="899.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.17%)</title><rect x="638.0" y="883.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.0" y="894.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.17%)</title><rect x="638.0" y="867.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="641.0" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.17%)</title><rect x="638.0" y="851.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="641.0" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.17%)</title><rect x="638.0" y="835.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="641.0" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (8 samples, 0.17%)</title><rect x="638.0" y="819.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="641.0" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (8 samples, 0.17%)</title><rect x="638.0" y="803.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="641.0" y="814.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 0.15%)</title><rect x="638.3" y="787.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="641.3" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.06%)</title><rect x="638.3" y="771.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="641.3" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.06%)</title><rect x="638.3" y="755.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.3" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.04%)</title><rect x="638.5" y="739.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="641.5" y="750.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.04%)</title><rect x="638.5" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.5" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.04%)</title><rect x="638.5" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="641.5" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.08%)</title><rect x="639.0" y="771.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="642.0" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.08%)</title><rect x="639.0" y="755.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="642.0" y="766.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.08%)</title><rect x="639.0" y="739.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="642.0" y="750.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.08%)</title><rect x="639.0" y="723.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="642.0" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.08%)</title><rect x="639.0" y="707.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="642.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (455 samples, 9.59%)</title><rect x="640.0" y="899.0" width="113.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.0" y="910.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (454 samples, 9.57%)</title><rect x="640.3" y="883.0" width="112.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.3" y="894.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (438 samples, 9.23%)</title><rect x="640.3" y="867.0" width="108.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.3" y="878.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (432 samples, 9.10%)</title><rect x="640.5" y="851.0" width="107.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.5" y="862.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (432 samples, 9.10%)</title><rect x="640.5" y="835.0" width="107.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.5" y="846.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (429 samples, 9.04%)</title><rect x="640.5" y="819.0" width="106.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.5" y="830.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (89 samples, 1.88%)</title><rect x="640.8" y="803.0" width="22.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.8" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="641.0" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="641.0" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="641.0" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.0" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="641.3" y="739.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="644.3" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="641.3" y="723.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="644.3" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="641.3" y="707.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="644.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (83 samples, 1.75%)</title><rect x="641.8" y="787.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.8" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (83 samples, 1.75%)</title><rect x="641.8" y="771.0" width="20.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (83 samples, 1.75%)</title><rect x="641.8" y="755.0" width="20.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (82 samples, 1.73%)</title><rect x="642.0" y="739.0" width="20.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (81 samples, 1.71%)</title><rect x="642.3" y="723.0" width="20.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.3" y="734.0"></text>
</g>
<g>
<title>send (80 samples, 1.69%)</title><rect x="642.5" y="707.0" width="19.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="645.5" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 1.69%)</title><rect x="642.5" y="691.0" width="19.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="645.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (79 samples, 1.66%)</title><rect x="642.8" y="675.0" width="19.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="645.8" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (78 samples, 1.64%)</title><rect x="642.8" y="659.0" width="19.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="645.8" y="670.0"></text>
</g>
<g>
<title>__sys_sendto (78 samples, 1.64%)</title><rect x="642.8" y="643.0" width="19.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="645.8" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (76 samples, 1.60%)</title><rect x="643.0" y="627.0" width="18.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="646.0" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (76 samples, 1.60%)</title><rect x="643.0" y="611.0" width="18.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="646.0" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (76 samples, 1.60%)</title><rect x="643.0" y="595.0" width="18.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="646.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (75 samples, 1.58%)</title><rect x="643.3" y="579.0" width="18.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="646.3" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.08%)</title><rect x="643.8" y="563.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.8" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.08%)</title><rect x="643.8" y="547.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="646.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.06%)</title><rect x="643.8" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="646.8" y="542.0"></text>
</g>
<g>
<title>memset (2 samples, 0.04%)</title><rect x="644.0" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="647.0" y="526.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="644.8" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="647.8" y="574.0"></text>
</g>
<g>
<title>tcp_push (67 samples, 1.41%)</title><rect x="645.3" y="563.0" width="16.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.3" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (67 samples, 1.41%)</title><rect x="645.3" y="547.0" width="16.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="648.3" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (67 samples, 1.41%)</title><rect x="645.3" y="531.0" width="16.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="648.3" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (63 samples, 1.33%)</title><rect x="645.5" y="515.0" width="15.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="648.5" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (62 samples, 1.31%)</title><rect x="645.7" y="499.0" width="15.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="648.7" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (62 samples, 1.31%)</title><rect x="645.7" y="483.0" width="15.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="648.7" y="494.0"></text>
</g>
<g>
<title>ip_local_out (62 samples, 1.31%)</title><rect x="645.7" y="467.0" width="15.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="648.7" y="478.0"></text>
</g>
<g>
<title>ip_output (60 samples, 1.26%)</title><rect x="646.0" y="451.0" width="14.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="649.0" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (59 samples, 1.24%)</title><rect x="646.2" y="435.0" width="14.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (59 samples, 1.24%)</title><rect x="646.2" y="419.0" width="14.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="649.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (59 samples, 1.24%)</title><rect x="646.2" y="403.0" width="14.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="649.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (56 samples, 1.18%)</title><rect x="646.2" y="387.0" width="14.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.2" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (56 samples, 1.18%)</title><rect x="646.2" y="371.0" width="14.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="649.2" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (54 samples, 1.14%)</title><rect x="646.7" y="355.0" width="13.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="649.7" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (54 samples, 1.14%)</title><rect x="646.7" y="339.0" width="13.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="649.7" y="350.0"></text>
</g>
<g>
<title>net_rx_action (54 samples, 1.14%)</title><rect x="646.7" y="323.0" width="13.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.7" y="334.0"></text>
</g>
<g>
<title>process_backlog (54 samples, 1.14%)</title><rect x="646.7" y="307.0" width="13.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="649.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (52 samples, 1.10%)</title><rect x="647.2" y="291.0" width="13.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.2" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (52 samples, 1.10%)</title><rect x="647.2" y="275.0" width="13.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="650.2" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="647.2" y="259.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="650.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv (50 samples, 1.05%)</title><rect x="647.7" y="259.0" width="12.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="650.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (50 samples, 1.05%)</title><rect x="647.7" y="243.0" width="12.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="650.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (50 samples, 1.05%)</title><rect x="647.7" y="227.0" width="12.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="650.7" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (50 samples, 1.05%)</title><rect x="647.7" y="211.0" width="12.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="650.7" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (50 samples, 1.05%)</title><rect x="647.7" y="195.0" width="12.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="650.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 1.01%)</title><rect x="648.2" y="179.0" width="12.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="651.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (46 samples, 0.97%)</title><rect x="648.7" y="163.0" width="11.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="651.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (45 samples, 0.95%)</title><rect x="649.0" y="147.0" width="11.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="652.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.19%)</title><rect x="649.2" y="131.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.2" y="142.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.04%)</title><rect x="649.2" y="115.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="652.2" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.13%)</title><rect x="649.7" y="115.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.7" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.11%)</title><rect x="649.7" y="99.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="652.7" y="110.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.08%)</title><rect x="650.0" y="83.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="653.0" y="94.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="650.0" y="67.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="653.0" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (34 samples, 0.72%)</title><rect x="651.5" y="131.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="654.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (34 samples, 0.72%)</title><rect x="651.5" y="115.0" width="8.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="654.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (34 samples, 0.72%)</title><rect x="651.5" y="99.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="654.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (34 samples, 0.72%)</title><rect x="651.5" y="83.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="654.5" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (34 samples, 0.72%)</title><rect x="651.5" y="67.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="654.5" y="78.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.06%)</title><rect x="660.2" y="387.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="663.2" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.06%)</title><rect x="660.2" y="371.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="663.2" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="660.2" y="355.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.2" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="660.2" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="663.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="660.2" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="660.2" y="307.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="663.2" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="660.2" y="291.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="663.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="662.4" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="662.4" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="662.4" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.put (339 samples, 7.14%)</title><rect x="662.9" y="803.0" width="84.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.9" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (338 samples, 7.12%)</title><rect x="663.2" y="787.0" width="84.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.2" y="798.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (335 samples, 7.06%)</title><rect x="663.2" y="771.0" width="83.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.2" y="782.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (335 samples, 7.06%)</title><rect x="663.2" y="755.0" width="83.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.2" y="766.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (222 samples, 4.68%)</title><rect x="663.2" y="739.0" width="55.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="666.2" y="750.0">Java_..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (219 samples, 4.61%)</title><rect x="663.9" y="723.0" width="54.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="666.9" y="734.0">rocks..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="663.9" y="707.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="666.9" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="664.1" y="691.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="667.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (214 samples, 4.51%)</title><rect x="664.6" y="707.0" width="53.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="667.6" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (212 samples, 4.47%)</title><rect x="665.1" y="691.0" width="52.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="668.1" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (212 samples, 4.47%)</title><rect x="665.1" y="675.0" width="52.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="668.1" y="686.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (207 samples, 4.36%)</title><rect x="665.1" y="659.0" width="51.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="668.1" y="670.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (203 samples, 4.28%)</title><rect x="665.6" y="643.0" width="50.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="668.6" y="654.0">rocks..</text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="666.6" y="627.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="669.6" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="666.6" y="611.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="669.6" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="666.6" y="595.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="669.6" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="666.6" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="669.6" y="590.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="666.6" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="669.6" y="574.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="666.6" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="669.6" y="558.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="666.6" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="669.6" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="666.6" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="669.6" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="666.6" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="669.6" y="510.0"></text>
</g>
<g>
<title>__sched_yield (48 samples, 1.01%)</title><rect x="667.1" y="627.0" width="12.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="670.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.88%)</title><rect x="668.6" y="611.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="671.6" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.04%)</title><rect x="668.6" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="671.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.84%)</title><rect x="669.1" y="595.0" width="10.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="672.1" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (34 samples, 0.72%)</title><rect x="670.4" y="579.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="673.4" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (34 samples, 0.72%)</title><rect x="670.4" y="563.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="673.4" y="574.0"></text>
</g>
<g>
<title>schedule (34 samples, 0.72%)</title><rect x="670.4" y="547.0" width="8.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="673.4" y="558.0"></text>
</g>
<g>
<title>__schedule (34 samples, 0.72%)</title><rect x="670.4" y="531.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="673.4" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.08%)</title><rect x="677.8" y="515.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (23 samples, 0.48%)</title><rect x="679.1" y="627.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="682.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (22 samples, 0.46%)</title><rect x="679.3" y="611.0" width="5.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="682.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (21 samples, 0.44%)</title><rect x="679.6" y="595.0" width="5.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="682.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (17 samples, 0.36%)</title><rect x="680.1" y="579.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="683.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (16 samples, 0.34%)</title><rect x="680.3" y="563.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="683.3" y="574.0"></text>
</g>
<g>
<title>__write (15 samples, 0.32%)</title><rect x="680.3" y="547.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="683.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.32%)</title><rect x="680.3" y="531.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="683.3" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.29%)</title><rect x="680.6" y="515.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="683.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_write (14 samples, 0.29%)</title><rect x="680.6" y="499.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="683.6" y="510.0"></text>
</g>
<g>
<title>ksys_write (14 samples, 0.29%)</title><rect x="680.6" y="483.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="683.6" y="494.0"></text>
</g>
<g>
<title>vfs_write (14 samples, 0.29%)</title><rect x="680.6" y="467.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="683.6" y="478.0"></text>
</g>
<g>
<title>__vfs_write (12 samples, 0.25%)</title><rect x="680.8" y="451.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="683.8" y="462.0"></text>
</g>
<g>
<title>new_sync_write (12 samples, 0.25%)</title><rect x="680.8" y="435.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="683.8" y="446.0"></text>
</g>
<g>
<title>ext4_file_write_iter (11 samples, 0.23%)</title><rect x="680.8" y="419.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="683.8" y="430.0"></text>
</g>
<g>
<title>__generic_file_write_iter (11 samples, 0.23%)</title><rect x="680.8" y="403.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="683.8" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (11 samples, 0.23%)</title><rect x="680.8" y="387.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="683.8" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_end (9 samples, 0.19%)</title><rect x="681.1" y="371.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="684.1" y="382.0"></text>
</g>
<g>
<title>generic_write_end (9 samples, 0.19%)</title><rect x="681.1" y="355.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="684.1" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (9 samples, 0.19%)</title><rect x="681.1" y="339.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="684.1" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (8 samples, 0.17%)</title><rect x="681.3" y="323.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="684.3" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (8 samples, 0.17%)</title><rect x="681.3" y="307.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="684.3" y="318.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (6 samples, 0.13%)</title><rect x="681.3" y="291.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="684.3" y="302.0"></text>
</g>
<g>
<title>ext4_do_update_inode (6 samples, 0.13%)</title><rect x="681.3" y="275.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="684.3" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (4 samples, 0.08%)</title><rect x="681.6" y="259.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="684.6" y="270.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (4 samples, 0.08%)</title><rect x="681.6" y="243.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="684.6" y="254.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.04%)</title><rect x="682.0" y="227.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="685.0" y="238.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="682.0" y="211.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="685.0" y="222.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.04%)</title><rect x="682.8" y="291.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="685.8" y="302.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="682.8" y="275.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="685.8" y="286.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.04%)</title><rect x="682.8" y="259.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="685.8" y="270.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.04%)</title><rect x="682.8" y="243.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="685.8" y="254.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="684.3" y="579.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="687.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.06%)</title><rect x="685.0" y="627.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="688.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.06%)</title><rect x="685.0" y="611.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="688.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.06%)</title><rect x="685.0" y="595.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="688.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="685.0" y="579.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="688.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.04%)</title><rect x="685.3" y="563.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="688.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.04%)</title><rect x="685.3" y="547.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="688.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (27 samples, 0.57%)</title><rect x="685.8" y="627.0" width="6.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="688.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (24 samples, 0.51%)</title><rect x="686.5" y="611.0" width="6.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="689.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (24 samples, 0.51%)</title><rect x="686.5" y="595.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="689.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (22 samples, 0.46%)</title><rect x="686.8" y="579.0" width="5.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="689.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (2 samples, 0.04%)</title><rect x="687.0" y="563.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="690.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (19 samples, 0.40%)</title><rect x="687.5" y="563.0" width="4.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="690.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (17 samples, 0.36%)</title><rect x="687.8" y="547.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="690.8" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.08%)</title><rect x="688.0" y="531.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="691.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.04%)</title><rect x="688.5" y="515.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="691.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (12 samples, 0.25%)</title><rect x="689.0" y="531.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="692.0" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 0.25%)</title><rect x="689.0" y="515.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="692.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (12 samples, 0.25%)</title><rect x="689.0" y="499.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="692.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (8 samples, 0.17%)</title><rect x="689.8" y="483.0" width="1.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="692.8" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="689.8" y="467.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="692.8" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="690.3" y="467.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="693.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.08%)</title><rect x="690.8" y="467.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="693.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (45 samples, 0.95%)</title><rect x="692.5" y="627.0" width="11.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="695.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.04%)</title><rect x="703.2" y="611.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="706.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (46 samples, 0.97%)</title><rect x="703.7" y="627.0" width="11.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="706.7" y="638.0"></text>
</g>
<g>
<title>__sched_yield (31 samples, 0.65%)</title><rect x="703.7" y="611.0" width="7.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="706.7" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.53%)</title><rect x="705.2" y="595.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="708.2" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.53%)</title><rect x="705.2" y="579.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="708.2" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (21 samples, 0.44%)</title><rect x="706.2" y="563.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="709.2" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (21 samples, 0.44%)</title><rect x="706.2" y="547.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="709.2" y="558.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.44%)</title><rect x="706.2" y="531.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.2" y="542.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.44%)</title><rect x="706.2" y="515.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="709.2" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="710.6" y="499.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="713.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (15 samples, 0.32%)</title><rect x="711.4" y="611.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="714.4" y="622.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.04%)</title><rect x="715.6" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="718.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="716.9" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="719.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.04%)</title><rect x="717.9" y="707.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="720.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.46%)</title><rect x="718.3" y="739.0" width="5.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="721.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (18 samples, 0.38%)</title><rect x="718.6" y="723.0" width="4.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="721.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.36%)</title><rect x="718.8" y="707.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="721.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.36%)</title><rect x="718.8" y="691.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.36%)</title><rect x="718.8" y="675.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="721.8" y="686.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.36%)</title><rect x="718.8" y="659.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.8" y="670.0"></text>
</g>
<g>
<title>futex_wait (17 samples, 0.36%)</title><rect x="718.8" y="643.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.8" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.34%)</title><rect x="718.8" y="627.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="721.8" y="638.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.34%)</title><rect x="718.8" y="611.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.8" y="622.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.34%)</title><rect x="718.8" y="595.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.8" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.29%)</title><rect x="719.3" y="579.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="722.3" y="590.0"></text>
</g>
<g>
<title>__libc_malloc (5 samples, 0.11%)</title><rect x="723.8" y="739.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="726.8" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (74 samples, 1.56%)</title><rect x="725.1" y="739.0" width="18.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="728.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 1.54%)</title><rect x="725.3" y="723.0" width="18.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="728.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (73 samples, 1.54%)</title><rect x="725.3" y="707.0" width="18.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (73 samples, 1.54%)</title><rect x="725.3" y="691.0" width="18.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="728.3" y="702.0"></text>
</g>
<g>
<title>do_futex (73 samples, 1.54%)</title><rect x="725.3" y="675.0" width="18.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="728.3" y="686.0"></text>
</g>
<g>
<title>futex_wake (73 samples, 1.54%)</title><rect x="725.3" y="659.0" width="18.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="728.3" y="670.0"></text>
</g>
<g>
<title>wake_up_q (72 samples, 1.52%)</title><rect x="725.6" y="643.0" width="17.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="728.6" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (72 samples, 1.52%)</title><rect x="725.6" y="627.0" width="17.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="728.6" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (72 samples, 1.52%)</title><rect x="725.6" y="611.0" width="17.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.6" y="622.0"></text>
</g>
<g>
<title>clock_gettime (12 samples, 0.25%)</title><rect x="743.5" y="739.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="746.5" y="750.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.21%)</title><rect x="744.0" y="723.0" width="2.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="747.0" y="734.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.19%)</title><rect x="744.2" y="707.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="747.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (2 samples, 0.04%)</title><rect x="746.7" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.06%)</title><rect x="747.2" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.06%)</title><rect x="747.2" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="747.2" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.06%)</title><rect x="747.9" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="748.2" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.34%)</title><rect x="749.2" y="867.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.34%)</title><rect x="749.2" y="851.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.2" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="749.4" y="835.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="752.4" y="846.0"></text>
</g>
<g>
<title>__recv (13 samples, 0.27%)</title><rect x="749.9" y="835.0" width="3.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="752.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.25%)</title><rect x="750.2" y="819.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="753.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.25%)</title><rect x="750.2" y="803.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="753.2" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (12 samples, 0.25%)</title><rect x="750.2" y="787.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="753.2" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 0.23%)</title><rect x="750.2" y="771.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="753.2" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (8 samples, 0.17%)</title><rect x="750.7" y="755.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="753.7" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 0.15%)</title><rect x="750.7" y="739.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="753.7" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.15%)</title><rect x="750.7" y="723.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="753.7" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="751.2" y="707.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="754.2" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.04%)</title><rect x="751.7" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="754.7" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.04%)</title><rect x="751.7" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="754.7" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=44079] (596 samples, 12.56%)</title><rect x="753.2" y="931.0" width="148.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="756.2" y="942.0">[NIO Selector #5 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (596 samples, 12.56%)</title><rect x="753.2" y="915.0" width="148.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.2" y="926.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.25%)</title><rect x="753.4" y="899.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 0.25%)</title><rect x="753.4" y="883.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.4" y="894.0"></text>
</g>
<g>
<title>epoll_wait (11 samples, 0.23%)</title><rect x="753.7" y="867.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="756.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.23%)</title><rect x="753.7" y="851.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="756.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.23%)</title><rect x="753.7" y="835.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="756.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (11 samples, 0.23%)</title><rect x="753.7" y="819.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.7" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (11 samples, 0.23%)</title><rect x="753.7" y="803.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="756.7" y="814.0"></text>
</g>
<g>
<title>ep_poll (11 samples, 0.23%)</title><rect x="753.7" y="787.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="756.7" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.11%)</title><rect x="753.9" y="771.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="756.9" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.08%)</title><rect x="754.2" y="755.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="757.2" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.08%)</title><rect x="754.2" y="739.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="757.2" y="750.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.08%)</title><rect x="754.2" y="723.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="757.2" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.11%)</title><rect x="755.1" y="771.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="758.1" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.11%)</title><rect x="755.1" y="755.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="758.1" y="766.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.11%)</title><rect x="755.1" y="739.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="758.1" y="750.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.11%)</title><rect x="755.1" y="723.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="758.1" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.11%)</title><rect x="755.1" y="707.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="758.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (583 samples, 12.28%)</title><rect x="756.4" y="899.0" width="144.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.4" y="910.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (583 samples, 12.28%)</title><rect x="756.4" y="883.0" width="144.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.4" y="894.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (573 samples, 12.07%)</title><rect x="756.4" y="867.0" width="142.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.4" y="878.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (562 samples, 11.84%)</title><rect x="756.6" y="851.0" width="139.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.6" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (562 samples, 11.84%)</title><rect x="756.6" y="835.0" width="139.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.6" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (561 samples, 11.82%)</title><rect x="756.6" y="819.0" width="139.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.6" y="830.0">RequestHandler1_p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (124 samples, 2.61%)</title><rect x="756.9" y="803.0" width="30.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.9" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (122 samples, 2.57%)</title><rect x="757.1" y="787.0" width="30.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.1" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (121 samples, 2.55%)</title><rect x="757.4" y="771.0" width="30.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.4" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (121 samples, 2.55%)</title><rect x="757.4" y="755.0" width="30.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.4" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (121 samples, 2.55%)</title><rect x="757.4" y="739.0" width="30.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.4" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (120 samples, 2.53%)</title><rect x="757.6" y="723.0" width="29.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.6" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="757.9" y="707.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="760.9" y="718.0"></text>
</g>
<g>
<title>send (117 samples, 2.47%)</title><rect x="758.4" y="707.0" width="29.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="761.4" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (114 samples, 2.40%)</title><rect x="759.1" y="691.0" width="28.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.1" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (114 samples, 2.40%)</title><rect x="759.1" y="675.0" width="28.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="762.1" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (114 samples, 2.40%)</title><rect x="759.1" y="659.0" width="28.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="762.1" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (114 samples, 2.40%)</title><rect x="759.1" y="643.0" width="28.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="762.1" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (111 samples, 2.34%)</title><rect x="759.4" y="627.0" width="27.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="762.4" y="638.0">s..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.06%)</title><rect x="759.4" y="611.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="762.4" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (107 samples, 2.25%)</title><rect x="760.1" y="611.0" width="26.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="763.1" y="622.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (107 samples, 2.25%)</title><rect x="760.1" y="595.0" width="26.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="763.1" y="606.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (106 samples, 2.23%)</title><rect x="760.4" y="579.0" width="26.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="763.4" y="590.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.13%)</title><rect x="761.4" y="563.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="764.4" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.13%)</title><rect x="761.4" y="547.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="764.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.11%)</title><rect x="761.4" y="531.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="764.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="761.6" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="764.6" y="526.0"></text>
</g>
<g>
<title>memset (2 samples, 0.04%)</title><rect x="762.1" y="515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="765.1" y="526.0"></text>
</g>
<g>
<title>tcp_push (95 samples, 2.00%)</title><rect x="763.1" y="563.0" width="23.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="766.1" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (95 samples, 2.00%)</title><rect x="763.1" y="547.0" width="23.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="766.1" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (95 samples, 2.00%)</title><rect x="763.1" y="531.0" width="23.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="766.1" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (89 samples, 1.88%)</title><rect x="763.8" y="515.0" width="22.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="766.8" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (85 samples, 1.79%)</title><rect x="764.8" y="499.0" width="21.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="767.8" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (85 samples, 1.79%)</title><rect x="764.8" y="483.0" width="21.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="767.8" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (84 samples, 1.77%)</title><rect x="765.1" y="467.0" width="20.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="768.1" y="478.0"></text>
</g>
<g>
<title>ip_output (83 samples, 1.75%)</title><rect x="765.3" y="451.0" width="20.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="768.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (83 samples, 1.75%)</title><rect x="765.3" y="435.0" width="20.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="768.3" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (82 samples, 1.73%)</title><rect x="765.6" y="419.0" width="20.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="768.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (82 samples, 1.73%)</title><rect x="765.6" y="403.0" width="20.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="768.6" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (79 samples, 1.66%)</title><rect x="765.8" y="387.0" width="19.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="768.8" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (78 samples, 1.64%)</title><rect x="766.1" y="371.0" width="19.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="769.1" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (78 samples, 1.64%)</title><rect x="766.1" y="355.0" width="19.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="769.1" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (78 samples, 1.64%)</title><rect x="766.1" y="339.0" width="19.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="769.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (76 samples, 1.60%)</title><rect x="766.6" y="323.0" width="18.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="769.6" y="334.0"></text>
</g>
<g>
<title>process_backlog (74 samples, 1.56%)</title><rect x="767.1" y="307.0" width="18.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="770.1" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (72 samples, 1.52%)</title><rect x="767.6" y="291.0" width="17.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="770.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (71 samples, 1.50%)</title><rect x="767.8" y="275.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="770.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv (71 samples, 1.50%)</title><rect x="767.8" y="259.0" width="17.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="770.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (70 samples, 1.47%)</title><rect x="768.1" y="243.0" width="17.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="771.1" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (70 samples, 1.47%)</title><rect x="768.1" y="227.0" width="17.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.1" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (70 samples, 1.47%)</title><rect x="768.1" y="211.0" width="17.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="771.1" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (69 samples, 1.45%)</title><rect x="768.1" y="195.0" width="17.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="771.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (68 samples, 1.43%)</title><rect x="768.3" y="179.0" width="16.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="771.3" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.08%)</title><rect x="768.3" y="163.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="771.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (63 samples, 1.33%)</title><rect x="769.6" y="163.0" width="15.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="772.6" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (61 samples, 1.29%)</title><rect x="770.1" y="147.0" width="15.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="773.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.21%)</title><rect x="770.3" y="131.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="773.3" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.11%)</title><rect x="771.3" y="115.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="774.3" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.11%)</title><rect x="771.3" y="99.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="774.3" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="771.3" y="83.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="774.3" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="771.3" y="67.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="774.3" y="78.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="771.8" y="83.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="774.8" y="94.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="771.8" y="67.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="774.8" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (49 samples, 1.03%)</title><rect x="772.8" y="131.0" width="12.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="775.8" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (49 samples, 1.03%)</title><rect x="772.8" y="115.0" width="12.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="775.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (49 samples, 1.03%)</title><rect x="772.8" y="99.0" width="12.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="775.8" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (49 samples, 1.03%)</title><rect x="772.8" y="83.0" width="12.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="775.8" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (49 samples, 1.03%)</title><rect x="772.8" y="67.0" width="12.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="775.8" y="78.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.04%)</title><rect x="785.5" y="387.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="788.5" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.04%)</title><rect x="785.5" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="788.5" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.04%)</title><rect x="786.0" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="789.0" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="786.0" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="789.0" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="786.0" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="789.0" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="786.0" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.0" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="787.0" y="627.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="790.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="787.0" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="790.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="787.7" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.put (434 samples, 9.14%)</title><rect x="788.2" y="803.0" width="107.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.2" y="814.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.08%)</title><rect x="788.2" y="787.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.08%)</title><rect x="788.2" y="771.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="788.2" y="755.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="788.2" y="739.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="788.2" y="723.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.08%)</title><rect x="788.2" y="707.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.08%)</title><rect x="788.2" y="691.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="788.2" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (430 samples, 9.06%)</title><rect x="789.2" y="787.0" width="106.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.2" y="798.0">ru/mail/polis..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (428 samples, 9.02%)</title><rect x="789.2" y="771.0" width="106.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.2" y="782.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (428 samples, 9.02%)</title><rect x="789.2" y="755.0" width="106.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.2" y="766.0">org/rocksdb/R..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (299 samples, 6.30%)</title><rect x="789.2" y="739.0" width="74.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="792.2" y="750.0">Java_org..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (297 samples, 6.26%)</title><rect x="789.7" y="723.0" width="73.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="792.7" y="734.0">rocksdb_..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="790.2" y="707.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="793.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (292 samples, 6.15%)</title><rect x="790.7" y="707.0" width="72.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="793.7" y="718.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (291 samples, 6.13%)</title><rect x="790.9" y="691.0" width="72.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="793.9" y="702.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (289 samples, 6.09%)</title><rect x="790.9" y="675.0" width="71.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="793.9" y="686.0">rocksdb:..</text>
</g>
<g>
<title>cfree (3 samples, 0.06%)</title><rect x="791.2" y="659.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="794.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (276 samples, 5.82%)</title><rect x="792.2" y="659.0" width="68.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="795.2" y="670.0">rocksdb..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="792.2" y="643.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="795.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (270 samples, 5.69%)</title><rect x="792.9" y="643.0" width="67.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="795.9" y="654.0">rocksdb..</text>
</g>
<g>
<title>__sched_yield (47 samples, 0.99%)</title><rect x="793.7" y="627.0" width="11.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="796.7" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.93%)</title><rect x="794.4" y="611.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="797.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.04%)</title><rect x="794.4" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="797.4" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.88%)</title><rect x="794.9" y="595.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="797.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (37 samples, 0.78%)</title><rect x="796.2" y="579.0" width="9.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="799.2" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (37 samples, 0.78%)</title><rect x="796.2" y="563.0" width="9.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="799.2" y="574.0"></text>
</g>
<g>
<title>schedule (37 samples, 0.78%)</title><rect x="796.2" y="547.0" width="9.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="799.2" y="558.0"></text>
</g>
<g>
<title>__schedule (36 samples, 0.76%)</title><rect x="796.4" y="531.0" width="9.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="799.4" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="804.9" y="515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="807.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (30 samples, 0.63%)</title><rect x="806.1" y="627.0" width="7.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="809.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (29 samples, 0.61%)</title><rect x="806.1" y="611.0" width="7.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="809.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (29 samples, 0.61%)</title><rect x="806.1" y="595.0" width="7.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="809.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (27 samples, 0.57%)</title><rect x="806.4" y="579.0" width="6.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="809.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (25 samples, 0.53%)</title><rect x="806.9" y="563.0" width="6.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="809.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="807.4" y="547.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="810.4" y="558.0"></text>
</g>
<g>
<title>__write (21 samples, 0.44%)</title><rect x="807.9" y="547.0" width="5.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="810.9" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.44%)</title><rect x="807.9" y="531.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="810.9" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.42%)</title><rect x="808.1" y="515.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="811.1" y="526.0"></text>
</g>
<g>
<title>__x64_sys_write (20 samples, 0.42%)</title><rect x="808.1" y="499.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="811.1" y="510.0"></text>
</g>
<g>
<title>ksys_write (20 samples, 0.42%)</title><rect x="808.1" y="483.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="811.1" y="494.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="808.1" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="811.1" y="478.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="808.1" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="811.1" y="462.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="808.1" y="435.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="811.1" y="446.0"></text>
</g>
<g>
<title>vfs_write (18 samples, 0.38%)</title><rect x="808.6" y="467.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="811.6" y="478.0"></text>
</g>
<g>
<title>__vfs_write (17 samples, 0.36%)</title><rect x="808.6" y="451.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="811.6" y="462.0"></text>
</g>
<g>
<title>new_sync_write (17 samples, 0.36%)</title><rect x="808.6" y="435.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="811.6" y="446.0"></text>
</g>
<g>
<title>ext4_file_write_iter (17 samples, 0.36%)</title><rect x="808.6" y="419.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="811.6" y="430.0"></text>
</g>
<g>
<title>__generic_file_write_iter (16 samples, 0.34%)</title><rect x="808.6" y="403.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="811.6" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (15 samples, 0.32%)</title><rect x="808.8" y="387.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.8" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (5 samples, 0.11%)</title><rect x="808.8" y="371.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="811.8" y="382.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.06%)</title><rect x="809.3" y="355.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="812.3" y="366.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.06%)</title><rect x="809.3" y="339.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="812.3" y="350.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="809.6" y="323.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="812.6" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_end (8 samples, 0.17%)</title><rect x="810.1" y="371.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="813.1" y="382.0"></text>
</g>
<g>
<title>generic_write_end (7 samples, 0.15%)</title><rect x="810.3" y="355.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="813.3" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (7 samples, 0.15%)</title><rect x="810.3" y="339.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="813.3" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 0.13%)</title><rect x="810.6" y="323.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="813.6" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (6 samples, 0.13%)</title><rect x="810.6" y="307.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.6" y="318.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (6 samples, 0.13%)</title><rect x="810.6" y="291.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="813.6" y="302.0"></text>
</g>
<g>
<title>ext4_do_update_inode (6 samples, 0.13%)</title><rect x="810.6" y="275.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="813.6" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (4 samples, 0.08%)</title><rect x="810.8" y="259.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="813.8" y="270.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (3 samples, 0.06%)</title><rect x="811.1" y="243.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="814.1" y="254.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (11 samples, 0.23%)</title><rect x="814.3" y="627.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="817.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (11 samples, 0.23%)</title><rect x="814.3" y="611.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="817.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (10 samples, 0.21%)</title><rect x="814.6" y="595.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="817.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.21%)</title><rect x="814.6" y="579.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="817.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (10 samples, 0.21%)</title><rect x="814.6" y="563.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="817.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 0.19%)</title><rect x="814.8" y="547.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="817.8" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 0.15%)</title><rect x="815.3" y="531.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="818.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (7 samples, 0.15%)</title><rect x="815.3" y="515.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="818.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.06%)</title><rect x="816.3" y="499.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="819.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="816.6" y="483.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="819.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (34 samples, 0.72%)</title><rect x="817.1" y="627.0" width="8.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="820.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (31 samples, 0.65%)</title><rect x="817.6" y="611.0" width="7.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="820.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="817.6" y="595.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="820.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (29 samples, 0.61%)</title><rect x="818.0" y="595.0" width="7.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="821.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (27 samples, 0.57%)</title><rect x="818.3" y="579.0" width="6.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="821.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (27 samples, 0.57%)</title><rect x="818.3" y="563.0" width="6.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="821.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (23 samples, 0.48%)</title><rect x="819.3" y="547.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="822.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (21 samples, 0.44%)</title><rect x="819.8" y="531.0" width="5.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="822.8" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (21 samples, 0.44%)</title><rect x="819.8" y="515.0" width="5.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="822.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (21 samples, 0.44%)</title><rect x="819.8" y="499.0" width="5.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="822.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (12 samples, 0.25%)</title><rect x="821.5" y="483.0" width="3.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="824.5" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="821.8" y="467.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="824.8" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="822.3" y="467.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="825.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.15%)</title><rect x="822.8" y="467.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="825.8" y="478.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.06%)</title><rect x="823.3" y="451.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="826.3" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="824.0" y="451.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="827.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="824.5" y="483.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="827.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (62 samples, 1.31%)</title><rect x="825.5" y="627.0" width="15.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="828.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (72 samples, 1.52%)</title><rect x="840.9" y="627.0" width="17.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="843.9" y="638.0"></text>
</g>
<g>
<title>__sched_yield (45 samples, 0.95%)</title><rect x="841.4" y="611.0" width="11.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="844.4" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.84%)</title><rect x="842.7" y="595.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="845.7" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.06%)</title><rect x="842.7" y="579.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="845.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.78%)</title><rect x="843.4" y="579.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="846.4" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (28 samples, 0.59%)</title><rect x="845.6" y="563.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="848.6" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (28 samples, 0.59%)</title><rect x="845.6" y="547.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="848.6" y="558.0"></text>
</g>
<g>
<title>schedule (28 samples, 0.59%)</title><rect x="845.6" y="531.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="848.6" y="542.0"></text>
</g>
<g>
<title>__schedule (28 samples, 0.59%)</title><rect x="845.6" y="515.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="848.6" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="852.1" y="499.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="855.1" y="510.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="852.6" y="611.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="855.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (21 samples, 0.44%)</title><rect x="853.1" y="611.0" width="5.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="856.1" y="622.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.04%)</title><rect x="858.3" y="611.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="861.3" y="622.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.04%)</title><rect x="859.6" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="862.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.08%)</title><rect x="860.8" y="659.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="863.8" y="670.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="861.3" y="643.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="864.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="862.1" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="865.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.51%)</title><rect x="863.5" y="739.0" width="6.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="866.5" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (21 samples, 0.44%)</title><rect x="864.0" y="723.0" width="5.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="867.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.42%)</title><rect x="864.3" y="707.0" width="5.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.42%)</title><rect x="864.3" y="691.0" width="5.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.42%)</title><rect x="864.3" y="675.0" width="5.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="867.3" y="686.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.42%)</title><rect x="864.3" y="659.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="867.3" y="670.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.42%)</title><rect x="864.3" y="643.0" width="5.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="867.3" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.36%)</title><rect x="864.5" y="627.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="867.5" y="638.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.34%)</title><rect x="864.8" y="611.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="867.8" y="622.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.34%)</title><rect x="864.8" y="595.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="867.8" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.34%)</title><rect x="864.8" y="579.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="867.8" y="590.0"></text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.06%)</title><rect x="869.5" y="739.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="872.5" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (85 samples, 1.79%)</title><rect x="870.3" y="739.0" width="21.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="873.3" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.77%)</title><rect x="870.5" y="723.0" width="20.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 1.77%)</title><rect x="870.5" y="707.0" width="20.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="873.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (84 samples, 1.77%)</title><rect x="870.5" y="691.0" width="20.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.5" y="702.0"></text>
</g>
<g>
<title>do_futex (84 samples, 1.77%)</title><rect x="870.5" y="675.0" width="20.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.5" y="686.0"></text>
</g>
<g>
<title>futex_wake (84 samples, 1.77%)</title><rect x="870.5" y="659.0" width="20.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="873.5" y="670.0"></text>
</g>
<g>
<title>wake_up_q (82 samples, 1.73%)</title><rect x="871.0" y="643.0" width="20.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.0" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (82 samples, 1.73%)</title><rect x="871.0" y="627.0" width="20.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="874.0" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (82 samples, 1.73%)</title><rect x="871.0" y="611.0" width="20.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="874.0" y="622.0"></text>
</g>
<g>
<title>clock_gettime (16 samples, 0.34%)</title><rect x="891.4" y="739.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="894.4" y="750.0"></text>
</g>
<g>
<title>clock_gettime (15 samples, 0.32%)</title><rect x="891.6" y="723.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="894.6" y="734.0"></text>
</g>
<g>
<title>[vdso] (15 samples, 0.32%)</title><rect x="891.6" y="707.0" width="3.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="894.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.15%)</title><rect x="896.4" y="851.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.4" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.08%)</title><rect x="897.1" y="835.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="898.1" y="851.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="898.4" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 0.21%)</title><rect x="898.9" y="867.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.19%)</title><rect x="898.9" y="851.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.9" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="898.9" y="835.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="901.9" y="846.0"></text>
</g>
<g>
<title>__recv (7 samples, 0.15%)</title><rect x="899.4" y="835.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="902.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.15%)</title><rect x="899.4" y="819.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="902.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.15%)</title><rect x="899.4" y="803.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="902.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.15%)</title><rect x="899.4" y="787.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="902.4" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 0.13%)</title><rect x="899.4" y="771.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="902.4" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.11%)</title><rect x="899.4" y="755.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="902.4" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.11%)</title><rect x="899.4" y="739.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="902.4" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.11%)</title><rect x="899.4" y="723.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="902.4" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="899.8" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="902.8" y="718.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=44080] (598 samples, 12.60%)</title><rect x="901.3" y="931.0" width="148.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="904.3" y="942.0">[NIO Selector #6 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (598 samples, 12.60%)</title><rect x="901.3" y="915.0" width="148.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.3" y="926.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.19%)</title><rect x="901.6" y="899.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.19%)</title><rect x="901.6" y="883.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.6" y="894.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.15%)</title><rect x="902.1" y="867.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="905.1" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.15%)</title><rect x="902.1" y="851.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="905.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.15%)</title><rect x="902.1" y="835.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="905.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 0.15%)</title><rect x="902.1" y="819.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="905.1" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (7 samples, 0.15%)</title><rect x="902.1" y="803.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="905.1" y="814.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 0.15%)</title><rect x="902.1" y="787.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="905.1" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.11%)</title><rect x="902.1" y="771.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="905.1" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.11%)</title><rect x="902.1" y="755.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="905.1" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.08%)</title><rect x="902.1" y="739.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="905.1" y="750.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.06%)</title><rect x="902.1" y="723.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="905.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.04%)</title><rect x="903.3" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="906.3" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.04%)</title><rect x="903.3" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="906.3" y="766.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="903.3" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="906.3" y="750.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="903.3" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="906.3" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="903.3" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="906.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (587 samples, 12.37%)</title><rect x="903.8" y="899.0" width="146.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.8" y="910.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (583 samples, 12.28%)</title><rect x="904.8" y="883.0" width="145.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.8" y="894.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (565 samples, 11.90%)</title><rect x="904.8" y="867.0" width="140.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.8" y="878.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (554 samples, 11.67%)</title><rect x="905.3" y="851.0" width="137.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.3" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (554 samples, 11.67%)</title><rect x="905.3" y="835.0" width="137.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.3" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (550 samples, 11.59%)</title><rect x="905.3" y="819.0" width="136.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.3" y="830.0">RequestHandler1_p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (122 samples, 2.57%)</title><rect x="906.1" y="803.0" width="30.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.1" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (120 samples, 2.53%)</title><rect x="906.3" y="787.0" width="29.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.3" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (118 samples, 2.49%)</title><rect x="906.8" y="771.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.8" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (118 samples, 2.49%)</title><rect x="906.8" y="755.0" width="29.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.8" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (118 samples, 2.49%)</title><rect x="906.8" y="739.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.8" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (118 samples, 2.49%)</title><rect x="906.8" y="723.0" width="29.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.8" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.06%)</title><rect x="907.3" y="707.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="910.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="907.3" y="691.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="910.3" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.06%)</title><rect x="907.3" y="675.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="910.3" y="686.0"></text>
</g>
<g>
<title>send (113 samples, 2.38%)</title><rect x="908.1" y="707.0" width="28.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="911.1" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (112 samples, 2.36%)</title><rect x="908.3" y="691.0" width="27.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="911.3" y="702.0">e..</text>
</g>
<g>
<title>do_syscall_64 (111 samples, 2.34%)</title><rect x="908.6" y="675.0" width="27.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="911.6" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (110 samples, 2.32%)</title><rect x="908.6" y="659.0" width="27.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="911.6" y="670.0">_..</text>
</g>
<g>
<title>__sys_sendto (110 samples, 2.32%)</title><rect x="908.6" y="643.0" width="27.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="911.6" y="654.0">_..</text>
</g>
<g>
<title>sock_sendmsg (105 samples, 2.21%)</title><rect x="909.0" y="627.0" width="26.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="912.0" y="638.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (105 samples, 2.21%)</title><rect x="909.0" y="611.0" width="26.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="912.0" y="622.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (105 samples, 2.21%)</title><rect x="909.0" y="595.0" width="26.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="912.0" y="606.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (103 samples, 2.17%)</title><rect x="909.5" y="579.0" width="25.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="912.5" y="590.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.08%)</title><rect x="910.8" y="563.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="913.8" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.06%)</title><rect x="911.0" y="547.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="914.0" y="558.0"></text>
</g>
<g>
<title>tcp_push (93 samples, 1.96%)</title><rect x="912.0" y="563.0" width="23.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="915.0" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (93 samples, 1.96%)</title><rect x="912.0" y="547.0" width="23.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="915.0" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (92 samples, 1.94%)</title><rect x="912.3" y="531.0" width="22.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="915.3" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (89 samples, 1.88%)</title><rect x="912.5" y="515.0" width="22.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="915.5" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (86 samples, 1.81%)</title><rect x="913.3" y="499.0" width="21.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="916.3" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (86 samples, 1.81%)</title><rect x="913.3" y="483.0" width="21.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="916.3" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (85 samples, 1.79%)</title><rect x="913.3" y="467.0" width="21.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="916.3" y="478.0">i..</text>
</g>
<g>
<title>ip_output (85 samples, 1.79%)</title><rect x="913.3" y="451.0" width="21.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="916.3" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (85 samples, 1.79%)</title><rect x="913.3" y="435.0" width="21.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.3" y="446.0">i..</text>
</g>
<g>
<title>__ip_finish_output (85 samples, 1.79%)</title><rect x="913.3" y="419.0" width="21.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="916.3" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (85 samples, 1.79%)</title><rect x="913.3" y="403.0" width="21.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="916.3" y="414.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (70 samples, 1.47%)</title><rect x="914.5" y="387.0" width="17.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="917.5" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (70 samples, 1.47%)</title><rect x="914.5" y="371.0" width="17.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="917.5" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (69 samples, 1.45%)</title><rect x="914.8" y="355.0" width="17.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="917.8" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (68 samples, 1.43%)</title><rect x="914.8" y="339.0" width="16.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="917.8" y="350.0"></text>
</g>
<g>
<title>net_rx_action (65 samples, 1.37%)</title><rect x="915.5" y="323.0" width="16.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="918.5" y="334.0"></text>
</g>
<g>
<title>process_backlog (64 samples, 1.35%)</title><rect x="915.8" y="307.0" width="15.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="918.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (63 samples, 1.33%)</title><rect x="916.0" y="291.0" width="15.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="919.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (63 samples, 1.33%)</title><rect x="916.0" y="275.0" width="15.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (61 samples, 1.29%)</title><rect x="916.3" y="259.0" width="15.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="919.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (60 samples, 1.26%)</title><rect x="916.5" y="243.0" width="14.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="919.5" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (60 samples, 1.26%)</title><rect x="916.5" y="227.0" width="14.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="919.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (60 samples, 1.26%)</title><rect x="916.5" y="211.0" width="14.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="919.5" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (60 samples, 1.26%)</title><rect x="916.5" y="195.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="919.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (59 samples, 1.24%)</title><rect x="916.8" y="179.0" width="14.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.8" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="917.0" y="163.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="920.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (55 samples, 1.16%)</title><rect x="917.7" y="163.0" width="13.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (53 samples, 1.12%)</title><rect x="918.2" y="147.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="921.2" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.04%)</title><rect x="918.5" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="921.5" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="918.5" y="115.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="921.5" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="918.5" y="99.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="921.5" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="918.5" y="83.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="921.5" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="918.5" y="67.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="921.5" y="78.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.06%)</title><rect x="919.5" y="131.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="922.5" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (43 samples, 0.91%)</title><rect x="920.2" y="131.0" width="10.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="923.2" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (43 samples, 0.91%)</title><rect x="920.2" y="115.0" width="10.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="923.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (43 samples, 0.91%)</title><rect x="920.2" y="99.0" width="10.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="923.2" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (43 samples, 0.91%)</title><rect x="920.2" y="83.0" width="10.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="923.2" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (42 samples, 0.88%)</title><rect x="920.2" y="67.0" width="10.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="923.2" y="78.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.21%)</title><rect x="931.9" y="387.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="934.9" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.21%)</title><rect x="931.9" y="371.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="934.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.17%)</title><rect x="931.9" y="355.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="934.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.15%)</title><rect x="932.2" y="339.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.11%)</title><rect x="932.4" y="323.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="935.4" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.11%)</title><rect x="932.4" y="307.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="935.4" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.11%)</title><rect x="932.4" y="291.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="935.4" y="302.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="935.2" y="627.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="938.2" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="935.2" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="938.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="935.2" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="938.2" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="935.2" y="579.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="938.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.put (425 samples, 8.95%)</title><rect x="936.4" y="803.0" width="105.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="939.4" y="814.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="936.4" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="939.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="936.4" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="936.4" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="939.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="936.4" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="939.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="936.4" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="939.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="936.4" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="939.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="936.4" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="939.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (423 samples, 8.91%)</title><rect x="936.9" y="787.0" width="105.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="939.9" y="798.0">ru/mail/polis..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (423 samples, 8.91%)</title><rect x="936.9" y="771.0" width="105.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.9" y="782.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (423 samples, 8.91%)</title><rect x="936.9" y="755.0" width="105.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="939.9" y="766.0">org/rocksdb/R..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (288 samples, 6.07%)</title><rect x="937.1" y="739.0" width="71.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="940.1" y="750.0">Java_org..</text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="938.1" y="723.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="941.1" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (282 samples, 5.94%)</title><rect x="938.6" y="723.0" width="70.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="941.6" y="734.0">rocksdb_..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="938.9" y="707.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="941.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (278 samples, 5.86%)</title><rect x="939.4" y="707.0" width="69.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="942.4" y="718.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (278 samples, 5.86%)</title><rect x="939.4" y="691.0" width="69.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="942.4" y="702.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (273 samples, 5.75%)</title><rect x="939.4" y="675.0" width="67.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="942.4" y="686.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (262 samples, 5.52%)</title><rect x="939.4" y="659.0" width="65.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="942.4" y="670.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (258 samples, 5.44%)</title><rect x="939.6" y="643.0" width="64.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="942.6" y="654.0">rocksdb..</text>
</g>
<g>
<title>__sched_yield (47 samples, 0.99%)</title><rect x="941.4" y="627.0" width="11.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="944.4" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.84%)</title><rect x="943.1" y="611.0" width="10.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="946.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.06%)</title><rect x="943.1" y="595.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="946.1" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.78%)</title><rect x="943.9" y="595.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (32 samples, 0.67%)</title><rect x="945.1" y="579.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="948.1" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (32 samples, 0.67%)</title><rect x="945.1" y="563.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="948.1" y="574.0"></text>
</g>
<g>
<title>schedule (32 samples, 0.67%)</title><rect x="945.1" y="547.0" width="8.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="948.1" y="558.0"></text>
</g>
<g>
<title>__schedule (32 samples, 0.67%)</title><rect x="945.1" y="531.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="948.1" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="952.6" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="955.6" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="953.1" y="627.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="956.1" y="638.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.08%)</title><rect x="953.8" y="627.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="956.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (23 samples, 0.48%)</title><rect x="954.8" y="627.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="957.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (20 samples, 0.42%)</title><rect x="955.3" y="611.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="958.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (20 samples, 0.42%)</title><rect x="955.3" y="595.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="958.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (16 samples, 0.34%)</title><rect x="956.3" y="579.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="959.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (16 samples, 0.34%)</title><rect x="956.3" y="563.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="959.3" y="574.0"></text>
</g>
<g>
<title>__write (16 samples, 0.34%)</title><rect x="956.3" y="547.0" width="4.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="959.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.34%)</title><rect x="956.3" y="531.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="959.3" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.34%)</title><rect x="956.3" y="515.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="959.3" y="526.0"></text>
</g>
<g>
<title>__x64_sys_write (16 samples, 0.34%)</title><rect x="956.3" y="499.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="959.3" y="510.0"></text>
</g>
<g>
<title>ksys_write (16 samples, 0.34%)</title><rect x="956.3" y="483.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="959.3" y="494.0"></text>
</g>
<g>
<title>vfs_write (16 samples, 0.34%)</title><rect x="956.3" y="467.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="959.3" y="478.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.34%)</title><rect x="956.3" y="451.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.3" y="462.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.34%)</title><rect x="956.3" y="435.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="959.3" y="446.0"></text>
</g>
<g>
<title>ext4_file_write_iter (15 samples, 0.32%)</title><rect x="956.3" y="419.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="959.3" y="430.0"></text>
</g>
<g>
<title>__generic_file_write_iter (14 samples, 0.29%)</title><rect x="956.5" y="403.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="959.5" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (13 samples, 0.27%)</title><rect x="956.8" y="387.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="959.8" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (5 samples, 0.11%)</title><rect x="956.8" y="371.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="959.8" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.04%)</title><rect x="956.8" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="959.8" y="366.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.04%)</title><rect x="956.8" y="339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="959.8" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="956.8" y="323.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="959.8" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 0.13%)</title><rect x="958.0" y="371.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="961.0" y="382.0"></text>
</g>
<g>
<title>generic_write_end (5 samples, 0.11%)</title><rect x="958.3" y="355.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="961.3" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.08%)</title><rect x="958.5" y="339.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="961.5" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.08%)</title><rect x="958.5" y="323.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="961.5" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.08%)</title><rect x="958.5" y="307.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="961.5" y="318.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="958.5" y="291.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="961.5" y="302.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.04%)</title><rect x="959.0" y="291.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="962.0" y="302.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="959.0" y="275.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.0" y="286.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.04%)</title><rect x="959.5" y="371.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="962.5" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.04%)</title><rect x="959.5" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="962.5" y="366.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 0.19%)</title><rect x="960.8" y="627.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="963.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 0.19%)</title><rect x="960.8" y="611.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="963.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 0.19%)</title><rect x="960.8" y="595.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="963.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.19%)</title><rect x="960.8" y="579.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="963.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 0.19%)</title><rect x="960.8" y="563.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="963.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.17%)</title><rect x="961.0" y="547.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="964.0" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="961.3" y="531.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="964.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.04%)</title><rect x="961.3" y="515.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="964.3" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.11%)</title><rect x="961.8" y="531.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="964.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (5 samples, 0.11%)</title><rect x="961.8" y="515.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="964.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.08%)</title><rect x="961.8" y="499.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="964.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="962.3" y="483.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="965.3" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="962.3" y="467.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="965.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (41 samples, 0.86%)</title><rect x="963.0" y="627.0" width="10.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="966.0" y="638.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.04%)</title><rect x="963.2" y="611.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="966.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (37 samples, 0.78%)</title><rect x="964.0" y="611.0" width="9.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="967.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.04%)</title><rect x="964.0" y="595.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="967.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (35 samples, 0.74%)</title><rect x="964.5" y="595.0" width="8.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="967.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (33 samples, 0.70%)</title><rect x="964.7" y="579.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="967.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (29 samples, 0.61%)</title><rect x="965.2" y="563.0" width="7.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="968.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (25 samples, 0.53%)</title><rect x="965.7" y="547.0" width="6.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="968.7" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.06%)</title><rect x="966.2" y="531.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="969.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.04%)</title><rect x="966.5" y="515.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="969.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (20 samples, 0.42%)</title><rect x="967.0" y="531.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="970.0" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (20 samples, 0.42%)</title><rect x="967.0" y="515.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="970.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (19 samples, 0.40%)</title><rect x="967.0" y="499.0" width="4.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="970.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (9 samples, 0.19%)</title><rect x="969.0" y="483.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="972.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.17%)</title><rect x="969.2" y="467.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="972.2" y="478.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.08%)</title><rect x="969.5" y="451.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="972.5" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="970.5" y="451.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="973.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="971.2" y="483.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="974.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (58 samples, 1.22%)</title><rect x="973.2" y="627.0" width="14.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="976.2" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="985.9" y="611.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="988.9" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="985.9" y="595.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="988.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="985.9" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="988.9" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="985.9" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="988.9" y="574.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="985.9" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="988.9" y="558.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="985.9" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="988.9" y="542.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="985.9" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="988.9" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="987.1" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="990.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="987.1" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="990.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="987.1" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="990.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (62 samples, 1.31%)</title><rect x="987.6" y="627.0" width="15.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="990.6" y="638.0"></text>
</g>
<g>
<title>__sched_yield (38 samples, 0.80%)</title><rect x="987.6" y="611.0" width="9.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="990.6" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.74%)</title><rect x="988.4" y="595.0" width="8.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="991.4" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.72%)</title><rect x="988.6" y="579.0" width="8.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="991.6" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (31 samples, 0.65%)</title><rect x="989.4" y="563.0" width="7.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="992.4" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (31 samples, 0.65%)</title><rect x="989.4" y="547.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="992.4" y="558.0"></text>
</g>
<g>
<title>schedule (30 samples, 0.63%)</title><rect x="989.6" y="531.0" width="7.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="992.6" y="542.0"></text>
</g>
<g>
<title>__schedule (29 samples, 0.61%)</title><rect x="989.9" y="515.0" width="7.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="992.9" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="996.6" y="499.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="999.6" y="510.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="997.3" y="611.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1000.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (20 samples, 0.42%)</title><rect x="998.1" y="611.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1001.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.04%)</title><rect x="1004.5" y="659.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1007.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.06%)</title><rect x="1005.0" y="659.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.11%)</title><rect x="1005.8" y="659.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1008.8" y="670.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="1006.5" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.06%)</title><rect x="1007.5" y="675.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1010.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.44%)</title><rect x="1008.7" y="739.0" width="5.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1011.7" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="1008.7" y="723.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1011.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (17 samples, 0.36%)</title><rect x="1009.5" y="723.0" width="4.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1012.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.34%)</title><rect x="1009.7" y="707.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.34%)</title><rect x="1009.7" y="691.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.32%)</title><rect x="1010.0" y="675.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1013.0" y="686.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.32%)</title><rect x="1010.0" y="659.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1013.0" y="670.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.29%)</title><rect x="1010.0" y="643.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1013.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.25%)</title><rect x="1010.0" y="627.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1013.0" y="638.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.25%)</title><rect x="1010.0" y="611.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1013.0" y="622.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.25%)</title><rect x="1010.0" y="595.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1013.0" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.23%)</title><rect x="1010.2" y="579.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1013.2" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="1013.0" y="627.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1016.0" y="638.0"></text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.06%)</title><rect x="1014.0" y="739.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1017.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (92 samples, 1.94%)</title><rect x="1014.7" y="739.0" width="22.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1017.7" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 1.94%)</title><rect x="1014.7" y="723.0" width="22.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1017.7" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (92 samples, 1.94%)</title><rect x="1014.7" y="707.0" width="22.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1017.7" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (92 samples, 1.94%)</title><rect x="1014.7" y="691.0" width="22.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1017.7" y="702.0">_..</text>
</g>
<g>
<title>do_futex (92 samples, 1.94%)</title><rect x="1014.7" y="675.0" width="22.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1017.7" y="686.0">d..</text>
</g>
<g>
<title>futex_wake (92 samples, 1.94%)</title><rect x="1014.7" y="659.0" width="22.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1017.7" y="670.0">f..</text>
</g>
<g>
<title>wake_up_q (91 samples, 1.92%)</title><rect x="1015.0" y="643.0" width="22.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1018.0" y="654.0">w..</text>
</g>
<g>
<title>try_to_wake_up (91 samples, 1.92%)</title><rect x="1015.0" y="627.0" width="22.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1018.0" y="638.0">t..</text>
</g>
<g>
<title>__lock_text_start (91 samples, 1.92%)</title><rect x="1015.0" y="611.0" width="22.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1018.0" y="622.0">_..</text>
</g>
<g>
<title>clock_gettime (17 samples, 0.36%)</title><rect x="1037.6" y="739.0" width="4.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1040.6" y="750.0"></text>
</g>
<g>
<title>clock_gettime (14 samples, 0.29%)</title><rect x="1038.3" y="723.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1041.3" y="734.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.25%)</title><rect x="1038.8" y="707.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1041.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.08%)</title><rect x="1042.1" y="819.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="1042.1" y="803.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.08%)</title><rect x="1042.1" y="787.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.15%)</title><rect x="1043.1" y="851.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1043.1" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1043.1" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1043.1" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1043.1" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="1043.6" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.04%)</title><rect x="1044.3" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="1044.8" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 0.38%)</title><rect x="1045.3" y="867.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.38%)</title><rect x="1045.3" y="851.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.3" y="862.0"></text>
</g>
<g>
<title>__recv (16 samples, 0.34%)</title><rect x="1045.5" y="835.0" width="4.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1048.5" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.29%)</title><rect x="1046.0" y="819.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1049.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.29%)</title><rect x="1046.0" y="803.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1049.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (14 samples, 0.29%)</title><rect x="1046.0" y="787.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1049.0" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (14 samples, 0.29%)</title><rect x="1046.0" y="771.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1049.0" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.25%)</title><rect x="1046.0" y="755.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1049.0" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (12 samples, 0.25%)</title><rect x="1046.0" y="739.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1049.0" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.25%)</title><rect x="1046.0" y="723.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1049.0" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="1046.8" y="707.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1049.8" y="718.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="1046.8" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1049.8" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="1046.8" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1049.8" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.04%)</title><rect x="1046.8" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1049.8" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.06%)</title><rect x="1047.8" y="707.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1050.8" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.06%)</title><rect x="1047.8" y="691.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.8" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.06%)</title><rect x="1047.8" y="675.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1050.8" y="686.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="1048.0" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1051.0" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.04%)</title><rect x="1048.5" y="707.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1051.5" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="1049.0" y="755.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1052.0" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=44081] (532 samples, 11.21%)</title><rect x="1050.0" y="931.0" width="132.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1053.0" y="942.0">[NIO Selector #7..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (532 samples, 11.21%)</title><rect x="1050.0" y="915.0" width="132.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.0" y="926.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.21%)</title><rect x="1050.3" y="899.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 0.21%)</title><rect x="1050.3" y="883.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.3" y="894.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.21%)</title><rect x="1050.3" y="867.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1053.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.21%)</title><rect x="1050.3" y="851.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1053.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.21%)</title><rect x="1050.3" y="835.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1053.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 0.19%)</title><rect x="1050.5" y="819.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1053.5" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (9 samples, 0.19%)</title><rect x="1050.5" y="803.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1053.5" y="814.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.19%)</title><rect x="1050.5" y="787.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1053.5" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.08%)</title><rect x="1050.8" y="771.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1053.8" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.06%)</title><rect x="1050.8" y="755.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1053.8" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.06%)</title><rect x="1050.8" y="739.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1053.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.06%)</title><rect x="1050.8" y="723.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1053.8" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.08%)</title><rect x="1051.8" y="771.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1054.8" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.08%)</title><rect x="1051.8" y="755.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1054.8" y="766.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.08%)</title><rect x="1051.8" y="739.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1054.8" y="750.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.08%)</title><rect x="1051.8" y="723.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1054.8" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.08%)</title><rect x="1051.8" y="707.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1054.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (521 samples, 10.98%)</title><rect x="1052.8" y="899.0" width="129.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.8" y="910.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (520 samples, 10.96%)</title><rect x="1053.0" y="883.0" width="129.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.0" y="894.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (503 samples, 10.60%)</title><rect x="1053.0" y="867.0" width="125.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.0" y="878.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (500 samples, 10.54%)</title><rect x="1053.3" y="851.0" width="124.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.3" y="862.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (500 samples, 10.54%)</title><rect x="1053.3" y="835.0" width="124.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.3" y="846.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (498 samples, 10.49%)</title><rect x="1053.3" y="819.0" width="123.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.3" y="830.0">RequestHandler1..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (95 samples, 2.00%)</title><rect x="1053.3" y="803.0" width="23.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.3" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 1.98%)</title><rect x="1053.5" y="787.0" width="23.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1056.5" y="798.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 1.96%)</title><rect x="1053.8" y="771.0" width="23.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.8" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 1.96%)</title><rect x="1053.8" y="755.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.8" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (92 samples, 1.94%)</title><rect x="1054.0" y="739.0" width="22.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.0" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (92 samples, 1.94%)</title><rect x="1054.0" y="723.0" width="22.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1057.0" y="734.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="1054.0" y="707.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1057.0" y="718.0"></text>
</g>
<g>
<title>send (90 samples, 1.90%)</title><rect x="1054.5" y="707.0" width="22.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1057.5" y="718.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 1.85%)</title><rect x="1055.0" y="691.0" width="21.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.0" y="702.0">e..</text>
</g>
<g>
<title>do_syscall_64 (88 samples, 1.85%)</title><rect x="1055.0" y="675.0" width="21.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1058.0" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (87 samples, 1.83%)</title><rect x="1055.0" y="659.0" width="21.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1058.0" y="670.0">_..</text>
</g>
<g>
<title>__sys_sendto (86 samples, 1.81%)</title><rect x="1055.0" y="643.0" width="21.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1058.0" y="654.0">_..</text>
</g>
<g>
<title>sock_sendmsg (84 samples, 1.77%)</title><rect x="1055.5" y="627.0" width="20.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1058.5" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (84 samples, 1.77%)</title><rect x="1055.5" y="611.0" width="20.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1058.5" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (84 samples, 1.77%)</title><rect x="1055.5" y="595.0" width="20.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1058.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (83 samples, 1.75%)</title><rect x="1055.7" y="579.0" width="20.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1058.7" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.08%)</title><rect x="1057.0" y="563.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1060.0" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.08%)</title><rect x="1057.0" y="547.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1060.0" y="558.0"></text>
</g>
<g>
<title>tcp_push (74 samples, 1.56%)</title><rect x="1058.0" y="563.0" width="18.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1061.0" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (74 samples, 1.56%)</title><rect x="1058.0" y="547.0" width="18.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1061.0" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (74 samples, 1.56%)</title><rect x="1058.0" y="531.0" width="18.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1061.0" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (73 samples, 1.54%)</title><rect x="1058.0" y="515.0" width="18.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1061.0" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (73 samples, 1.54%)</title><rect x="1058.0" y="499.0" width="18.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.0" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (73 samples, 1.54%)</title><rect x="1058.0" y="483.0" width="18.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1061.0" y="494.0"></text>
</g>
<g>
<title>ip_local_out (73 samples, 1.54%)</title><rect x="1058.0" y="467.0" width="18.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.0" y="478.0"></text>
</g>
<g>
<title>ip_output (73 samples, 1.54%)</title><rect x="1058.0" y="451.0" width="18.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1061.0" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (73 samples, 1.54%)</title><rect x="1058.0" y="435.0" width="18.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.0" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (72 samples, 1.52%)</title><rect x="1058.2" y="419.0" width="17.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1061.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (72 samples, 1.52%)</title><rect x="1058.2" y="403.0" width="17.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1061.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (68 samples, 1.43%)</title><rect x="1058.2" y="387.0" width="16.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1061.2" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (68 samples, 1.43%)</title><rect x="1058.2" y="371.0" width="16.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1061.2" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (68 samples, 1.43%)</title><rect x="1058.2" y="355.0" width="16.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1061.2" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (67 samples, 1.41%)</title><rect x="1058.2" y="339.0" width="16.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.2" y="350.0"></text>
</g>
<g>
<title>net_rx_action (66 samples, 1.39%)</title><rect x="1058.5" y="323.0" width="16.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1061.5" y="334.0"></text>
</g>
<g>
<title>process_backlog (66 samples, 1.39%)</title><rect x="1058.5" y="307.0" width="16.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1061.5" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (66 samples, 1.39%)</title><rect x="1058.5" y="291.0" width="16.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.5" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (66 samples, 1.39%)</title><rect x="1058.5" y="275.0" width="16.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1061.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (65 samples, 1.37%)</title><rect x="1058.7" y="259.0" width="16.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1061.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (65 samples, 1.37%)</title><rect x="1058.7" y="243.0" width="16.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1061.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (64 samples, 1.35%)</title><rect x="1059.0" y="227.0" width="15.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1062.0" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (64 samples, 1.35%)</title><rect x="1059.0" y="211.0" width="15.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1062.0" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (64 samples, 1.35%)</title><rect x="1059.0" y="195.0" width="15.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1062.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (64 samples, 1.35%)</title><rect x="1059.0" y="179.0" width="15.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1062.0" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="1059.5" y="163.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1062.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (57 samples, 1.20%)</title><rect x="1060.7" y="163.0" width="14.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1063.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (56 samples, 1.18%)</title><rect x="1061.0" y="147.0" width="13.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1064.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.17%)</title><rect x="1061.5" y="131.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1064.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.13%)</title><rect x="1061.7" y="115.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1064.7" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.13%)</title><rect x="1061.7" y="99.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1064.7" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.08%)</title><rect x="1061.7" y="83.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1064.7" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.08%)</title><rect x="1061.7" y="67.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1064.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="1062.7" y="83.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="1062.7" y="67.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1065.7" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (45 samples, 0.95%)</title><rect x="1063.4" y="131.0" width="11.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1066.4" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (45 samples, 0.95%)</title><rect x="1063.4" y="115.0" width="11.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1066.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 0.93%)</title><rect x="1063.7" y="99.0" width="10.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1066.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (44 samples, 0.93%)</title><rect x="1063.7" y="83.0" width="10.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1066.7" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (44 samples, 0.93%)</title><rect x="1063.7" y="67.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1066.7" y="78.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.08%)</title><rect x="1075.1" y="387.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1078.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.08%)</title><rect x="1075.1" y="371.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1078.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="1075.4" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1078.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/ServiceImpl.put (402 samples, 8.47%)</title><rect x="1077.1" y="803.0" width="100.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.1" y="814.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.upsert (401 samples, 8.45%)</title><rect x="1077.4" y="787.0" width="99.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1080.4" y="798.0">ru/mail/poli..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (398 samples, 8.39%)</title><rect x="1077.4" y="771.0" width="98.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.4" y="782.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (396 samples, 8.34%)</title><rect x="1077.9" y="755.0" width="98.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1080.9" y="766.0">org/rocksdb/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (271 samples, 5.71%)</title><rect x="1079.4" y="739.0" width="67.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1082.4" y="750.0">Java_or..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (266 samples, 5.60%)</title><rect x="1080.6" y="723.0" width="66.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1083.6" y="734.0">rocksdb..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="1081.1" y="707.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1084.1" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="1081.1" y="691.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1084.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (260 samples, 5.48%)</title><rect x="1081.6" y="707.0" width="64.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1084.6" y="718.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (258 samples, 5.44%)</title><rect x="1082.1" y="691.0" width="64.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1085.1" y="702.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (256 samples, 5.39%)</title><rect x="1082.1" y="675.0" width="63.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1085.1" y="686.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (246 samples, 5.18%)</title><rect x="1082.3" y="659.0" width="61.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1085.3" y="670.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1082.3" y="643.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1085.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (241 samples, 5.08%)</title><rect x="1083.6" y="643.0" width="59.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1086.6" y="654.0">rocksd..</text>
</g>
<g>
<title>__sched_yield (50 samples, 1.05%)</title><rect x="1086.1" y="627.0" width="12.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1089.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.97%)</title><rect x="1087.1" y="611.0" width="11.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1090.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.04%)</title><rect x="1087.1" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.1" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.93%)</title><rect x="1087.6" y="595.0" width="10.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1090.6" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (36 samples, 0.76%)</title><rect x="1089.6" y="579.0" width="8.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1092.6" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (36 samples, 0.76%)</title><rect x="1089.6" y="563.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1092.6" y="574.0"></text>
</g>
<g>
<title>schedule (36 samples, 0.76%)</title><rect x="1089.6" y="547.0" width="8.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1092.6" y="558.0"></text>
</g>
<g>
<title>__schedule (36 samples, 0.76%)</title><rect x="1089.6" y="531.0" width="8.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1092.6" y="542.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="1098.5" y="627.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1101.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (27 samples, 0.57%)</title><rect x="1099.2" y="627.0" width="6.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1102.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (25 samples, 0.53%)</title><rect x="1099.5" y="611.0" width="6.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1102.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (25 samples, 0.53%)</title><rect x="1099.5" y="595.0" width="6.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1102.5" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (2 samples, 0.04%)</title><rect x="1099.7" y="579.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1102.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (21 samples, 0.44%)</title><rect x="1100.2" y="579.0" width="5.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1103.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (19 samples, 0.40%)</title><rect x="1100.7" y="563.0" width="4.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1103.7" y="574.0"></text>
</g>
<g>
<title>__write (19 samples, 0.40%)</title><rect x="1100.7" y="547.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1103.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.40%)</title><rect x="1100.7" y="531.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1103.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.40%)</title><rect x="1100.7" y="515.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1103.7" y="526.0"></text>
</g>
<g>
<title>__x64_sys_write (19 samples, 0.40%)</title><rect x="1100.7" y="499.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1103.7" y="510.0"></text>
</g>
<g>
<title>ksys_write (19 samples, 0.40%)</title><rect x="1100.7" y="483.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1103.7" y="494.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="1100.7" y="467.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1103.7" y="478.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.36%)</title><rect x="1101.2" y="467.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1104.2" y="478.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.34%)</title><rect x="1101.5" y="451.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1104.5" y="462.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.34%)</title><rect x="1101.5" y="435.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1104.5" y="446.0"></text>
</g>
<g>
<title>ext4_file_write_iter (16 samples, 0.34%)</title><rect x="1101.5" y="419.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1104.5" y="430.0"></text>
</g>
<g>
<title>__generic_file_write_iter (14 samples, 0.29%)</title><rect x="1101.5" y="403.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1104.5" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (14 samples, 0.29%)</title><rect x="1101.5" y="387.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1104.5" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.08%)</title><rect x="1101.7" y="371.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1104.7" y="382.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.04%)</title><rect x="1102.2" y="355.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1105.2" y="366.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.04%)</title><rect x="1102.2" y="339.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1105.2" y="350.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="1102.2" y="323.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1105.2" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_end (9 samples, 0.19%)</title><rect x="1102.7" y="371.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1105.7" y="382.0"></text>
</g>
<g>
<title>generic_write_end (7 samples, 0.15%)</title><rect x="1103.0" y="355.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1106.0" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (7 samples, 0.15%)</title><rect x="1103.0" y="339.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1106.0" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (7 samples, 0.15%)</title><rect x="1103.0" y="323.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1106.0" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.08%)</title><rect x="1103.2" y="307.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1106.2" y="318.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.06%)</title><rect x="1103.5" y="291.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1106.5" y="302.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.04%)</title><rect x="1103.7" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1106.7" y="286.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.04%)</title><rect x="1106.2" y="627.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1109.2" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="1106.2" y="611.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1109.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 0.19%)</title><rect x="1107.0" y="627.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1110.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (8 samples, 0.17%)</title><rect x="1107.2" y="611.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1110.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (8 samples, 0.17%)</title><rect x="1107.2" y="595.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1110.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.17%)</title><rect x="1107.2" y="579.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1110.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.17%)</title><rect x="1107.2" y="563.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1110.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 0.13%)</title><rect x="1107.7" y="547.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1110.7" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.13%)</title><rect x="1107.7" y="531.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1110.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (4 samples, 0.08%)</title><rect x="1107.7" y="515.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1110.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (31 samples, 0.65%)</title><rect x="1109.2" y="627.0" width="7.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1112.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (28 samples, 0.59%)</title><rect x="1109.4" y="611.0" width="7.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (27 samples, 0.57%)</title><rect x="1109.7" y="595.0" width="6.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1112.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (27 samples, 0.57%)</title><rect x="1109.7" y="579.0" width="6.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1112.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (25 samples, 0.53%)</title><rect x="1109.9" y="563.0" width="6.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (24 samples, 0.51%)</title><rect x="1110.2" y="547.0" width="6.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1113.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (23 samples, 0.48%)</title><rect x="1110.4" y="531.0" width="5.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1113.4" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (23 samples, 0.48%)</title><rect x="1110.4" y="515.0" width="5.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1113.4" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (22 samples, 0.46%)</title><rect x="1110.7" y="499.0" width="5.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1113.7" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (14 samples, 0.29%)</title><rect x="1112.4" y="483.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1115.4" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="1112.4" y="467.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1115.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.21%)</title><rect x="1113.4" y="467.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1116.4" y="478.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.08%)</title><rect x="1114.2" y="451.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1117.2" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1115.4" y="451.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1118.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (2 samples, 0.04%)</title><rect x="1116.4" y="611.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1119.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (42 samples, 0.88%)</title><rect x="1117.2" y="627.0" width="10.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1120.2" y="638.0"></text>
</g>
<g>
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;) (2 samples, 0.04%)</title><rect x="1126.6" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1129.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="1127.1" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1130.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="1127.1" y="595.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1130.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="1127.1" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1130.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (58 samples, 1.22%)</title><rect x="1127.8" y="627.0" width="14.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1130.8" y="638.0"></text>
</g>
<g>
<title>__sched_yield (36 samples, 0.76%)</title><rect x="1127.8" y="611.0" width="9.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1130.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.72%)</title><rect x="1128.3" y="595.0" width="8.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1131.3" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.70%)</title><rect x="1128.6" y="579.0" width="8.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1131.6" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (25 samples, 0.53%)</title><rect x="1130.6" y="563.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1133.6" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (25 samples, 0.53%)</title><rect x="1130.6" y="547.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1133.6" y="558.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.53%)</title><rect x="1130.6" y="531.0" width="6.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1133.6" y="542.0"></text>
</g>
<g>
<title>__schedule (25 samples, 0.53%)</title><rect x="1130.6" y="515.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1133.6" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="1136.3" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1139.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (19 samples, 0.40%)</title><rect x="1137.0" y="611.0" width="4.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.0" y="622.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.04%)</title><rect x="1143.0" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.17%)</title><rect x="1143.8" y="659.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="1144.5" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.5" y="654.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="1145.2" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.23%)</title><rect x="1146.7" y="739.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1149.7" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.21%)</title><rect x="1146.7" y="723.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1149.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.15%)</title><rect x="1147.5" y="707.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.15%)</title><rect x="1147.5" y="691.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.15%)</title><rect x="1147.5" y="675.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1150.5" y="686.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.15%)</title><rect x="1147.5" y="659.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1150.5" y="670.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.15%)</title><rect x="1147.5" y="643.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1150.5" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.13%)</title><rect x="1147.5" y="627.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1150.5" y="638.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.13%)</title><rect x="1147.5" y="611.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1150.5" y="622.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.13%)</title><rect x="1147.5" y="595.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1150.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.13%)</title><rect x="1147.5" y="579.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.5" y="590.0"></text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.06%)</title><rect x="1149.5" y="739.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1152.5" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (89 samples, 1.88%)</title><rect x="1150.2" y="739.0" width="22.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1153.2" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (89 samples, 1.88%)</title><rect x="1150.2" y="723.0" width="22.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1153.2" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (89 samples, 1.88%)</title><rect x="1150.2" y="707.0" width="22.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.2" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (88 samples, 1.85%)</title><rect x="1150.5" y="691.0" width="21.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.5" y="702.0">_..</text>
</g>
<g>
<title>do_futex (88 samples, 1.85%)</title><rect x="1150.5" y="675.0" width="21.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1153.5" y="686.0">d..</text>
</g>
<g>
<title>futex_wake (88 samples, 1.85%)</title><rect x="1150.5" y="659.0" width="21.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.5" y="670.0">f..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.04%)</title><rect x="1150.5" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1153.5" y="654.0"></text>
</g>
<g>
<title>wake_up_q (86 samples, 1.81%)</title><rect x="1151.0" y="643.0" width="21.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1154.0" y="654.0">w..</text>
</g>
<g>
<title>try_to_wake_up (86 samples, 1.81%)</title><rect x="1151.0" y="627.0" width="21.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1154.0" y="638.0">t..</text>
</g>
<g>
<title>__lock_text_start (86 samples, 1.81%)</title><rect x="1151.0" y="611.0" width="21.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1154.0" y="622.0">_..</text>
</g>
<g>
<title>clock_gettime (16 samples, 0.34%)</title><rect x="1172.3" y="739.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1175.3" y="750.0"></text>
</g>
<g>
<title>clock_gettime (13 samples, 0.27%)</title><rect x="1173.1" y="723.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1176.1" y="734.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.25%)</title><rect x="1173.3" y="707.0" width="3.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1176.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (3 samples, 0.06%)</title><rect x="1176.3" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="1177.1" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="1177.1" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="1177.1" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.04%)</title><rect x="1177.6" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 0.36%)</title><rect x="1178.1" y="867.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1181.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.34%)</title><rect x="1178.1" y="851.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.1" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="1178.3" y="835.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1181.3" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="1178.3" y="819.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1181.3" y="830.0"></text>
</g>
<g>
<title>__recv (13 samples, 0.27%)</title><rect x="1178.8" y="835.0" width="3.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1181.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.25%)</title><rect x="1179.1" y="819.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.25%)</title><rect x="1179.1" y="803.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (12 samples, 0.25%)</title><rect x="1179.1" y="787.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1182.1" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.21%)</title><rect x="1179.1" y="771.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1182.1" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (8 samples, 0.17%)</title><rect x="1179.6" y="755.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1182.6" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 0.15%)</title><rect x="1179.8" y="739.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.8" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.13%)</title><rect x="1180.1" y="723.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.1" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.08%)</title><rect x="1180.6" y="707.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1183.6" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.08%)</title><rect x="1180.6" y="691.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1183.6" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.06%)</title><rect x="1180.8" y="675.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1183.8" y="686.0"></text>
</g>
<g>
<title>[rocksdb:high0 tid=44055] (31 samples, 0.65%)</title><rect x="1182.3" y="931.0" width="7.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1185.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.65%)</title><rect x="1182.3" y="915.0" width="7.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1185.3" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="1182.3" y="899.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1185.3" y="910.0"></text>
</g>
<g>
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)(void*), rocksdb::BGThreadMetadata*&gt; &gt; &gt;::~_State_impl() (26 samples, 0.55%)</title><rect x="1183.5" y="899.0" width="6.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.55%)</title><rect x="1183.5" y="883.0" width="6.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1186.5" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (26 samples, 0.55%)</title><rect x="1183.5" y="867.0" width="6.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1186.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (26 samples, 0.55%)</title><rect x="1183.5" y="851.0" width="6.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.5" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (26 samples, 0.55%)</title><rect x="1183.5" y="835.0" width="6.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (26 samples, 0.55%)</title><rect x="1183.5" y="819.0" width="6.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (26 samples, 0.55%)</title><rect x="1183.5" y="803.0" width="6.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, 8ul&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (26 samples, 0.55%)</title><rect x="1183.5" y="787.0" width="6.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (26 samples, 0.55%)</title><rect x="1183.5" y="771.0" width="6.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*) (26 samples, 0.55%)</title><rect x="1183.5" y="755.0" width="6.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::WriteLevel0Table() (26 samples, 0.55%)</title><rect x="1183.5" y="739.0" width="6.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::BuildTable(std::string const&amp;, rocksdb::Env*, rocksdb::FileSystem*, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&amp;, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_delete&lt;rocksdb::IntTblPropCollectorFactory&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_del (25 samples, 0.53%)</title><rect x="1183.8" y="723.0" width="6.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.13%)</title><rect x="1184.5" y="707.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (2 samples, 0.04%)</title><rect x="1184.8" y="691.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::Next() (12 samples, 0.25%)</title><rect x="1186.0" y="707.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.0" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8037178431970180140.so (3 samples, 0.06%)</title><rect x="1186.5" y="691.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (5 samples, 0.11%)</title><rect x="1187.5" y="691.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.5" y="702.0"></text>
</g>
</g>
</svg>
