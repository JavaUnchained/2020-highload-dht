<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="325"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="325"> </text>
<g id="frames">
<g>
<title>all (165,318 samples, 100.00%)</title><rect x="10.0" y="291.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="302.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (106,093 samples, 64.18%)</title><rect x="10.0" y="275.0" width="757.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="286.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (106,093 samples, 64.18%)</title><rect x="10.0" y="259.0" width="757.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="270.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (106,093 samples, 64.18%)</title><rect x="10.0" y="243.0" width="757.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="254.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4,626 samples, 2.80%)</title><rect x="10.0" y="227.0" width="33.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="238.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4,626 samples, 2.80%)</title><rect x="10.0" y="211.0" width="33.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="222.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4,563 samples, 2.76%)</title><rect x="10.0" y="195.0" width="32.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="206.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4,563 samples, 2.76%)</title><rect x="10.0" y="179.0" width="32.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="190.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4,563 samples, 2.76%)</title><rect x="10.0" y="163.0" width="32.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (63 samples, 0.04%)</title><rect x="42.6" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (63 samples, 0.04%)</title><rect x="42.6" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (63 samples, 0.04%)</title><rect x="42.6" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (63 samples, 0.04%)</title><rect x="42.6" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.6" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (63 samples, 0.04%)</title><rect x="42.6" y="131.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="45.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl$$Lambda$70/388576847.run (53,010 samples, 32.07%)</title><rect x="43.0" y="227.0" width="378.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.0" y="238.0">ru/mail/polis/service/kovalkov/SharedAsyncServiceImp..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl.lambda$proxyForwarding$2 (53,010 samples, 32.07%)</title><rect x="43.0" y="211.0" width="378.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.0" y="222.0">ru/mail/polis/service/kovalkov/SharedAsyncServiceImp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (522 samples, 0.32%)</title><rect x="43.0" y="195.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (522 samples, 0.32%)</title><rect x="43.0" y="179.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (389 samples, 0.24%)</title><rect x="43.0" y="163.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (389 samples, 0.24%)</title><rect x="43.0" y="147.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.0" y="158.0"></text>
</g>
<g>
<title>byte[] (389 samples, 0.24%)</title><rect x="43.0" y="131.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="46.0" y="142.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (133 samples, 0.08%)</title><rect x="45.8" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.8" y="174.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (133 samples, 0.08%)</title><rect x="45.8" y="147.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="48.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl.proxy (52,488 samples, 31.75%)</title><rect x="46.7" y="195.0" width="374.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.7" y="206.0">ru/mail/polis/service/kovalkov/SharedAsyncServiceIm..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (52,488 samples, 31.75%)</title><rect x="46.7" y="179.0" width="374.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.7" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (52,488 samples, 31.75%)</title><rect x="46.7" y="163.0" width="374.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.7" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (128 samples, 0.08%)</title><rect x="46.7" y="147.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="49.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (49,101 samples, 29.70%)</title><rect x="47.7" y="147.0" width="350.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.7" y="158.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (16,656 samples, 10.08%)</title><rect x="47.7" y="131.0" width="118.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="50.7" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (32,445 samples, 19.63%)</title><rect x="166.5" y="131.0" width="231.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="169.5" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2,668 samples, 1.61%)</title><rect x="398.1" y="147.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.1" y="158.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.06%)</title><rect x="398.1" y="131.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="401.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (151 samples, 0.09%)</title><rect x="398.9" y="131.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (151 samples, 0.09%)</title><rect x="398.9" y="115.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.04%)</title><rect x="398.9" y="99.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="401.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (79 samples, 0.05%)</title><rect x="399.4" y="99.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.4" y="110.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.05%)</title><rect x="399.4" y="83.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="402.4" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (76 samples, 0.05%)</title><rect x="400.0" y="131.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="403.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2,040 samples, 1.23%)</title><rect x="400.5" y="131.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,040 samples, 1.23%)</title><rect x="400.5" y="115.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,040 samples, 1.23%)</title><rect x="400.5" y="99.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.5" y="110.0"></text>
</g>
<g>
<title>char[] (1,321 samples, 0.80%)</title><rect x="400.5" y="83.0" width="9.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="403.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (307 samples, 0.19%)</title><rect x="409.9" y="83.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="412.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (412 samples, 0.25%)</title><rect x="412.1" y="83.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (412 samples, 0.25%)</title><rect x="412.1" y="67.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (412 samples, 0.25%)</title><rect x="412.1" y="51.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.1" y="62.0"></text>
</g>
<g>
<title>byte[] (412 samples, 0.25%)</title><rect x="412.1" y="35.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="415.1" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (129 samples, 0.08%)</title><rect x="415.1" y="131.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (129 samples, 0.08%)</title><rect x="415.1" y="115.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="418.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (166 samples, 0.10%)</title><rect x="416.0" y="131.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (166 samples, 0.10%)</title><rect x="416.0" y="115.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (166 samples, 0.10%)</title><rect x="416.0" y="99.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.05%)</title><rect x="416.0" y="83.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="419.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (88 samples, 0.05%)</title><rect x="416.5" y="83.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.5" y="94.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.05%)</title><rect x="416.5" y="67.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="419.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (291 samples, 0.18%)</title><rect x="417.2" y="147.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (291 samples, 0.18%)</title><rect x="417.2" y="131.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.2" y="142.0"></text>
</g>
<g>
<title>byte[] (291 samples, 0.18%)</title><rect x="417.2" y="115.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="420.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (207 samples, 0.13%)</title><rect x="419.3" y="147.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (207 samples, 0.13%)</title><rect x="419.3" y="131.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (207 samples, 0.13%)</title><rect x="419.3" y="115.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (90 samples, 0.05%)</title><rect x="419.3" y="99.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="422.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (117 samples, 0.07%)</title><rect x="419.9" y="99.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.9" y="110.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.07%)</title><rect x="419.9" y="83.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="422.9" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (93 samples, 0.06%)</title><rect x="420.7" y="147.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.7" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (93 samples, 0.06%)</title><rect x="420.7" y="131.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.7" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (93 samples, 0.06%)</title><rect x="420.7" y="115.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.7" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (93 samples, 0.06%)</title><rect x="420.7" y="99.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="423.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl$$Lambda$74/2003223169.run (48,457 samples, 29.31%)</title><rect x="421.4" y="227.0" width="345.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.4" y="238.0">ru/mail/polis/service/kovalkov/SharedAsyncServi..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl.lambda$get$3 (48,457 samples, 29.31%)</title><rect x="421.4" y="211.0" width="345.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.4" y="222.0">ru/mail/polis/service/kovalkov/SharedAsyncServi..</text>
</g>
<g>
<title>java/lang/String.getBytes (5,084 samples, 3.08%)</title><rect x="421.4" y="195.0" width="36.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.4" y="206.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (5,084 samples, 3.08%)</title><rect x="421.4" y="179.0" width="36.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.4" y="190.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5,084 samples, 3.08%)</title><rect x="421.4" y="163.0" width="36.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.4" y="174.0">jav..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (5,084 samples, 3.08%)</title><rect x="421.4" y="147.0" width="36.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.4" y="158.0">jav..</text>
</g>
<g>
<title>byte[] (5,084 samples, 3.08%)</title><rect x="421.4" y="131.0" width="36.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="424.4" y="142.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (16,780 samples, 10.15%)</title><rect x="457.7" y="195.0" width="119.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.7" y="206.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (16,780 samples, 10.15%)</title><rect x="457.7" y="179.0" width="119.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.7" y="190.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11,837 samples, 7.16%)</title><rect x="457.7" y="163.0" width="84.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.7" y="174.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11,837 samples, 7.16%)</title><rect x="457.7" y="147.0" width="84.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.7" y="158.0">one/nio/ut..</text>
</g>
<g>
<title>byte[] (9,322 samples, 5.64%)</title><rect x="457.7" y="131.0" width="66.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="460.7" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (2,515 samples, 1.52%)</title><rect x="524.2" y="131.0" width="18.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="527.2" y="142.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4,943 samples, 2.99%)</title><rect x="542.2" y="163.0" width="35.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.2" y="174.0">one..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4,943 samples, 2.99%)</title><rect x="542.2" y="147.0" width="35.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="545.2" y="158.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.ok (13,943 samples, 8.43%)</title><rect x="577.5" y="195.0" width="99.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.5" y="206.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.Response (2,632 samples, 1.59%)</title><rect x="577.5" y="179.0" width="18.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="580.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11,311 samples, 6.84%)</title><rect x="596.2" y="179.0" width="80.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.2" y="190.0">one/nio/h..</text>
</g>
<g>
<title>byte[] (4,736 samples, 2.86%)</title><rect x="596.2" y="163.0" width="33.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="599.2" y="174.0">by..</text>
</g>
<g>
<title>java.lang.String[] (3,713 samples, 2.25%)</title><rect x="630.0" y="163.0" width="26.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="633.0" y="174.0">j..</text>
</g>
<g>
<title>java.lang.String (2,862 samples, 1.73%)</title><rect x="656.5" y="163.0" width="20.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="659.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/DAOImpl.get (8,904 samples, 5.39%)</title><rect x="677.0" y="195.0" width="63.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.0" y="206.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (3,847 samples, 2.33%)</title><rect x="677.0" y="179.0" width="27.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.0" y="190.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (3,847 samples, 2.33%)</title><rect x="677.0" y="163.0" width="27.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.0" y="174.0">o..</text>
</g>
<g>
<title>byte[] (3,847 samples, 2.33%)</title><rect x="677.0" y="147.0" width="27.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="680.0" y="158.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.convertBytes (5,057 samples, 3.06%)</title><rect x="704.4" y="179.0" width="36.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.4" y="190.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (5,057 samples, 3.06%)</title><rect x="704.4" y="163.0" width="36.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.4" y="174.0">ru/..</text>
</g>
<g>
<title>byte[] (5,057 samples, 3.06%)</title><rect x="704.4" y="147.0" width="36.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="707.4" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/kovalkov/utils/BufferConverter.unfoldToBytes (3,746 samples, 2.27%)</title><rect x="740.5" y="195.0" width="26.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.5" y="206.0">r..</text>
</g>
<g>
<title>byte[] (3,746 samples, 2.27%)</title><rect x="740.5" y="179.0" width="26.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="743.5" y="190.0">b..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (59,225 samples, 35.82%)</title><rect x="767.3" y="275.0" width="422.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.3" y="286.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,894 samples, 1.75%)</title><rect x="767.3" y="259.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.3" y="270.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,894 samples, 1.75%)</title><rect x="767.3" y="243.0" width="20.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="770.3" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (56,331 samples, 34.07%)</title><rect x="787.9" y="259.0" width="402.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.9" y="270.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (56,331 samples, 34.07%)</title><rect x="787.9" y="243.0" width="402.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.9" y="254.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (56,331 samples, 34.07%)</title><rect x="787.9" y="227.0" width="402.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.9" y="238.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17,609 samples, 10.65%)</title><rect x="787.9" y="211.0" width="125.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.9" y="222.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (17,609 samples, 10.65%)</title><rect x="787.9" y="195.0" width="125.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.9" y="206.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (11,555 samples, 6.99%)</title><rect x="787.9" y="179.0" width="82.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.9" y="190.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5,368 samples, 3.25%)</title><rect x="787.9" y="163.0" width="38.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.9" y="174.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5,368 samples, 3.25%)</title><rect x="787.9" y="147.0" width="38.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.9" y="158.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (5,368 samples, 3.25%)</title><rect x="787.9" y="131.0" width="38.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.9" y="142.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,368 samples, 3.25%)</title><rect x="787.9" y="115.0" width="38.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.9" y="126.0">jav..</text>
</g>
<g>
<title>java.lang.String (2,284 samples, 1.38%)</title><rect x="787.9" y="99.0" width="16.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="790.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,084 samples, 1.87%)</title><rect x="804.2" y="99.0" width="22.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.2" y="110.0">j..</text>
</g>
<g>
<title>byte[] (3,084 samples, 1.87%)</title><rect x="804.2" y="83.0" width="22.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="807.2" y="94.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl.get (6,187 samples, 3.74%)</title><rect x="826.2" y="163.0" width="44.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.2" y="174.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,912 samples, 1.16%)</title><rect x="826.2" y="147.0" width="13.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,912 samples, 1.16%)</title><rect x="826.2" y="131.0" width="13.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl$$Lambda$74/2003223169.get$Lambda (1,912 samples, 1.16%)</title><rect x="826.2" y="115.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.2" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.SharedAsyncServiceImpl$$Lambda$74 (1,912 samples, 1.16%)</title><rect x="826.2" y="99.0" width="13.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="829.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl.checkIdAndReturnTargetNode (3,394 samples, 2.05%)</title><rect x="840.1" y="147.0" width="24.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.1" y="158.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (3,394 samples, 2.05%)</title><rect x="840.1" y="131.0" width="24.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.1" y="142.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (3,394 samples, 2.05%)</title><rect x="840.1" y="115.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.1" y="126.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3,394 samples, 2.05%)</title><rect x="840.1" y="99.0" width="24.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.1" y="110.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,394 samples, 2.05%)</title><rect x="840.1" y="83.0" width="24.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.1" y="94.0">j..</text>
</g>
<g>
<title>byte[] (3,394 samples, 2.05%)</title><rect x="840.1" y="67.0" width="24.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="843.1" y="78.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl.proxyForwarding (846 samples, 0.51%)</title><rect x="864.4" y="147.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (826 samples, 0.50%)</title><rect x="864.4" y="131.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (826 samples, 0.50%)</title><rect x="864.4" y="115.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kovalkov/SharedAsyncServiceImpl$$Lambda$70/388576847.get$Lambda (826 samples, 0.50%)</title><rect x="864.4" y="99.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.kovalkov.SharedAsyncServiceImpl$$Lambda$70 (826 samples, 0.50%)</title><rect x="864.4" y="83.0" width="5.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="867.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6,054 samples, 3.66%)</title><rect x="870.4" y="179.0" width="43.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.4" y="190.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (6,054 samples, 3.66%)</title><rect x="870.4" y="163.0" width="43.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.4" y="174.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,054 samples, 3.66%)</title><rect x="870.4" y="147.0" width="43.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.4" y="158.0">java..</text>
</g>
<g>
<title>java.lang.String (2,375 samples, 1.44%)</title><rect x="870.4" y="131.0" width="17.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="873.4" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,679 samples, 2.23%)</title><rect x="887.4" y="131.0" width="26.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.4" y="142.0">j..</text>
</g>
<g>
<title>byte[] (3,679 samples, 2.23%)</title><rect x="887.4" y="115.0" width="26.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="890.4" y="126.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (26,520 samples, 16.04%)</title><rect x="913.6" y="211.0" width="189.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.6" y="222.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one.nio.http.Request (4,017 samples, 2.43%)</title><rect x="913.6" y="195.0" width="28.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="916.6" y="206.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9,039 samples, 5.47%)</title><rect x="942.3" y="195.0" width="64.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="945.3" y="206.0">one/nio..</text>
</g>
<g>
<title>java.lang.String[] (9,039 samples, 5.47%)</title><rect x="942.3" y="179.0" width="64.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="945.3" y="190.0">java.la..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,464 samples, 8.14%)</title><rect x="1006.8" y="195.0" width="96.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.8" y="206.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,464 samples, 8.14%)</title><rect x="1006.8" y="179.0" width="96.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.8" y="190.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (7,236 samples, 4.38%)</title><rect x="1006.8" y="163.0" width="51.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1009.8" y="174.0">char[]</text>
</g>
<g>
<title>java.lang.String (2,170 samples, 1.31%)</title><rect x="1058.5" y="163.0" width="15.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1061.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,058 samples, 2.45%)</title><rect x="1073.9" y="163.0" width="29.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.9" y="174.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,058 samples, 2.45%)</title><rect x="1073.9" y="147.0" width="29.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.9" y="158.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,058 samples, 2.45%)</title><rect x="1073.9" y="131.0" width="29.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.9" y="142.0">ja..</text>
</g>
<g>
<title>byte[] (4,058 samples, 2.45%)</title><rect x="1073.9" y="115.0" width="29.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1076.9" y="126.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,202 samples, 7.38%)</title><rect x="1102.9" y="211.0" width="87.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.9" y="222.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,202 samples, 7.38%)</title><rect x="1102.9" y="195.0" width="87.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.9" y="206.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (5,518 samples, 3.34%)</title><rect x="1102.9" y="179.0" width="39.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1105.9" y="190.0">cha..</text>
</g>
<g>
<title>java.lang.String (2,608 samples, 1.58%)</title><rect x="1142.3" y="179.0" width="18.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1145.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,076 samples, 2.47%)</title><rect x="1160.9" y="179.0" width="29.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.9" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,076 samples, 2.47%)</title><rect x="1160.9" y="163.0" width="29.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.9" y="174.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,076 samples, 2.47%)</title><rect x="1160.9" y="147.0" width="29.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.9" y="158.0">ja..</text>
</g>
<g>
<title>byte[] (4,076 samples, 2.47%)</title><rect x="1160.9" y="131.0" width="29.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1163.9" y="142.0">by..</text>
</g>
</g>
</svg>
